2022-11-05 17:56:07,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:56:07,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:56:07,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:56:07,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:56:09,269:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-11-05 17:59:55,819:INFO:PyCaret RegressionExperiment
2022-11-05 17:59:55,820:INFO:Logging name: reg-default-name
2022-11-05 17:59:55,820:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 17:59:55,820:INFO:version 3.0.0.rc4
2022-11-05 17:59:55,820:INFO:Initializing setup()
2022-11-05 17:59:55,820:INFO:self.USI: 37fd
2022-11-05 17:59:55,820:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 17:59:55,820:INFO:Checking environment
2022-11-05 17:59:55,820:INFO:python_version: 3.9.6
2022-11-05 17:59:55,820:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 17:59:55,820:INFO:machine: x86_64
2022-11-05 17:59:55,820:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 17:59:55,820:INFO:Memory: svmem(total=17179869184, available=6805184512, percent=60.4, used=9127071744, free=92753920, active=6716719104, inactive=6701928448, wired=2410352640)
2022-11-05 17:59:55,821:INFO:Physical Core: 4
2022-11-05 17:59:55,821:INFO:Logical Core: 4
2022-11-05 17:59:55,821:INFO:Checking libraries
2022-11-05 17:59:55,822:INFO:System:
2022-11-05 17:59:55,822:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 17:59:55,822:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 17:59:55,822:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 17:59:55,823:INFO:PyCaret required dependencies:
2022-11-05 17:59:55,823:INFO:                 pip: 21.2.4
2022-11-05 17:59:55,824:INFO:          setuptools: 58.0.4
2022-11-05 17:59:55,824:INFO:             pycaret: 3.0.0rc4
2022-11-05 17:59:55,824:INFO:             IPython: 8.6.0
2022-11-05 17:59:55,824:INFO:          ipywidgets: 8.0.2
2022-11-05 17:59:55,824:INFO:                tqdm: 4.64.1
2022-11-05 17:59:55,824:INFO:               numpy: 1.22.4
2022-11-05 17:59:55,824:INFO:              pandas: 1.4.4
2022-11-05 17:59:55,825:INFO:              jinja2: 3.1.2
2022-11-05 17:59:55,825:INFO:               scipy: 1.8.1
2022-11-05 17:59:55,825:INFO:              joblib: 1.2.0
2022-11-05 17:59:55,825:INFO:             sklearn: 1.1.3
2022-11-05 17:59:55,825:INFO:                pyod: 1.0.6
2022-11-05 17:59:55,825:INFO:            imblearn: 0.9.1
2022-11-05 17:59:55,826:INFO:   category_encoders: 2.5.1.post0
2022-11-05 17:59:55,826:INFO:            lightgbm: 3.3.3
2022-11-05 17:59:55,826:INFO:               numba: 0.55.2
2022-11-05 17:59:55,826:INFO:            requests: 2.28.1
2022-11-05 17:59:55,826:INFO:          matplotlib: 3.6.2
2022-11-05 17:59:55,826:INFO:          scikitplot: 0.3.7
2022-11-05 17:59:55,826:INFO:         yellowbrick: 1.5
2022-11-05 17:59:55,827:INFO:              plotly: 5.11.0
2022-11-05 17:59:55,827:INFO:             kaleido: 0.2.1
2022-11-05 17:59:55,827:INFO:         statsmodels: 0.13.5
2022-11-05 17:59:55,827:INFO:              sktime: 0.13.4
2022-11-05 17:59:55,827:INFO:               tbats: 1.1.1
2022-11-05 17:59:55,827:INFO:            pmdarima: 1.8.5
2022-11-05 17:59:55,827:INFO:              psutil: 5.9.3
2022-11-05 17:59:55,827:INFO:PyCaret optional dependencies:
2022-11-05 17:59:55,835:INFO:                shap: Not installed
2022-11-05 17:59:55,836:INFO:           interpret: Not installed
2022-11-05 17:59:55,836:INFO:                umap: Not installed
2022-11-05 17:59:55,836:INFO:    pandas_profiling: Not installed
2022-11-05 17:59:55,836:INFO:  explainerdashboard: Not installed
2022-11-05 17:59:55,836:INFO:             autoviz: Not installed
2022-11-05 17:59:55,836:INFO:           fairlearn: Not installed
2022-11-05 17:59:55,836:INFO:             xgboost: Not installed
2022-11-05 17:59:55,836:INFO:            catboost: Not installed
2022-11-05 17:59:55,836:INFO:              kmodes: Not installed
2022-11-05 17:59:55,836:INFO:             mlxtend: Not installed
2022-11-05 17:59:55,836:INFO:       statsforecast: Not installed
2022-11-05 17:59:55,836:INFO:        tune_sklearn: Not installed
2022-11-05 17:59:55,836:INFO:                 ray: Not installed
2022-11-05 17:59:55,836:INFO:            hyperopt: Not installed
2022-11-05 17:59:55,837:INFO:              optuna: Not installed
2022-11-05 17:59:55,837:INFO:               skopt: Not installed
2022-11-05 17:59:55,837:INFO:              mlflow: Not installed
2022-11-05 17:59:55,837:INFO:              gradio: Not installed
2022-11-05 17:59:55,837:INFO:             fastapi: Not installed
2022-11-05 17:59:55,837:INFO:             uvicorn: Not installed
2022-11-05 17:59:55,837:INFO:              m2cgen: Not installed
2022-11-05 17:59:55,837:INFO:           evidently: Not installed
2022-11-05 17:59:55,837:INFO:                nltk: Not installed
2022-11-05 17:59:55,837:INFO:            pyLDAvis: Not installed
2022-11-05 17:59:55,837:INFO:              gensim: Not installed
2022-11-05 17:59:55,837:INFO:               spacy: 3.4.2
2022-11-05 17:59:55,837:INFO:           wordcloud: Not installed
2022-11-05 17:59:55,837:INFO:            textblob: Not installed
2022-11-05 17:59:55,838:INFO:               fugue: Not installed
2022-11-05 17:59:55,838:INFO:           streamlit: Not installed
2022-11-05 17:59:55,838:INFO:             prophet: Not installed
2022-11-05 17:59:55,838:INFO:None
2022-11-05 17:59:55,838:INFO:Set up data.
2022-11-05 17:59:55,856:INFO:Set up train/test split.
2022-11-05 17:59:55,873:INFO:Set up index.
2022-11-05 17:59:55,874:INFO:Set up folding strategy.
2022-11-05 17:59:55,874:INFO:Assigning column types.
2022-11-05 17:59:55,879:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 17:59:55,880:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 17:59:55,888:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 17:59:55,896:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,006:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,150:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,158:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,165:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,348:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 17:59:56,356:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,536:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,545:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,553:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,730:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 17:59:56,745:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:56,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:56,939:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,118:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,119:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 17:59:57,242:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,437:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,513:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 17:59:57,626:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 17:59:57,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:57,891:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 17:59:58,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:58,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:58,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:58,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:59:58,272:INFO:Preparing preprocessing pipeline...
2022-11-05 17:59:58,274:INFO:Set up simple imputation.
2022-11-05 17:59:58,278:INFO:Set up encoding of categorical features.
2022-11-05 17:59:58,279:INFO:Set up variance threshold.
2022-11-05 17:59:58,966:INFO:Finished creating preprocessing pipeline.
2022-11-05 17:59:58,978:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 17:59:58,979:INFO:Creating final display dataframe.
2022-11-05 18:00:01,331:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 9)
4           Train data shape        (10124, 9)
5            Test data shape         (4340, 9)
6           Numeric features                 4
7       Categorical features                 4
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              37fd
2022-11-05 18:00:01,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:00:01,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:00:01,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:00:01,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:00:01,745:INFO:setup() successfully completed in 5.93s...............
2022-11-05 18:00:29,057:INFO:Initializing compare_models()
2022-11-05 18:00:29,058:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:00:29,059:INFO:Checking exceptions
2022-11-05 18:00:29,063:INFO:Preparing display monitor
2022-11-05 18:00:29,159:INFO:Initializing Linear Regression
2022-11-05 18:00:29,160:INFO:Total runtime is 9.0638796488444e-06 minutes
2022-11-05 18:00:29,165:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:29,166:INFO:Initializing create_model()
2022-11-05 18:00:29,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:29,166:INFO:Checking exceptions
2022-11-05 18:00:29,174:INFO:Importing libraries
2022-11-05 18:00:29,174:INFO:Copying training dataset
2022-11-05 18:00:29,185:INFO:Defining folds
2022-11-05 18:00:29,185:INFO:Declaring metric variables
2022-11-05 18:00:29,192:INFO:Importing untrained model
2022-11-05 18:00:29,205:INFO:Linear Regression Imported successfully
2022-11-05 18:00:29,213:INFO:Cross validation set to False
2022-11-05 18:00:29,213:INFO:Fitting Model
2022-11-05 18:00:30,006:INFO:Initializing predict_model()
2022-11-05 18:00:30,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141eb2310>)
2022-11-05 18:00:30,006:INFO:Checking exceptions
2022-11-05 18:00:30,006:INFO:Preloading libraries
2022-11-05 18:00:30,501:INFO:display_container: 2
2022-11-05 18:00:30,504:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:00:30,505:INFO:create_model() successfully completed......................................
2022-11-05 18:00:30,783:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:30,783:INFO:Creating metrics dataframe
2022-11-05 18:00:30,796:INFO:Initializing Lasso Regression
2022-11-05 18:00:30,796:INFO:Total runtime is 0.027280934651692706 minutes
2022-11-05 18:00:30,801:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:30,802:INFO:Initializing create_model()
2022-11-05 18:00:30,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:30,802:INFO:Checking exceptions
2022-11-05 18:00:30,806:INFO:Importing libraries
2022-11-05 18:00:30,806:INFO:Copying training dataset
2022-11-05 18:00:30,816:INFO:Defining folds
2022-11-05 18:00:30,817:INFO:Declaring metric variables
2022-11-05 18:00:30,822:INFO:Importing untrained model
2022-11-05 18:00:30,837:INFO:Lasso Regression Imported successfully
2022-11-05 18:00:30,850:INFO:Cross validation set to False
2022-11-05 18:00:30,850:INFO:Fitting Model
2022-11-05 18:00:31,117:INFO:Initializing predict_model()
2022-11-05 18:00:31,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d032160>)
2022-11-05 18:00:31,118:INFO:Checking exceptions
2022-11-05 18:00:31,118:INFO:Preloading libraries
2022-11-05 18:00:31,529:INFO:display_container: 2
2022-11-05 18:00:31,531:INFO:Lasso(random_state=23)
2022-11-05 18:00:31,532:INFO:create_model() successfully completed......................................
2022-11-05 18:00:31,800:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:31,800:INFO:Creating metrics dataframe
2022-11-05 18:00:31,814:INFO:Initializing Ridge Regression
2022-11-05 18:00:31,814:INFO:Total runtime is 0.04425116380055745 minutes
2022-11-05 18:00:31,819:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:31,819:INFO:Initializing create_model()
2022-11-05 18:00:31,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:31,819:INFO:Checking exceptions
2022-11-05 18:00:31,825:INFO:Importing libraries
2022-11-05 18:00:31,825:INFO:Copying training dataset
2022-11-05 18:00:31,832:INFO:Defining folds
2022-11-05 18:00:31,832:INFO:Declaring metric variables
2022-11-05 18:00:31,837:INFO:Importing untrained model
2022-11-05 18:00:31,842:INFO:Ridge Regression Imported successfully
2022-11-05 18:00:31,849:INFO:Cross validation set to False
2022-11-05 18:00:31,849:INFO:Fitting Model
2022-11-05 18:00:32,077:INFO:Initializing predict_model()
2022-11-05 18:00:32,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d032160>)
2022-11-05 18:00:32,078:INFO:Checking exceptions
2022-11-05 18:00:32,078:INFO:Preloading libraries
2022-11-05 18:00:32,463:INFO:display_container: 2
2022-11-05 18:00:32,465:INFO:Ridge(random_state=23)
2022-11-05 18:00:32,465:INFO:create_model() successfully completed......................................
2022-11-05 18:00:32,720:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:32,720:INFO:Creating metrics dataframe
2022-11-05 18:00:32,734:INFO:Initializing Elastic Net
2022-11-05 18:00:32,735:INFO:Total runtime is 0.0595892310142517 minutes
2022-11-05 18:00:32,739:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:32,739:INFO:Initializing create_model()
2022-11-05 18:00:32,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:32,740:INFO:Checking exceptions
2022-11-05 18:00:32,744:INFO:Importing libraries
2022-11-05 18:00:32,744:INFO:Copying training dataset
2022-11-05 18:00:32,750:INFO:Defining folds
2022-11-05 18:00:32,750:INFO:Declaring metric variables
2022-11-05 18:00:32,755:INFO:Importing untrained model
2022-11-05 18:00:32,764:INFO:Elastic Net Imported successfully
2022-11-05 18:00:32,769:INFO:Cross validation set to False
2022-11-05 18:00:32,769:INFO:Fitting Model
2022-11-05 18:00:32,989:INFO:Initializing predict_model()
2022-11-05 18:00:32,989:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d032d30>)
2022-11-05 18:00:32,989:INFO:Checking exceptions
2022-11-05 18:00:32,989:INFO:Preloading libraries
2022-11-05 18:00:33,555:INFO:display_container: 2
2022-11-05 18:00:33,557:INFO:ElasticNet(random_state=23)
2022-11-05 18:00:33,557:INFO:create_model() successfully completed......................................
2022-11-05 18:00:34,212:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:34,212:INFO:Creating metrics dataframe
2022-11-05 18:00:34,230:INFO:Initializing Least Angle Regression
2022-11-05 18:00:34,231:INFO:Total runtime is 0.08452697992324829 minutes
2022-11-05 18:00:34,236:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:34,236:INFO:Initializing create_model()
2022-11-05 18:00:34,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:34,238:INFO:Checking exceptions
2022-11-05 18:00:34,242:INFO:Importing libraries
2022-11-05 18:00:34,242:INFO:Copying training dataset
2022-11-05 18:00:34,250:INFO:Defining folds
2022-11-05 18:00:34,250:INFO:Declaring metric variables
2022-11-05 18:00:34,255:INFO:Importing untrained model
2022-11-05 18:00:34,260:INFO:Least Angle Regression Imported successfully
2022-11-05 18:00:34,271:INFO:Cross validation set to False
2022-11-05 18:00:34,271:INFO:Fitting Model
2022-11-05 18:00:34,502:INFO:Initializing predict_model()
2022-11-05 18:00:34,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0321f0>)
2022-11-05 18:00:34,503:INFO:Checking exceptions
2022-11-05 18:00:34,503:INFO:Preloading libraries
2022-11-05 18:00:34,902:INFO:display_container: 2
2022-11-05 18:00:34,904:INFO:Lars(random_state=23)
2022-11-05 18:00:34,904:INFO:create_model() successfully completed......................................
2022-11-05 18:00:35,180:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:35,181:INFO:Creating metrics dataframe
2022-11-05 18:00:35,195:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:00:35,196:INFO:Total runtime is 0.1006080150604248 minutes
2022-11-05 18:00:35,201:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:35,201:INFO:Initializing create_model()
2022-11-05 18:00:35,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:35,202:INFO:Checking exceptions
2022-11-05 18:00:35,206:INFO:Importing libraries
2022-11-05 18:00:35,206:INFO:Copying training dataset
2022-11-05 18:00:35,212:INFO:Defining folds
2022-11-05 18:00:35,212:INFO:Declaring metric variables
2022-11-05 18:00:35,218:INFO:Importing untrained model
2022-11-05 18:00:35,223:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:00:35,229:INFO:Cross validation set to False
2022-11-05 18:00:35,229:INFO:Fitting Model
2022-11-05 18:00:35,464:INFO:Initializing predict_model()
2022-11-05 18:00:35,464:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0320d0>)
2022-11-05 18:00:35,464:INFO:Checking exceptions
2022-11-05 18:00:35,465:INFO:Preloading libraries
2022-11-05 18:00:35,894:INFO:display_container: 2
2022-11-05 18:00:35,897:INFO:LassoLars(random_state=23)
2022-11-05 18:00:35,897:INFO:create_model() successfully completed......................................
2022-11-05 18:00:36,189:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:36,189:INFO:Creating metrics dataframe
2022-11-05 18:00:36,206:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:00:36,206:INFO:Total runtime is 0.11745531558990478 minutes
2022-11-05 18:00:36,210:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:36,211:INFO:Initializing create_model()
2022-11-05 18:00:36,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:36,211:INFO:Checking exceptions
2022-11-05 18:00:36,217:INFO:Importing libraries
2022-11-05 18:00:36,217:INFO:Copying training dataset
2022-11-05 18:00:36,224:INFO:Defining folds
2022-11-05 18:00:36,225:INFO:Declaring metric variables
2022-11-05 18:00:36,242:INFO:Importing untrained model
2022-11-05 18:00:36,251:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:00:36,258:INFO:Cross validation set to False
2022-11-05 18:00:36,259:INFO:Fitting Model
2022-11-05 18:00:36,482:INFO:Initializing predict_model()
2022-11-05 18:00:36,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d032280>)
2022-11-05 18:00:36,482:INFO:Checking exceptions
2022-11-05 18:00:36,482:INFO:Preloading libraries
2022-11-05 18:00:36,876:INFO:display_container: 2
2022-11-05 18:00:36,878:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:00:36,878:INFO:create_model() successfully completed......................................
2022-11-05 18:00:37,131:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:37,131:INFO:Creating metrics dataframe
2022-11-05 18:00:37,147:INFO:Initializing Bayesian Ridge
2022-11-05 18:00:37,147:INFO:Total runtime is 0.13313428163528443 minutes
2022-11-05 18:00:37,152:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:37,153:INFO:Initializing create_model()
2022-11-05 18:00:37,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:37,153:INFO:Checking exceptions
2022-11-05 18:00:37,156:INFO:Importing libraries
2022-11-05 18:00:37,156:INFO:Copying training dataset
2022-11-05 18:00:37,163:INFO:Defining folds
2022-11-05 18:00:37,163:INFO:Declaring metric variables
2022-11-05 18:00:37,168:INFO:Importing untrained model
2022-11-05 18:00:37,173:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:00:37,179:INFO:Cross validation set to False
2022-11-05 18:00:37,179:INFO:Fitting Model
2022-11-05 18:00:37,398:INFO:Initializing predict_model()
2022-11-05 18:00:37,398:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d032040>)
2022-11-05 18:00:37,398:INFO:Checking exceptions
2022-11-05 18:00:37,398:INFO:Preloading libraries
2022-11-05 18:00:37,784:INFO:display_container: 2
2022-11-05 18:00:37,786:INFO:BayesianRidge()
2022-11-05 18:00:37,786:INFO:create_model() successfully completed......................................
2022-11-05 18:00:38,034:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:38,034:INFO:Creating metrics dataframe
2022-11-05 18:00:38,049:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:00:38,049:INFO:Total runtime is 0.1481676499048869 minutes
2022-11-05 18:00:38,054:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:38,055:INFO:Initializing create_model()
2022-11-05 18:00:38,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:38,055:INFO:Checking exceptions
2022-11-05 18:00:38,059:INFO:Importing libraries
2022-11-05 18:00:38,059:INFO:Copying training dataset
2022-11-05 18:00:38,065:INFO:Defining folds
2022-11-05 18:00:38,066:INFO:Declaring metric variables
2022-11-05 18:00:38,070:INFO:Importing untrained model
2022-11-05 18:00:38,075:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:00:38,083:INFO:Cross validation set to False
2022-11-05 18:00:38,083:INFO:Fitting Model
2022-11-05 18:00:38,319:INFO:Initializing predict_model()
2022-11-05 18:00:38,319:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0320d0>)
2022-11-05 18:00:38,319:INFO:Checking exceptions
2022-11-05 18:00:38,320:INFO:Preloading libraries
2022-11-05 18:00:38,700:INFO:display_container: 2
2022-11-05 18:00:38,705:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:00:38,706:INFO:create_model() successfully completed......................................
2022-11-05 18:00:38,963:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:38,963:INFO:Creating metrics dataframe
2022-11-05 18:00:38,979:INFO:Initializing Huber Regressor
2022-11-05 18:00:38,979:INFO:Total runtime is 0.1636634985605876 minutes
2022-11-05 18:00:38,984:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:38,984:INFO:Initializing create_model()
2022-11-05 18:00:38,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:38,985:INFO:Checking exceptions
2022-11-05 18:00:38,989:INFO:Importing libraries
2022-11-05 18:00:38,989:INFO:Copying training dataset
2022-11-05 18:00:38,994:INFO:Defining folds
2022-11-05 18:00:38,995:INFO:Declaring metric variables
2022-11-05 18:00:38,999:INFO:Importing untrained model
2022-11-05 18:00:39,005:INFO:Huber Regressor Imported successfully
2022-11-05 18:00:39,012:INFO:Cross validation set to False
2022-11-05 18:00:39,012:INFO:Fitting Model
2022-11-05 18:00:39,420:INFO:Initializing predict_model()
2022-11-05 18:00:39,421:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c7351f0>)
2022-11-05 18:00:39,421:INFO:Checking exceptions
2022-11-05 18:00:39,421:INFO:Preloading libraries
2022-11-05 18:00:39,810:INFO:display_container: 2
2022-11-05 18:00:39,812:INFO:HuberRegressor()
2022-11-05 18:00:39,812:INFO:create_model() successfully completed......................................
2022-11-05 18:00:40,064:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:40,064:INFO:Creating metrics dataframe
2022-11-05 18:00:40,081:INFO:Initializing K Neighbors Regressor
2022-11-05 18:00:40,081:INFO:Total runtime is 0.1820291837056478 minutes
2022-11-05 18:00:40,087:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:40,088:INFO:Initializing create_model()
2022-11-05 18:00:40,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:40,088:INFO:Checking exceptions
2022-11-05 18:00:40,092:INFO:Importing libraries
2022-11-05 18:00:40,092:INFO:Copying training dataset
2022-11-05 18:00:40,098:INFO:Defining folds
2022-11-05 18:00:40,098:INFO:Declaring metric variables
2022-11-05 18:00:40,104:INFO:Importing untrained model
2022-11-05 18:00:40,109:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:00:40,116:INFO:Cross validation set to False
2022-11-05 18:00:40,116:INFO:Fitting Model
2022-11-05 18:00:40,349:INFO:Initializing predict_model()
2022-11-05 18:00:40,349:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0321f0>)
2022-11-05 18:00:40,349:INFO:Checking exceptions
2022-11-05 18:00:40,350:INFO:Preloading libraries
2022-11-05 18:00:40,791:INFO:display_container: 2
2022-11-05 18:00:40,792:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:00:40,792:INFO:create_model() successfully completed......................................
2022-11-05 18:00:41,039:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:41,039:INFO:Creating metrics dataframe
2022-11-05 18:00:41,055:INFO:Initializing Decision Tree Regressor
2022-11-05 18:00:41,055:INFO:Total runtime is 0.19826858043670656 minutes
2022-11-05 18:00:41,060:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:41,060:INFO:Initializing create_model()
2022-11-05 18:00:41,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:41,060:INFO:Checking exceptions
2022-11-05 18:00:41,065:INFO:Importing libraries
2022-11-05 18:00:41,065:INFO:Copying training dataset
2022-11-05 18:00:41,072:INFO:Defining folds
2022-11-05 18:00:41,072:INFO:Declaring metric variables
2022-11-05 18:00:41,076:INFO:Importing untrained model
2022-11-05 18:00:41,081:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:00:41,096:INFO:Cross validation set to False
2022-11-05 18:00:41,097:INFO:Fitting Model
2022-11-05 18:00:41,398:INFO:Initializing predict_model()
2022-11-05 18:00:41,398:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c595790>)
2022-11-05 18:00:41,398:INFO:Checking exceptions
2022-11-05 18:00:41,398:INFO:Preloading libraries
2022-11-05 18:00:41,780:INFO:display_container: 2
2022-11-05 18:00:41,782:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:00:41,782:INFO:create_model() successfully completed......................................
2022-11-05 18:00:42,033:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:42,034:INFO:Creating metrics dataframe
2022-11-05 18:00:42,050:INFO:Initializing Random Forest Regressor
2022-11-05 18:00:42,050:INFO:Total runtime is 0.21485146284103396 minutes
2022-11-05 18:00:42,055:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:42,056:INFO:Initializing create_model()
2022-11-05 18:00:42,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:42,056:INFO:Checking exceptions
2022-11-05 18:00:42,060:INFO:Importing libraries
2022-11-05 18:00:42,060:INFO:Copying training dataset
2022-11-05 18:00:42,066:INFO:Defining folds
2022-11-05 18:00:42,066:INFO:Declaring metric variables
2022-11-05 18:00:42,071:INFO:Importing untrained model
2022-11-05 18:00:42,076:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:00:42,082:INFO:Cross validation set to False
2022-11-05 18:00:42,083:INFO:Fitting Model
2022-11-05 18:00:44,033:INFO:Initializing predict_model()
2022-11-05 18:00:44,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d025160>)
2022-11-05 18:00:44,034:INFO:Checking exceptions
2022-11-05 18:00:44,034:INFO:Preloading libraries
2022-11-05 18:00:44,445:INFO:display_container: 2
2022-11-05 18:00:44,447:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:00:44,447:INFO:create_model() successfully completed......................................
2022-11-05 18:00:44,696:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:44,696:INFO:Creating metrics dataframe
2022-11-05 18:00:44,713:INFO:Initializing Extra Trees Regressor
2022-11-05 18:00:44,714:INFO:Total runtime is 0.2592410484949748 minutes
2022-11-05 18:00:44,719:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:44,719:INFO:Initializing create_model()
2022-11-05 18:00:44,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:44,719:INFO:Checking exceptions
2022-11-05 18:00:44,723:INFO:Importing libraries
2022-11-05 18:00:44,723:INFO:Copying training dataset
2022-11-05 18:00:44,730:INFO:Defining folds
2022-11-05 18:00:44,730:INFO:Declaring metric variables
2022-11-05 18:00:44,735:INFO:Importing untrained model
2022-11-05 18:00:44,740:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:00:44,747:INFO:Cross validation set to False
2022-11-05 18:00:44,748:INFO:Fitting Model
2022-11-05 18:00:45,533:INFO:Initializing predict_model()
2022-11-05 18:00:45,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0259d0>)
2022-11-05 18:00:45,533:INFO:Checking exceptions
2022-11-05 18:00:45,533:INFO:Preloading libraries
2022-11-05 18:00:45,951:INFO:display_container: 2
2022-11-05 18:00:45,953:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:00:45,953:INFO:create_model() successfully completed......................................
2022-11-05 18:00:46,213:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:46,214:INFO:Creating metrics dataframe
2022-11-05 18:00:46,231:INFO:Initializing AdaBoost Regressor
2022-11-05 18:00:46,231:INFO:Total runtime is 0.2845377842585246 minutes
2022-11-05 18:00:46,236:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:46,236:INFO:Initializing create_model()
2022-11-05 18:00:46,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:46,236:INFO:Checking exceptions
2022-11-05 18:00:46,241:INFO:Importing libraries
2022-11-05 18:00:46,241:INFO:Copying training dataset
2022-11-05 18:00:46,247:INFO:Defining folds
2022-11-05 18:00:46,248:INFO:Declaring metric variables
2022-11-05 18:00:46,252:INFO:Importing untrained model
2022-11-05 18:00:46,256:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:00:46,263:INFO:Cross validation set to False
2022-11-05 18:00:46,263:INFO:Fitting Model
2022-11-05 18:00:46,641:INFO:Initializing predict_model()
2022-11-05 18:00:46,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0250d0>)
2022-11-05 18:00:46,642:INFO:Checking exceptions
2022-11-05 18:00:46,642:INFO:Preloading libraries
2022-11-05 18:00:47,029:INFO:display_container: 2
2022-11-05 18:00:47,031:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:00:47,031:INFO:create_model() successfully completed......................................
2022-11-05 18:00:47,281:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:47,281:INFO:Creating metrics dataframe
2022-11-05 18:00:47,299:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:00:47,300:INFO:Total runtime is 0.3023396293322246 minutes
2022-11-05 18:00:47,304:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:47,304:INFO:Initializing create_model()
2022-11-05 18:00:47,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:47,304:INFO:Checking exceptions
2022-11-05 18:00:47,309:INFO:Importing libraries
2022-11-05 18:00:47,309:INFO:Copying training dataset
2022-11-05 18:00:47,316:INFO:Defining folds
2022-11-05 18:00:47,317:INFO:Declaring metric variables
2022-11-05 18:00:47,322:INFO:Importing untrained model
2022-11-05 18:00:47,327:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:00:47,334:INFO:Cross validation set to False
2022-11-05 18:00:47,334:INFO:Fitting Model
2022-11-05 18:00:49,009:INFO:Initializing predict_model()
2022-11-05 18:00:49,009:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c595790>)
2022-11-05 18:00:49,009:INFO:Checking exceptions
2022-11-05 18:00:49,009:INFO:Preloading libraries
2022-11-05 18:00:49,400:INFO:display_container: 2
2022-11-05 18:00:49,402:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:00:49,402:INFO:create_model() successfully completed......................................
2022-11-05 18:00:49,651:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:49,651:INFO:Creating metrics dataframe
2022-11-05 18:00:49,669:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:00:49,669:INFO:Total runtime is 0.34183318217595426 minutes
2022-11-05 18:00:49,673:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:49,674:INFO:Initializing create_model()
2022-11-05 18:00:49,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:49,674:INFO:Checking exceptions
2022-11-05 18:00:49,678:INFO:Importing libraries
2022-11-05 18:00:49,678:INFO:Copying training dataset
2022-11-05 18:00:49,684:INFO:Defining folds
2022-11-05 18:00:49,684:INFO:Declaring metric variables
2022-11-05 18:00:49,689:INFO:Importing untrained model
2022-11-05 18:00:49,694:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:00:49,700:INFO:Cross validation set to False
2022-11-05 18:00:49,700:INFO:Fitting Model
2022-11-05 18:00:50,132:INFO:Initializing predict_model()
2022-11-05 18:00:50,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13cef4940>)
2022-11-05 18:00:50,132:INFO:Checking exceptions
2022-11-05 18:00:50,132:INFO:Preloading libraries
2022-11-05 18:00:50,563:INFO:display_container: 2
2022-11-05 18:00:50,566:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:00:50,566:INFO:create_model() successfully completed......................................
2022-11-05 18:00:50,839:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:50,839:INFO:Creating metrics dataframe
2022-11-05 18:00:50,857:INFO:Initializing Dummy Regressor
2022-11-05 18:00:50,857:INFO:Total runtime is 0.36163749694824227 minutes
2022-11-05 18:00:50,863:INFO:SubProcess create_model() called ==================================
2022-11-05 18:00:50,863:INFO:Initializing create_model()
2022-11-05 18:00:50,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13b7ad910>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:50,864:INFO:Checking exceptions
2022-11-05 18:00:50,868:INFO:Importing libraries
2022-11-05 18:00:50,868:INFO:Copying training dataset
2022-11-05 18:00:50,874:INFO:Defining folds
2022-11-05 18:00:50,874:INFO:Declaring metric variables
2022-11-05 18:00:50,879:INFO:Importing untrained model
2022-11-05 18:00:50,884:INFO:Dummy Regressor Imported successfully
2022-11-05 18:00:50,892:INFO:Cross validation set to False
2022-11-05 18:00:50,892:INFO:Fitting Model
2022-11-05 18:00:51,111:INFO:Initializing predict_model()
2022-11-05 18:00:51,112:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock',
                                             'salesDuringCommercialActivities',
                                             'week_of_year', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c60b8b0>)
2022-11-05 18:00:51,112:INFO:Checking exceptions
2022-11-05 18:00:51,112:INFO:Preloading libraries
2022-11-05 18:00:51,487:INFO:display_container: 2
2022-11-05 18:00:51,489:INFO:DummyRegressor()
2022-11-05 18:00:51,489:INFO:create_model() successfully completed......................................
2022-11-05 18:00:51,737:INFO:SubProcess create_model() end ==================================
2022-11-05 18:00:51,738:INFO:Creating metrics dataframe
2022-11-05 18:00:51,770:INFO:Initializing create_model()
2022-11-05 18:00:51,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14131f4f0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:00:51,771:INFO:Checking exceptions
2022-11-05 18:00:51,778:INFO:Importing libraries
2022-11-05 18:00:51,778:INFO:Copying training dataset
2022-11-05 18:00:51,785:INFO:Defining folds
2022-11-05 18:00:51,785:INFO:Declaring metric variables
2022-11-05 18:00:51,785:INFO:Importing untrained model
2022-11-05 18:00:51,785:INFO:Declaring custom model
2022-11-05 18:00:51,786:INFO:Linear Regression Imported successfully
2022-11-05 18:00:51,787:INFO:Cross validation set to False
2022-11-05 18:00:51,787:INFO:Fitting Model
2022-11-05 18:00:52,010:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:00:52,010:INFO:create_model() successfully completed......................................
2022-11-05 18:00:52,308:INFO:master_model_container: 0
2022-11-05 18:00:52,308:INFO:display_container: 2
2022-11-05 18:00:52,309:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:00:52,309:INFO:compare_models() successfully completed......................................
2022-11-05 18:04:12,200:INFO:PyCaret RegressionExperiment
2022-11-05 18:04:12,200:INFO:Logging name: reg-default-name
2022-11-05 18:04:12,200:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:04:12,200:INFO:version 3.0.0.rc4
2022-11-05 18:04:12,201:INFO:Initializing setup()
2022-11-05 18:04:12,201:INFO:self.USI: 7f0c
2022-11-05 18:04:12,201:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:04:12,202:INFO:Checking environment
2022-11-05 18:04:12,202:INFO:python_version: 3.9.6
2022-11-05 18:04:12,202:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:04:12,202:INFO:machine: x86_64
2022-11-05 18:04:12,202:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:04:12,202:INFO:Memory: svmem(total=17179869184, available=6790905856, percent=60.5, used=9129836544, free=66797568, active=6726123520, inactive=6707322880, wired=2403713024)
2022-11-05 18:04:12,202:INFO:Physical Core: 4
2022-11-05 18:04:12,202:INFO:Logical Core: 4
2022-11-05 18:04:12,203:INFO:Checking libraries
2022-11-05 18:04:12,203:INFO:System:
2022-11-05 18:04:12,203:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:04:12,203:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:04:12,203:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:04:12,203:INFO:PyCaret required dependencies:
2022-11-05 18:04:12,203:INFO:                 pip: 21.2.4
2022-11-05 18:04:12,203:INFO:          setuptools: 58.0.4
2022-11-05 18:04:12,203:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:04:12,203:INFO:             IPython: 8.6.0
2022-11-05 18:04:12,203:INFO:          ipywidgets: 8.0.2
2022-11-05 18:04:12,204:INFO:                tqdm: 4.64.1
2022-11-05 18:04:12,204:INFO:               numpy: 1.22.4
2022-11-05 18:04:12,204:INFO:              pandas: 1.4.4
2022-11-05 18:04:12,204:INFO:              jinja2: 3.1.2
2022-11-05 18:04:12,204:INFO:               scipy: 1.8.1
2022-11-05 18:04:12,204:INFO:              joblib: 1.2.0
2022-11-05 18:04:12,204:INFO:             sklearn: 1.1.3
2022-11-05 18:04:12,204:INFO:                pyod: 1.0.6
2022-11-05 18:04:12,204:INFO:            imblearn: 0.9.1
2022-11-05 18:04:12,204:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:04:12,204:INFO:            lightgbm: 3.3.3
2022-11-05 18:04:12,204:INFO:               numba: 0.55.2
2022-11-05 18:04:12,204:INFO:            requests: 2.28.1
2022-11-05 18:04:12,204:INFO:          matplotlib: 3.6.2
2022-11-05 18:04:12,204:INFO:          scikitplot: 0.3.7
2022-11-05 18:04:12,204:INFO:         yellowbrick: 1.5
2022-11-05 18:04:12,204:INFO:              plotly: 5.11.0
2022-11-05 18:04:12,204:INFO:             kaleido: 0.2.1
2022-11-05 18:04:12,205:INFO:         statsmodels: 0.13.5
2022-11-05 18:04:12,205:INFO:              sktime: 0.13.4
2022-11-05 18:04:12,205:INFO:               tbats: 1.1.1
2022-11-05 18:04:12,205:INFO:            pmdarima: 1.8.5
2022-11-05 18:04:12,205:INFO:              psutil: 5.9.3
2022-11-05 18:04:12,205:INFO:PyCaret optional dependencies:
2022-11-05 18:04:12,205:INFO:                shap: Not installed
2022-11-05 18:04:12,205:INFO:           interpret: Not installed
2022-11-05 18:04:12,205:INFO:                umap: Not installed
2022-11-05 18:04:12,205:INFO:    pandas_profiling: Not installed
2022-11-05 18:04:12,205:INFO:  explainerdashboard: Not installed
2022-11-05 18:04:12,205:INFO:             autoviz: Not installed
2022-11-05 18:04:12,205:INFO:           fairlearn: Not installed
2022-11-05 18:04:12,205:INFO:             xgboost: Not installed
2022-11-05 18:04:12,205:INFO:            catboost: Not installed
2022-11-05 18:04:12,206:INFO:              kmodes: Not installed
2022-11-05 18:04:12,206:INFO:             mlxtend: Not installed
2022-11-05 18:04:12,206:INFO:       statsforecast: Not installed
2022-11-05 18:04:12,206:INFO:        tune_sklearn: Not installed
2022-11-05 18:04:12,206:INFO:                 ray: Not installed
2022-11-05 18:04:12,206:INFO:            hyperopt: Not installed
2022-11-05 18:04:12,206:INFO:              optuna: Not installed
2022-11-05 18:04:12,206:INFO:               skopt: Not installed
2022-11-05 18:04:12,206:INFO:              mlflow: Not installed
2022-11-05 18:04:12,206:INFO:              gradio: Not installed
2022-11-05 18:04:12,206:INFO:             fastapi: Not installed
2022-11-05 18:04:12,206:INFO:             uvicorn: Not installed
2022-11-05 18:04:12,206:INFO:              m2cgen: Not installed
2022-11-05 18:04:12,206:INFO:           evidently: Not installed
2022-11-05 18:04:12,206:INFO:                nltk: Not installed
2022-11-05 18:04:12,207:INFO:            pyLDAvis: Not installed
2022-11-05 18:04:12,207:INFO:              gensim: Not installed
2022-11-05 18:04:12,207:INFO:               spacy: 3.4.2
2022-11-05 18:04:12,207:INFO:           wordcloud: Not installed
2022-11-05 18:04:12,207:INFO:            textblob: Not installed
2022-11-05 18:04:12,207:INFO:               fugue: Not installed
2022-11-05 18:04:12,207:INFO:           streamlit: Not installed
2022-11-05 18:04:12,207:INFO:             prophet: Not installed
2022-11-05 18:04:12,207:INFO:None
2022-11-05 18:04:12,207:INFO:Set up data.
2022-11-05 18:04:12,225:INFO:Set up train/test split.
2022-11-05 18:04:12,234:INFO:Set up index.
2022-11-05 18:04:12,235:INFO:Set up folding strategy.
2022-11-05 18:04:12,235:INFO:Assigning column types.
2022-11-05 18:04:12,240:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:04:12,241:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,249:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,258:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,449:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:12,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:12,451:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,467:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,481:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,591:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:12,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:12,668:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:04:12,676:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:12,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:12,882:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,890:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:04:12,992:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,071:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:04:13,088:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,193:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,290:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,397:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,476:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,478:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:04:13,602:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,804:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:04:13,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:13,882:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:04:13,995:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:14,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:04:14,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,259:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:04:14,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:14,636:INFO:Preparing preprocessing pipeline...
2022-11-05 18:04:14,637:INFO:Set up simple imputation.
2022-11-05 18:04:14,642:INFO:Set up encoding of categorical features.
2022-11-05 18:04:14,642:INFO:Set up variance threshold.
2022-11-05 18:04:15,310:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:04:15,320:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:04:15,321:INFO:Creating final display dataframe.
2022-11-05 18:04:17,607:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 7)
4           Train data shape        (10124, 7)
5            Test data shape         (4340, 7)
6           Numeric features                 2
7       Categorical features                 4
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              7f0c
2022-11-05 18:04:17,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:17,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:18,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:18,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:04:18,019:INFO:setup() successfully completed in 5.82s...............
2022-11-05 18:04:20,867:INFO:Initializing compare_models()
2022-11-05 18:04:20,868:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:04:20,868:INFO:Checking exceptions
2022-11-05 18:04:20,871:INFO:Preparing display monitor
2022-11-05 18:04:20,924:INFO:Initializing Linear Regression
2022-11-05 18:04:20,924:INFO:Total runtime is 4.2835871378580725e-06 minutes
2022-11-05 18:04:20,929:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:20,930:INFO:Initializing create_model()
2022-11-05 18:04:20,930:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:20,930:INFO:Checking exceptions
2022-11-05 18:04:20,934:INFO:Importing libraries
2022-11-05 18:04:20,935:INFO:Copying training dataset
2022-11-05 18:04:20,941:INFO:Defining folds
2022-11-05 18:04:20,941:INFO:Declaring metric variables
2022-11-05 18:04:20,959:INFO:Importing untrained model
2022-11-05 18:04:20,969:INFO:Linear Regression Imported successfully
2022-11-05 18:04:20,978:INFO:Cross validation set to False
2022-11-05 18:04:20,978:INFO:Fitting Model
2022-11-05 18:04:21,678:INFO:Initializing predict_model()
2022-11-05 18:04:21,679:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d0251f0>)
2022-11-05 18:04:21,679:INFO:Checking exceptions
2022-11-05 18:04:21,679:INFO:Preloading libraries
2022-11-05 18:04:22,082:INFO:display_container: 2
2022-11-05 18:04:22,084:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:04:22,085:INFO:create_model() successfully completed......................................
2022-11-05 18:04:22,356:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:22,356:INFO:Creating metrics dataframe
2022-11-05 18:04:22,368:INFO:Initializing Lasso Regression
2022-11-05 18:04:22,368:INFO:Total runtime is 0.02407224973042806 minutes
2022-11-05 18:04:22,372:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:22,373:INFO:Initializing create_model()
2022-11-05 18:04:22,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:22,373:INFO:Checking exceptions
2022-11-05 18:04:22,378:INFO:Importing libraries
2022-11-05 18:04:22,378:INFO:Copying training dataset
2022-11-05 18:04:22,384:INFO:Defining folds
2022-11-05 18:04:22,385:INFO:Declaring metric variables
2022-11-05 18:04:22,390:INFO:Importing untrained model
2022-11-05 18:04:22,395:INFO:Lasso Regression Imported successfully
2022-11-05 18:04:22,402:INFO:Cross validation set to False
2022-11-05 18:04:22,402:INFO:Fitting Model
2022-11-05 18:04:22,622:INFO:Initializing predict_model()
2022-11-05 18:04:22,622:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27430>)
2022-11-05 18:04:22,622:INFO:Checking exceptions
2022-11-05 18:04:22,623:INFO:Preloading libraries
2022-11-05 18:04:23,015:INFO:display_container: 2
2022-11-05 18:04:23,017:INFO:Lasso(random_state=23)
2022-11-05 18:04:23,017:INFO:create_model() successfully completed......................................
2022-11-05 18:04:23,279:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:23,279:INFO:Creating metrics dataframe
2022-11-05 18:04:23,293:INFO:Initializing Ridge Regression
2022-11-05 18:04:23,293:INFO:Total runtime is 0.03949508269627889 minutes
2022-11-05 18:04:23,299:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:23,299:INFO:Initializing create_model()
2022-11-05 18:04:23,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:23,300:INFO:Checking exceptions
2022-11-05 18:04:23,304:INFO:Importing libraries
2022-11-05 18:04:23,304:INFO:Copying training dataset
2022-11-05 18:04:23,311:INFO:Defining folds
2022-11-05 18:04:23,311:INFO:Declaring metric variables
2022-11-05 18:04:23,317:INFO:Importing untrained model
2022-11-05 18:04:23,322:INFO:Ridge Regression Imported successfully
2022-11-05 18:04:23,328:INFO:Cross validation set to False
2022-11-05 18:04:23,329:INFO:Fitting Model
2022-11-05 18:04:23,558:INFO:Initializing predict_model()
2022-11-05 18:04:23,558:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27820>)
2022-11-05 18:04:23,559:INFO:Checking exceptions
2022-11-05 18:04:23,559:INFO:Preloading libraries
2022-11-05 18:04:23,958:INFO:display_container: 2
2022-11-05 18:04:23,960:INFO:Ridge(random_state=23)
2022-11-05 18:04:23,960:INFO:create_model() successfully completed......................................
2022-11-05 18:04:24,247:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:24,247:INFO:Creating metrics dataframe
2022-11-05 18:04:24,263:INFO:Initializing Elastic Net
2022-11-05 18:04:24,263:INFO:Total runtime is 0.05565306742986043 minutes
2022-11-05 18:04:24,267:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:24,268:INFO:Initializing create_model()
2022-11-05 18:04:24,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:24,268:INFO:Checking exceptions
2022-11-05 18:04:24,272:INFO:Importing libraries
2022-11-05 18:04:24,272:INFO:Copying training dataset
2022-11-05 18:04:24,278:INFO:Defining folds
2022-11-05 18:04:24,278:INFO:Declaring metric variables
2022-11-05 18:04:24,283:INFO:Importing untrained model
2022-11-05 18:04:24,288:INFO:Elastic Net Imported successfully
2022-11-05 18:04:24,299:INFO:Cross validation set to False
2022-11-05 18:04:24,299:INFO:Fitting Model
2022-11-05 18:04:24,519:INFO:Initializing predict_model()
2022-11-05 18:04:24,519:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d278b0>)
2022-11-05 18:04:24,519:INFO:Checking exceptions
2022-11-05 18:04:24,520:INFO:Preloading libraries
2022-11-05 18:04:24,927:INFO:display_container: 2
2022-11-05 18:04:24,929:INFO:ElasticNet(random_state=23)
2022-11-05 18:04:24,930:INFO:create_model() successfully completed......................................
2022-11-05 18:04:25,212:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:25,212:INFO:Creating metrics dataframe
2022-11-05 18:04:25,227:INFO:Initializing Least Angle Regression
2022-11-05 18:04:25,228:INFO:Total runtime is 0.07173511584599812 minutes
2022-11-05 18:04:25,233:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:25,233:INFO:Initializing create_model()
2022-11-05 18:04:25,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:25,233:INFO:Checking exceptions
2022-11-05 18:04:25,238:INFO:Importing libraries
2022-11-05 18:04:25,238:INFO:Copying training dataset
2022-11-05 18:04:25,244:INFO:Defining folds
2022-11-05 18:04:25,244:INFO:Declaring metric variables
2022-11-05 18:04:25,255:INFO:Importing untrained model
2022-11-05 18:04:25,261:INFO:Least Angle Regression Imported successfully
2022-11-05 18:04:25,267:INFO:Cross validation set to False
2022-11-05 18:04:25,267:INFO:Fitting Model
2022-11-05 18:04:25,485:INFO:Initializing predict_model()
2022-11-05 18:04:25,485:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27040>)
2022-11-05 18:04:25,486:INFO:Checking exceptions
2022-11-05 18:04:25,486:INFO:Preloading libraries
2022-11-05 18:04:25,892:INFO:display_container: 2
2022-11-05 18:04:25,894:INFO:Lars(random_state=23)
2022-11-05 18:04:25,894:INFO:create_model() successfully completed......................................
2022-11-05 18:04:26,162:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:26,163:INFO:Creating metrics dataframe
2022-11-05 18:04:26,177:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:04:26,177:INFO:Total runtime is 0.08755876620610555 minutes
2022-11-05 18:04:26,182:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:26,182:INFO:Initializing create_model()
2022-11-05 18:04:26,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:26,182:INFO:Checking exceptions
2022-11-05 18:04:26,187:INFO:Importing libraries
2022-11-05 18:04:26,187:INFO:Copying training dataset
2022-11-05 18:04:26,193:INFO:Defining folds
2022-11-05 18:04:26,193:INFO:Declaring metric variables
2022-11-05 18:04:26,198:INFO:Importing untrained model
2022-11-05 18:04:26,204:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:04:26,211:INFO:Cross validation set to False
2022-11-05 18:04:26,211:INFO:Fitting Model
2022-11-05 18:04:26,426:INFO:Initializing predict_model()
2022-11-05 18:04:26,426:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27430>)
2022-11-05 18:04:26,426:INFO:Checking exceptions
2022-11-05 18:04:26,426:INFO:Preloading libraries
2022-11-05 18:04:26,819:INFO:display_container: 2
2022-11-05 18:04:26,821:INFO:LassoLars(random_state=23)
2022-11-05 18:04:26,821:INFO:create_model() successfully completed......................................
2022-11-05 18:04:27,083:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:27,083:INFO:Creating metrics dataframe
2022-11-05 18:04:27,099:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:04:27,099:INFO:Total runtime is 0.10291921695073446 minutes
2022-11-05 18:04:27,104:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:27,104:INFO:Initializing create_model()
2022-11-05 18:04:27,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:27,105:INFO:Checking exceptions
2022-11-05 18:04:27,109:INFO:Importing libraries
2022-11-05 18:04:27,109:INFO:Copying training dataset
2022-11-05 18:04:27,115:INFO:Defining folds
2022-11-05 18:04:27,116:INFO:Declaring metric variables
2022-11-05 18:04:27,121:INFO:Importing untrained model
2022-11-05 18:04:27,126:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:04:27,134:INFO:Cross validation set to False
2022-11-05 18:04:27,134:INFO:Fitting Model
2022-11-05 18:04:27,359:INFO:Initializing predict_model()
2022-11-05 18:04:27,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27430>)
2022-11-05 18:04:27,359:INFO:Checking exceptions
2022-11-05 18:04:27,360:INFO:Preloading libraries
2022-11-05 18:04:27,749:INFO:display_container: 2
2022-11-05 18:04:27,751:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:04:27,751:INFO:create_model() successfully completed......................................
2022-11-05 18:04:28,016:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:28,016:INFO:Creating metrics dataframe
2022-11-05 18:04:28,032:INFO:Initializing Bayesian Ridge
2022-11-05 18:04:28,033:INFO:Total runtime is 0.11848093271255493 minutes
2022-11-05 18:04:28,038:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:28,038:INFO:Initializing create_model()
2022-11-05 18:04:28,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:28,038:INFO:Checking exceptions
2022-11-05 18:04:28,042:INFO:Importing libraries
2022-11-05 18:04:28,042:INFO:Copying training dataset
2022-11-05 18:04:28,049:INFO:Defining folds
2022-11-05 18:04:28,049:INFO:Declaring metric variables
2022-11-05 18:04:28,055:INFO:Importing untrained model
2022-11-05 18:04:28,060:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:04:28,066:INFO:Cross validation set to False
2022-11-05 18:04:28,066:INFO:Fitting Model
2022-11-05 18:04:28,281:INFO:Initializing predict_model()
2022-11-05 18:04:28,282:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27940>)
2022-11-05 18:04:28,282:INFO:Checking exceptions
2022-11-05 18:04:28,282:INFO:Preloading libraries
2022-11-05 18:04:28,665:INFO:display_container: 2
2022-11-05 18:04:28,667:INFO:BayesianRidge()
2022-11-05 18:04:28,667:INFO:create_model() successfully completed......................................
2022-11-05 18:04:28,943:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:28,943:INFO:Creating metrics dataframe
2022-11-05 18:04:28,960:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:04:28,960:INFO:Total runtime is 0.1339409351348877 minutes
2022-11-05 18:04:28,965:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:28,965:INFO:Initializing create_model()
2022-11-05 18:04:28,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:28,966:INFO:Checking exceptions
2022-11-05 18:04:28,969:INFO:Importing libraries
2022-11-05 18:04:28,969:INFO:Copying training dataset
2022-11-05 18:04:28,980:INFO:Defining folds
2022-11-05 18:04:28,981:INFO:Declaring metric variables
2022-11-05 18:04:28,988:INFO:Importing untrained model
2022-11-05 18:04:28,994:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:04:29,003:INFO:Cross validation set to False
2022-11-05 18:04:29,003:INFO:Fitting Model
2022-11-05 18:04:29,253:INFO:Initializing predict_model()
2022-11-05 18:04:29,253:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27430>)
2022-11-05 18:04:29,253:INFO:Checking exceptions
2022-11-05 18:04:29,254:INFO:Preloading libraries
2022-11-05 18:04:29,653:INFO:display_container: 2
2022-11-05 18:04:29,655:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:04:29,656:INFO:create_model() successfully completed......................................
2022-11-05 18:04:29,917:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:29,917:INFO:Creating metrics dataframe
2022-11-05 18:04:29,934:INFO:Initializing Huber Regressor
2022-11-05 18:04:29,934:INFO:Total runtime is 0.15017846425374348 minutes
2022-11-05 18:04:29,940:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:29,940:INFO:Initializing create_model()
2022-11-05 18:04:29,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:29,940:INFO:Checking exceptions
2022-11-05 18:04:29,944:INFO:Importing libraries
2022-11-05 18:04:29,944:INFO:Copying training dataset
2022-11-05 18:04:29,952:INFO:Defining folds
2022-11-05 18:04:29,952:INFO:Declaring metric variables
2022-11-05 18:04:29,958:INFO:Importing untrained model
2022-11-05 18:04:29,964:INFO:Huber Regressor Imported successfully
2022-11-05 18:04:29,971:INFO:Cross validation set to False
2022-11-05 18:04:29,971:INFO:Fitting Model
2022-11-05 18:04:30,314:INFO:Initializing predict_model()
2022-11-05 18:04:30,314:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d273a0>)
2022-11-05 18:04:30,314:INFO:Checking exceptions
2022-11-05 18:04:30,314:INFO:Preloading libraries
2022-11-05 18:04:30,750:INFO:display_container: 2
2022-11-05 18:04:30,752:INFO:HuberRegressor()
2022-11-05 18:04:30,752:INFO:create_model() successfully completed......................................
2022-11-05 18:04:31,058:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:31,059:INFO:Creating metrics dataframe
2022-11-05 18:04:31,097:INFO:Initializing K Neighbors Regressor
2022-11-05 18:04:31,097:INFO:Total runtime is 0.1695550004641215 minutes
2022-11-05 18:04:31,102:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:31,102:INFO:Initializing create_model()
2022-11-05 18:04:31,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:31,103:INFO:Checking exceptions
2022-11-05 18:04:31,108:INFO:Importing libraries
2022-11-05 18:04:31,109:INFO:Copying training dataset
2022-11-05 18:04:31,124:INFO:Defining folds
2022-11-05 18:04:31,125:INFO:Declaring metric variables
2022-11-05 18:04:31,143:INFO:Importing untrained model
2022-11-05 18:04:31,149:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:04:31,155:INFO:Cross validation set to False
2022-11-05 18:04:31,155:INFO:Fitting Model
2022-11-05 18:04:31,375:INFO:Initializing predict_model()
2022-11-05 18:04:31,375:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d275e0>)
2022-11-05 18:04:31,375:INFO:Checking exceptions
2022-11-05 18:04:31,375:INFO:Preloading libraries
2022-11-05 18:04:31,814:INFO:display_container: 2
2022-11-05 18:04:31,816:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:04:31,817:INFO:create_model() successfully completed......................................
2022-11-05 18:04:32,081:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:32,081:INFO:Creating metrics dataframe
2022-11-05 18:04:32,099:INFO:Initializing Decision Tree Regressor
2022-11-05 18:04:32,099:INFO:Total runtime is 0.18625503381093345 minutes
2022-11-05 18:04:32,103:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:32,104:INFO:Initializing create_model()
2022-11-05 18:04:32,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:32,104:INFO:Checking exceptions
2022-11-05 18:04:32,108:INFO:Importing libraries
2022-11-05 18:04:32,108:INFO:Copying training dataset
2022-11-05 18:04:32,115:INFO:Defining folds
2022-11-05 18:04:32,116:INFO:Declaring metric variables
2022-11-05 18:04:32,121:INFO:Importing untrained model
2022-11-05 18:04:32,126:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:04:32,132:INFO:Cross validation set to False
2022-11-05 18:04:32,133:INFO:Fitting Model
2022-11-05 18:04:32,410:INFO:Initializing predict_model()
2022-11-05 18:04:32,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27d30>)
2022-11-05 18:04:32,411:INFO:Checking exceptions
2022-11-05 18:04:32,411:INFO:Preloading libraries
2022-11-05 18:04:32,808:INFO:display_container: 2
2022-11-05 18:04:32,811:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:04:32,811:INFO:create_model() successfully completed......................................
2022-11-05 18:04:33,077:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:33,077:INFO:Creating metrics dataframe
2022-11-05 18:04:33,094:INFO:Initializing Random Forest Regressor
2022-11-05 18:04:33,095:INFO:Total runtime is 0.2028517007827759 minutes
2022-11-05 18:04:33,100:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:33,100:INFO:Initializing create_model()
2022-11-05 18:04:33,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:33,100:INFO:Checking exceptions
2022-11-05 18:04:33,104:INFO:Importing libraries
2022-11-05 18:04:33,104:INFO:Copying training dataset
2022-11-05 18:04:33,111:INFO:Defining folds
2022-11-05 18:04:33,111:INFO:Declaring metric variables
2022-11-05 18:04:33,116:INFO:Importing untrained model
2022-11-05 18:04:33,121:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:04:33,127:INFO:Cross validation set to False
2022-11-05 18:04:33,127:INFO:Fitting Model
2022-11-05 18:04:34,524:INFO:Initializing predict_model()
2022-11-05 18:04:34,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d275e0>)
2022-11-05 18:04:34,524:INFO:Checking exceptions
2022-11-05 18:04:34,524:INFO:Preloading libraries
2022-11-05 18:04:34,946:INFO:display_container: 2
2022-11-05 18:04:34,948:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:04:34,949:INFO:create_model() successfully completed......................................
2022-11-05 18:04:35,212:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:35,213:INFO:Creating metrics dataframe
2022-11-05 18:04:35,230:INFO:Initializing Extra Trees Regressor
2022-11-05 18:04:35,230:INFO:Total runtime is 0.23844646612803144 minutes
2022-11-05 18:04:35,235:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:35,236:INFO:Initializing create_model()
2022-11-05 18:04:35,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:35,236:INFO:Checking exceptions
2022-11-05 18:04:35,239:INFO:Importing libraries
2022-11-05 18:04:35,240:INFO:Copying training dataset
2022-11-05 18:04:35,247:INFO:Defining folds
2022-11-05 18:04:35,247:INFO:Declaring metric variables
2022-11-05 18:04:35,251:INFO:Importing untrained model
2022-11-05 18:04:35,256:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:04:35,263:INFO:Cross validation set to False
2022-11-05 18:04:35,263:INFO:Fitting Model
2022-11-05 18:04:35,973:INFO:Initializing predict_model()
2022-11-05 18:04:35,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27670>)
2022-11-05 18:04:35,973:INFO:Checking exceptions
2022-11-05 18:04:35,973:INFO:Preloading libraries
2022-11-05 18:04:36,425:INFO:display_container: 2
2022-11-05 18:04:36,427:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:04:36,427:INFO:create_model() successfully completed......................................
2022-11-05 18:04:36,686:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:36,686:INFO:Creating metrics dataframe
2022-11-05 18:04:36,703:INFO:Initializing AdaBoost Regressor
2022-11-05 18:04:36,703:INFO:Total runtime is 0.2629970192909241 minutes
2022-11-05 18:04:36,708:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:36,708:INFO:Initializing create_model()
2022-11-05 18:04:36,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:36,708:INFO:Checking exceptions
2022-11-05 18:04:36,713:INFO:Importing libraries
2022-11-05 18:04:36,713:INFO:Copying training dataset
2022-11-05 18:04:36,719:INFO:Defining folds
2022-11-05 18:04:36,720:INFO:Declaring metric variables
2022-11-05 18:04:36,724:INFO:Importing untrained model
2022-11-05 18:04:36,730:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:04:36,737:INFO:Cross validation set to False
2022-11-05 18:04:36,737:INFO:Fitting Model
2022-11-05 18:04:37,099:INFO:Initializing predict_model()
2022-11-05 18:04:37,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27af0>)
2022-11-05 18:04:37,100:INFO:Checking exceptions
2022-11-05 18:04:37,100:INFO:Preloading libraries
2022-11-05 18:04:37,501:INFO:display_container: 2
2022-11-05 18:04:37,503:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:04:37,503:INFO:create_model() successfully completed......................................
2022-11-05 18:04:37,771:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:37,771:INFO:Creating metrics dataframe
2022-11-05 18:04:37,791:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:04:37,792:INFO:Total runtime is 0.2811329007148743 minutes
2022-11-05 18:04:37,797:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:37,797:INFO:Initializing create_model()
2022-11-05 18:04:37,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:37,797:INFO:Checking exceptions
2022-11-05 18:04:37,801:INFO:Importing libraries
2022-11-05 18:04:37,802:INFO:Copying training dataset
2022-11-05 18:04:37,808:INFO:Defining folds
2022-11-05 18:04:37,808:INFO:Declaring metric variables
2022-11-05 18:04:37,812:INFO:Importing untrained model
2022-11-05 18:04:37,817:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:04:37,823:INFO:Cross validation set to False
2022-11-05 18:04:37,824:INFO:Fitting Model
2022-11-05 18:04:39,293:INFO:Initializing predict_model()
2022-11-05 18:04:39,293:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27670>)
2022-11-05 18:04:39,294:INFO:Checking exceptions
2022-11-05 18:04:39,294:INFO:Preloading libraries
2022-11-05 18:04:40,118:INFO:display_container: 2
2022-11-05 18:04:40,122:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:04:40,122:INFO:create_model() successfully completed......................................
2022-11-05 18:04:40,457:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:40,457:INFO:Creating metrics dataframe
2022-11-05 18:04:40,477:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:04:40,477:INFO:Total runtime is 0.3258878827095032 minutes
2022-11-05 18:04:40,482:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:40,482:INFO:Initializing create_model()
2022-11-05 18:04:40,483:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:40,483:INFO:Checking exceptions
2022-11-05 18:04:40,487:INFO:Importing libraries
2022-11-05 18:04:40,487:INFO:Copying training dataset
2022-11-05 18:04:40,493:INFO:Defining folds
2022-11-05 18:04:40,493:INFO:Declaring metric variables
2022-11-05 18:04:40,499:INFO:Importing untrained model
2022-11-05 18:04:40,504:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:04:40,510:INFO:Cross validation set to False
2022-11-05 18:04:40,511:INFO:Fitting Model
2022-11-05 18:04:40,922:INFO:Initializing predict_model()
2022-11-05 18:04:40,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27af0>)
2022-11-05 18:04:40,922:INFO:Checking exceptions
2022-11-05 18:04:40,923:INFO:Preloading libraries
2022-11-05 18:04:41,431:INFO:display_container: 2
2022-11-05 18:04:41,433:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:04:41,434:INFO:create_model() successfully completed......................................
2022-11-05 18:04:41,734:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:41,735:INFO:Creating metrics dataframe
2022-11-05 18:04:41,755:INFO:Initializing Dummy Regressor
2022-11-05 18:04:41,756:INFO:Total runtime is 0.3471983512242635 minutes
2022-11-05 18:04:41,761:INFO:SubProcess create_model() called ==================================
2022-11-05 18:04:41,761:INFO:Initializing create_model()
2022-11-05 18:04:41,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141d23520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:41,762:INFO:Checking exceptions
2022-11-05 18:04:41,766:INFO:Importing libraries
2022-11-05 18:04:41,766:INFO:Copying training dataset
2022-11-05 18:04:41,773:INFO:Defining folds
2022-11-05 18:04:41,773:INFO:Declaring metric variables
2022-11-05 18:04:41,778:INFO:Importing untrained model
2022-11-05 18:04:41,783:INFO:Dummy Regressor Imported successfully
2022-11-05 18:04:41,792:INFO:Cross validation set to False
2022-11-05 18:04:41,793:INFO:Fitting Model
2022-11-05 18:04:42,048:INFO:Initializing predict_model()
2022-11-05 18:04:42,048:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d27d30>)
2022-11-05 18:04:42,048:INFO:Checking exceptions
2022-11-05 18:04:42,048:INFO:Preloading libraries
2022-11-05 18:04:42,477:INFO:display_container: 2
2022-11-05 18:04:42,479:INFO:DummyRegressor()
2022-11-05 18:04:42,479:INFO:create_model() successfully completed......................................
2022-11-05 18:04:42,781:INFO:SubProcess create_model() end ==================================
2022-11-05 18:04:42,781:INFO:Creating metrics dataframe
2022-11-05 18:04:42,923:INFO:Initializing create_model()
2022-11-05 18:04:42,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:04:42,924:INFO:Checking exceptions
2022-11-05 18:04:42,933:INFO:Importing libraries
2022-11-05 18:04:42,933:INFO:Copying training dataset
2022-11-05 18:04:42,958:INFO:Defining folds
2022-11-05 18:04:42,959:INFO:Declaring metric variables
2022-11-05 18:04:42,959:INFO:Importing untrained model
2022-11-05 18:04:42,959:INFO:Declaring custom model
2022-11-05 18:04:42,960:INFO:Linear Regression Imported successfully
2022-11-05 18:04:42,973:INFO:Cross validation set to False
2022-11-05 18:04:42,973:INFO:Fitting Model
2022-11-05 18:04:43,203:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:04:43,204:INFO:create_model() successfully completed......................................
2022-11-05 18:04:43,550:INFO:master_model_container: 0
2022-11-05 18:04:43,550:INFO:display_container: 2
2022-11-05 18:04:43,551:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:04:43,551:INFO:compare_models() successfully completed......................................
2022-11-05 18:08:29,091:INFO:Initializing create_model()
2022-11-05 18:08:29,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-05 18:08:29,097:INFO:Checking exceptions
2022-11-05 18:08:29,159:INFO:Importing libraries
2022-11-05 18:08:29,159:INFO:Copying training dataset
2022-11-05 18:08:29,168:INFO:Defining folds
2022-11-05 18:08:29,171:INFO:Declaring metric variables
2022-11-05 18:08:29,176:INFO:Importing untrained model
2022-11-05 18:08:29,181:INFO:Linear Regression Imported successfully
2022-11-05 18:08:29,193:INFO:Starting cross validation
2022-11-05 18:08:29,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 18:08:47,785:INFO:Calculating mean and std
2022-11-05 18:08:47,793:INFO:Creating metrics dataframe
2022-11-05 18:08:47,808:INFO:Finalizing model
2022-11-05 18:08:48,061:INFO:Initializing predict_model()
2022-11-05 18:08:48,061:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=SimpleIm...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_name', 'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c595790>)
2022-11-05 18:08:48,061:INFO:Checking exceptions
2022-11-05 18:08:48,061:INFO:Preloading libraries
2022-11-05 18:08:48,061:INFO:Set up data.
2022-11-05 18:08:48,068:INFO:Set up index.
2022-11-05 18:08:49,121:INFO:Uploading results into container
2022-11-05 18:08:49,122:INFO:Uploading model into container now
2022-11-05 18:08:49,148:INFO:master_model_container: 1
2022-11-05 18:08:49,148:INFO:display_container: 3
2022-11-05 18:08:49,149:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:08:49,149:INFO:create_model() successfully completed......................................
2022-11-05 18:09:00,619:INFO:Initializing plot_model()
2022-11-05 18:09:00,620:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, system=True)
2022-11-05 18:09:00,620:INFO:Checking exceptions
2022-11-05 18:09:00,627:INFO:Preloading libraries
2022-11-05 18:09:00,627:INFO:Copying training dataset
2022-11-05 18:09:00,628:INFO:Plot type: residuals
2022-11-05 18:09:01,322:INFO:Fitting Model
2022-11-05 18:09:01,595:INFO:Scoring test/hold-out set
2022-11-05 18:09:03,301:INFO:Visual Rendered Successfully
2022-11-05 18:09:03,716:INFO:plot_model() successfully completed......................................
2022-11-05 18:09:03,759:INFO:Initializing plot_model()
2022-11-05 18:09:03,759:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, system=True)
2022-11-05 18:09:03,760:INFO:Checking exceptions
2022-11-05 18:09:03,768:INFO:Preloading libraries
2022-11-05 18:09:03,769:INFO:Copying training dataset
2022-11-05 18:09:03,769:INFO:Plot type: error
2022-11-05 18:09:04,297:INFO:Fitting Model
2022-11-05 18:09:04,297:INFO:Scoring test/hold-out set
2022-11-05 18:09:04,778:INFO:Visual Rendered Successfully
2022-11-05 18:09:05,046:INFO:plot_model() successfully completed......................................
2022-11-05 18:09:51,643:INFO:Initializing plot_model()
2022-11-05 18:09:51,643:INFO:plot_model(plot=rfe, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, system=True)
2022-11-05 18:09:51,644:INFO:Checking exceptions
2022-11-05 18:09:51,651:INFO:Preloading libraries
2022-11-05 18:09:51,652:INFO:Copying training dataset
2022-11-05 18:09:51,652:INFO:Plot type: rfe
2022-11-05 18:09:52,223:INFO:Fitting Model
2022-11-05 18:09:53,360:INFO:Visual Rendered Successfully
2022-11-05 18:09:53,796:INFO:plot_model() successfully completed......................................
2022-11-05 18:10:08,368:INFO:Initializing plot_model()
2022-11-05 18:10:08,368:INFO:plot_model(plot=feature_all, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, system=True)
2022-11-05 18:10:08,369:INFO:Checking exceptions
2022-11-05 18:10:08,375:INFO:Preloading libraries
2022-11-05 18:10:08,375:INFO:Copying training dataset
2022-11-05 18:10:08,375:INFO:Plot type: feature_all
2022-11-05 18:10:09,370:INFO:Visual Rendered Successfully
2022-11-05 18:10:09,694:INFO:plot_model() successfully completed......................................
2022-11-05 18:10:16,159:INFO:Initializing plot_model()
2022-11-05 18:10:16,159:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x13ce76fd0>, system=True)
2022-11-05 18:10:16,159:INFO:Checking exceptions
2022-11-05 18:10:16,169:INFO:Preloading libraries
2022-11-05 18:10:16,169:INFO:Copying training dataset
2022-11-05 18:10:16,169:INFO:Plot type: feature
2022-11-05 18:10:16,975:INFO:Visual Rendered Successfully
2022-11-05 18:10:17,252:INFO:plot_model() successfully completed......................................
2022-11-05 18:11:39,179:INFO:PyCaret RegressionExperiment
2022-11-05 18:11:39,180:INFO:Logging name: reg-default-name
2022-11-05 18:11:39,181:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:11:39,181:INFO:version 3.0.0.rc4
2022-11-05 18:11:39,181:INFO:Initializing setup()
2022-11-05 18:11:39,181:INFO:self.USI: b424
2022-11-05 18:11:39,181:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:11:39,181:INFO:Checking environment
2022-11-05 18:11:39,182:INFO:python_version: 3.9.6
2022-11-05 18:11:39,182:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:11:39,182:INFO:machine: x86_64
2022-11-05 18:11:39,182:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:11:39,182:INFO:Memory: svmem(total=17179869184, available=6566821888, percent=61.8, used=8983982080, free=62398464, active=6506065920, inactive=6444281856, wired=2477916160)
2022-11-05 18:11:39,182:INFO:Physical Core: 4
2022-11-05 18:11:39,182:INFO:Logical Core: 4
2022-11-05 18:11:39,182:INFO:Checking libraries
2022-11-05 18:11:39,182:INFO:System:
2022-11-05 18:11:39,182:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:11:39,183:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:11:39,183:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:11:39,183:INFO:PyCaret required dependencies:
2022-11-05 18:11:39,183:INFO:                 pip: 21.2.4
2022-11-05 18:11:39,183:INFO:          setuptools: 58.0.4
2022-11-05 18:11:39,184:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:11:39,184:INFO:             IPython: 8.6.0
2022-11-05 18:11:39,184:INFO:          ipywidgets: 8.0.2
2022-11-05 18:11:39,184:INFO:                tqdm: 4.64.1
2022-11-05 18:11:39,184:INFO:               numpy: 1.22.4
2022-11-05 18:11:39,184:INFO:              pandas: 1.4.4
2022-11-05 18:11:39,184:INFO:              jinja2: 3.1.2
2022-11-05 18:11:39,184:INFO:               scipy: 1.8.1
2022-11-05 18:11:39,184:INFO:              joblib: 1.2.0
2022-11-05 18:11:39,184:INFO:             sklearn: 1.1.3
2022-11-05 18:11:39,184:INFO:                pyod: 1.0.6
2022-11-05 18:11:39,185:INFO:            imblearn: 0.9.1
2022-11-05 18:11:39,185:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:11:39,185:INFO:            lightgbm: 3.3.3
2022-11-05 18:11:39,185:INFO:               numba: 0.55.2
2022-11-05 18:11:39,185:INFO:            requests: 2.28.1
2022-11-05 18:11:39,185:INFO:          matplotlib: 3.6.2
2022-11-05 18:11:39,185:INFO:          scikitplot: 0.3.7
2022-11-05 18:11:39,185:INFO:         yellowbrick: 1.5
2022-11-05 18:11:39,185:INFO:              plotly: 5.11.0
2022-11-05 18:11:39,185:INFO:             kaleido: 0.2.1
2022-11-05 18:11:39,186:INFO:         statsmodels: 0.13.5
2022-11-05 18:11:39,186:INFO:              sktime: 0.13.4
2022-11-05 18:11:39,186:INFO:               tbats: 1.1.1
2022-11-05 18:11:39,186:INFO:            pmdarima: 1.8.5
2022-11-05 18:11:39,186:INFO:              psutil: 5.9.3
2022-11-05 18:11:39,186:INFO:PyCaret optional dependencies:
2022-11-05 18:11:39,186:INFO:                shap: Not installed
2022-11-05 18:11:39,186:INFO:           interpret: Not installed
2022-11-05 18:11:39,186:INFO:                umap: Not installed
2022-11-05 18:11:39,186:INFO:    pandas_profiling: Not installed
2022-11-05 18:11:39,187:INFO:  explainerdashboard: Not installed
2022-11-05 18:11:39,187:INFO:             autoviz: Not installed
2022-11-05 18:11:39,187:INFO:           fairlearn: Not installed
2022-11-05 18:11:39,187:INFO:             xgboost: Not installed
2022-11-05 18:11:39,187:INFO:            catboost: Not installed
2022-11-05 18:11:39,187:INFO:              kmodes: Not installed
2022-11-05 18:11:39,187:INFO:             mlxtend: Not installed
2022-11-05 18:11:39,187:INFO:       statsforecast: Not installed
2022-11-05 18:11:39,187:INFO:        tune_sklearn: Not installed
2022-11-05 18:11:39,187:INFO:                 ray: Not installed
2022-11-05 18:11:39,188:INFO:            hyperopt: Not installed
2022-11-05 18:11:39,188:INFO:              optuna: Not installed
2022-11-05 18:11:39,188:INFO:               skopt: Not installed
2022-11-05 18:11:39,188:INFO:              mlflow: Not installed
2022-11-05 18:11:39,188:INFO:              gradio: Not installed
2022-11-05 18:11:39,188:INFO:             fastapi: Not installed
2022-11-05 18:11:39,188:INFO:             uvicorn: Not installed
2022-11-05 18:11:39,188:INFO:              m2cgen: Not installed
2022-11-05 18:11:39,188:INFO:           evidently: Not installed
2022-11-05 18:11:39,188:INFO:                nltk: Not installed
2022-11-05 18:11:39,188:INFO:            pyLDAvis: Not installed
2022-11-05 18:11:39,188:INFO:              gensim: Not installed
2022-11-05 18:11:39,188:INFO:               spacy: 3.4.2
2022-11-05 18:11:39,189:INFO:           wordcloud: Not installed
2022-11-05 18:11:39,189:INFO:            textblob: Not installed
2022-11-05 18:11:39,189:INFO:               fugue: Not installed
2022-11-05 18:11:39,189:INFO:           streamlit: Not installed
2022-11-05 18:11:39,189:INFO:             prophet: Not installed
2022-11-05 18:11:39,189:INFO:None
2022-11-05 18:11:39,189:INFO:Set up data.
2022-11-05 18:11:39,206:INFO:Set up train/test split.
2022-11-05 18:11:39,213:INFO:Set up index.
2022-11-05 18:11:39,214:INFO:Set up folding strategy.
2022-11-05 18:11:39,214:INFO:Assigning column types.
2022-11-05 18:11:39,218:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:11:39,219:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,227:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,236:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,339:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,417:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:39,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:39,419:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,427:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,435:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:39,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:39,611:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:11:39,619:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,626:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:39,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:39,823:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,831:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:11:39,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,041:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:11:40,057:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,160:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,252:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,470:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:11:40,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,682:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,800:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:11:40,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:40,876:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:11:40,995:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:41,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,189:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:11:41,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,265:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:11:41,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:41,652:INFO:Preparing preprocessing pipeline...
2022-11-05 18:11:41,653:INFO:Set up simple imputation.
2022-11-05 18:11:41,657:INFO:Set up encoding of categorical features.
2022-11-05 18:11:41,657:INFO:Set up variance threshold.
2022-11-05 18:11:42,195:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:11:42,206:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:11:42,206:INFO:Creating final display dataframe.
2022-11-05 18:11:44,040:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 6)
4           Train data shape        (10124, 6)
5            Test data shape         (4340, 6)
6           Numeric features                 2
7       Categorical features                 3
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              b424
2022-11-05 18:11:44,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:44,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:44,439:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:44,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:11:44,451:INFO:setup() successfully completed in 5.27s...............
2022-11-05 18:11:44,564:INFO:Initializing compare_models()
2022-11-05 18:11:44,565:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:11:44,565:INFO:Checking exceptions
2022-11-05 18:11:44,569:INFO:Preparing display monitor
2022-11-05 18:11:44,618:INFO:Initializing Linear Regression
2022-11-05 18:11:44,618:INFO:Total runtime is 3.516674041748047e-06 minutes
2022-11-05 18:11:44,623:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:44,623:INFO:Initializing create_model()
2022-11-05 18:11:44,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:44,624:INFO:Checking exceptions
2022-11-05 18:11:44,631:INFO:Importing libraries
2022-11-05 18:11:44,631:INFO:Copying training dataset
2022-11-05 18:11:44,636:INFO:Defining folds
2022-11-05 18:11:44,637:INFO:Declaring metric variables
2022-11-05 18:11:44,641:INFO:Importing untrained model
2022-11-05 18:11:44,647:INFO:Linear Regression Imported successfully
2022-11-05 18:11:44,656:INFO:Cross validation set to False
2022-11-05 18:11:44,656:INFO:Fitting Model
2022-11-05 18:11:45,194:INFO:Initializing predict_model()
2022-11-05 18:11:45,194:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1443d6040>)
2022-11-05 18:11:45,194:INFO:Checking exceptions
2022-11-05 18:11:45,194:INFO:Preloading libraries
2022-11-05 18:11:45,603:INFO:display_container: 2
2022-11-05 18:11:45,606:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:11:45,606:INFO:create_model() successfully completed......................................
2022-11-05 18:11:45,964:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:45,964:INFO:Creating metrics dataframe
2022-11-05 18:11:45,983:INFO:Initializing Lasso Regression
2022-11-05 18:11:45,983:INFO:Total runtime is 0.022749332586924235 minutes
2022-11-05 18:11:45,991:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:45,991:INFO:Initializing create_model()
2022-11-05 18:11:45,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:45,992:INFO:Checking exceptions
2022-11-05 18:11:45,997:INFO:Importing libraries
2022-11-05 18:11:45,997:INFO:Copying training dataset
2022-11-05 18:11:46,015:INFO:Defining folds
2022-11-05 18:11:46,016:INFO:Declaring metric variables
2022-11-05 18:11:46,027:INFO:Importing untrained model
2022-11-05 18:11:46,048:INFO:Lasso Regression Imported successfully
2022-11-05 18:11:46,065:INFO:Cross validation set to False
2022-11-05 18:11:46,065:INFO:Fitting Model
2022-11-05 18:11:46,278:INFO:Initializing predict_model()
2022-11-05 18:11:46,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c815e0>)
2022-11-05 18:11:46,278:INFO:Checking exceptions
2022-11-05 18:11:46,278:INFO:Preloading libraries
2022-11-05 18:11:46,668:INFO:display_container: 2
2022-11-05 18:11:46,670:INFO:Lasso(random_state=23)
2022-11-05 18:11:46,671:INFO:create_model() successfully completed......................................
2022-11-05 18:11:46,937:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:46,937:INFO:Creating metrics dataframe
2022-11-05 18:11:46,950:INFO:Initializing Ridge Regression
2022-11-05 18:11:46,950:INFO:Total runtime is 0.038874749342600504 minutes
2022-11-05 18:11:46,955:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:46,956:INFO:Initializing create_model()
2022-11-05 18:11:46,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:46,956:INFO:Checking exceptions
2022-11-05 18:11:46,960:INFO:Importing libraries
2022-11-05 18:11:46,960:INFO:Copying training dataset
2022-11-05 18:11:46,966:INFO:Defining folds
2022-11-05 18:11:46,966:INFO:Declaring metric variables
2022-11-05 18:11:46,972:INFO:Importing untrained model
2022-11-05 18:11:46,977:INFO:Ridge Regression Imported successfully
2022-11-05 18:11:46,984:INFO:Cross validation set to False
2022-11-05 18:11:46,984:INFO:Fitting Model
2022-11-05 18:11:47,152:INFO:Initializing predict_model()
2022-11-05 18:11:47,152:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81ca0>)
2022-11-05 18:11:47,153:INFO:Checking exceptions
2022-11-05 18:11:47,153:INFO:Preloading libraries
2022-11-05 18:11:47,558:INFO:display_container: 2
2022-11-05 18:11:47,560:INFO:Ridge(random_state=23)
2022-11-05 18:11:47,560:INFO:create_model() successfully completed......................................
2022-11-05 18:11:47,827:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:47,828:INFO:Creating metrics dataframe
2022-11-05 18:11:47,841:INFO:Initializing Elastic Net
2022-11-05 18:11:47,842:INFO:Total runtime is 0.05372923215230306 minutes
2022-11-05 18:11:47,846:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:47,847:INFO:Initializing create_model()
2022-11-05 18:11:47,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:47,847:INFO:Checking exceptions
2022-11-05 18:11:47,851:INFO:Importing libraries
2022-11-05 18:11:47,851:INFO:Copying training dataset
2022-11-05 18:11:47,858:INFO:Defining folds
2022-11-05 18:11:47,858:INFO:Declaring metric variables
2022-11-05 18:11:47,863:INFO:Importing untrained model
2022-11-05 18:11:47,869:INFO:Elastic Net Imported successfully
2022-11-05 18:11:47,877:INFO:Cross validation set to False
2022-11-05 18:11:47,877:INFO:Fitting Model
2022-11-05 18:11:48,052:INFO:Initializing predict_model()
2022-11-05 18:11:48,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81dc0>)
2022-11-05 18:11:48,052:INFO:Checking exceptions
2022-11-05 18:11:48,052:INFO:Preloading libraries
2022-11-05 18:11:48,434:INFO:display_container: 2
2022-11-05 18:11:48,436:INFO:ElasticNet(random_state=23)
2022-11-05 18:11:48,436:INFO:create_model() successfully completed......................................
2022-11-05 18:11:48,715:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:48,715:INFO:Creating metrics dataframe
2022-11-05 18:11:48,729:INFO:Initializing Least Angle Regression
2022-11-05 18:11:48,729:INFO:Total runtime is 0.06852186918258667 minutes
2022-11-05 18:11:48,734:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:48,735:INFO:Initializing create_model()
2022-11-05 18:11:48,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:48,735:INFO:Checking exceptions
2022-11-05 18:11:48,739:INFO:Importing libraries
2022-11-05 18:11:48,739:INFO:Copying training dataset
2022-11-05 18:11:48,746:INFO:Defining folds
2022-11-05 18:11:48,746:INFO:Declaring metric variables
2022-11-05 18:11:48,752:INFO:Importing untrained model
2022-11-05 18:11:48,759:INFO:Least Angle Regression Imported successfully
2022-11-05 18:11:48,765:INFO:Cross validation set to False
2022-11-05 18:11:48,766:INFO:Fitting Model
2022-11-05 18:11:48,937:INFO:Initializing predict_model()
2022-11-05 18:11:48,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c814c0>)
2022-11-05 18:11:48,937:INFO:Checking exceptions
2022-11-05 18:11:48,938:INFO:Preloading libraries
2022-11-05 18:11:49,311:INFO:display_container: 2
2022-11-05 18:11:49,312:INFO:Lars(random_state=23)
2022-11-05 18:11:49,313:INFO:create_model() successfully completed......................................
2022-11-05 18:11:49,570:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:49,570:INFO:Creating metrics dataframe
2022-11-05 18:11:49,585:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:11:49,586:INFO:Total runtime is 0.08279675245285034 minutes
2022-11-05 18:11:49,592:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:49,592:INFO:Initializing create_model()
2022-11-05 18:11:49,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:49,593:INFO:Checking exceptions
2022-11-05 18:11:49,596:INFO:Importing libraries
2022-11-05 18:11:49,596:INFO:Copying training dataset
2022-11-05 18:11:49,604:INFO:Defining folds
2022-11-05 18:11:49,604:INFO:Declaring metric variables
2022-11-05 18:11:49,612:INFO:Importing untrained model
2022-11-05 18:11:49,621:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:11:49,631:INFO:Cross validation set to False
2022-11-05 18:11:49,631:INFO:Fitting Model
2022-11-05 18:11:49,823:INFO:Initializing predict_model()
2022-11-05 18:11:49,824:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81310>)
2022-11-05 18:11:49,824:INFO:Checking exceptions
2022-11-05 18:11:49,824:INFO:Preloading libraries
2022-11-05 18:11:50,189:INFO:display_container: 2
2022-11-05 18:11:50,191:INFO:LassoLars(random_state=23)
2022-11-05 18:11:50,191:INFO:create_model() successfully completed......................................
2022-11-05 18:11:50,457:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:50,457:INFO:Creating metrics dataframe
2022-11-05 18:11:50,472:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:11:50,472:INFO:Total runtime is 0.09757423400878906 minutes
2022-11-05 18:11:50,478:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:50,478:INFO:Initializing create_model()
2022-11-05 18:11:50,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:50,478:INFO:Checking exceptions
2022-11-05 18:11:50,482:INFO:Importing libraries
2022-11-05 18:11:50,482:INFO:Copying training dataset
2022-11-05 18:11:50,488:INFO:Defining folds
2022-11-05 18:11:50,489:INFO:Declaring metric variables
2022-11-05 18:11:50,494:INFO:Importing untrained model
2022-11-05 18:11:50,499:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:11:50,506:INFO:Cross validation set to False
2022-11-05 18:11:50,506:INFO:Fitting Model
2022-11-05 18:11:50,675:INFO:Initializing predict_model()
2022-11-05 18:11:50,676:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81550>)
2022-11-05 18:11:50,676:INFO:Checking exceptions
2022-11-05 18:11:50,676:INFO:Preloading libraries
2022-11-05 18:11:51,044:INFO:display_container: 2
2022-11-05 18:11:51,046:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:11:51,046:INFO:create_model() successfully completed......................................
2022-11-05 18:11:51,307:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:51,308:INFO:Creating metrics dataframe
2022-11-05 18:11:51,323:INFO:Initializing Bayesian Ridge
2022-11-05 18:11:51,323:INFO:Total runtime is 0.11175216436386108 minutes
2022-11-05 18:11:51,328:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:51,328:INFO:Initializing create_model()
2022-11-05 18:11:51,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:51,329:INFO:Checking exceptions
2022-11-05 18:11:51,333:INFO:Importing libraries
2022-11-05 18:11:51,333:INFO:Copying training dataset
2022-11-05 18:11:51,339:INFO:Defining folds
2022-11-05 18:11:51,339:INFO:Declaring metric variables
2022-11-05 18:11:51,344:INFO:Importing untrained model
2022-11-05 18:11:51,349:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:11:51,356:INFO:Cross validation set to False
2022-11-05 18:11:51,356:INFO:Fitting Model
2022-11-05 18:11:51,533:INFO:Initializing predict_model()
2022-11-05 18:11:51,534:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81dc0>)
2022-11-05 18:11:51,534:INFO:Checking exceptions
2022-11-05 18:11:51,534:INFO:Preloading libraries
2022-11-05 18:11:51,914:INFO:display_container: 2
2022-11-05 18:11:51,916:INFO:BayesianRidge()
2022-11-05 18:11:51,916:INFO:create_model() successfully completed......................................
2022-11-05 18:11:52,175:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:52,176:INFO:Creating metrics dataframe
2022-11-05 18:11:52,191:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:11:52,191:INFO:Total runtime is 0.1262140194574992 minutes
2022-11-05 18:11:52,196:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:52,196:INFO:Initializing create_model()
2022-11-05 18:11:52,196:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:52,197:INFO:Checking exceptions
2022-11-05 18:11:52,201:INFO:Importing libraries
2022-11-05 18:11:52,201:INFO:Copying training dataset
2022-11-05 18:11:52,208:INFO:Defining folds
2022-11-05 18:11:52,208:INFO:Declaring metric variables
2022-11-05 18:11:52,214:INFO:Importing untrained model
2022-11-05 18:11:52,219:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:11:52,225:INFO:Cross validation set to False
2022-11-05 18:11:52,225:INFO:Fitting Model
2022-11-05 18:11:52,433:INFO:Initializing predict_model()
2022-11-05 18:11:52,433:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81670>)
2022-11-05 18:11:52,434:INFO:Checking exceptions
2022-11-05 18:11:52,435:INFO:Preloading libraries
2022-11-05 18:11:52,938:INFO:display_container: 2
2022-11-05 18:11:52,940:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:11:52,940:INFO:create_model() successfully completed......................................
2022-11-05 18:11:53,198:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:53,198:INFO:Creating metrics dataframe
2022-11-05 18:11:53,217:INFO:Initializing Huber Regressor
2022-11-05 18:11:53,217:INFO:Total runtime is 0.14331348339716593 minutes
2022-11-05 18:11:53,222:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:53,223:INFO:Initializing create_model()
2022-11-05 18:11:53,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:53,223:INFO:Checking exceptions
2022-11-05 18:11:53,227:INFO:Importing libraries
2022-11-05 18:11:53,227:INFO:Copying training dataset
2022-11-05 18:11:53,235:INFO:Defining folds
2022-11-05 18:11:53,235:INFO:Declaring metric variables
2022-11-05 18:11:53,240:INFO:Importing untrained model
2022-11-05 18:11:53,247:INFO:Huber Regressor Imported successfully
2022-11-05 18:11:53,254:INFO:Cross validation set to False
2022-11-05 18:11:53,255:INFO:Fitting Model
2022-11-05 18:11:53,616:INFO:Initializing predict_model()
2022-11-05 18:11:53,616:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81700>)
2022-11-05 18:11:53,617:INFO:Checking exceptions
2022-11-05 18:11:53,617:INFO:Preloading libraries
2022-11-05 18:11:54,044:INFO:display_container: 2
2022-11-05 18:11:54,047:INFO:HuberRegressor()
2022-11-05 18:11:54,047:INFO:create_model() successfully completed......................................
2022-11-05 18:11:54,408:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:54,408:INFO:Creating metrics dataframe
2022-11-05 18:11:54,426:INFO:Initializing K Neighbors Regressor
2022-11-05 18:11:54,426:INFO:Total runtime is 0.1634736140569051 minutes
2022-11-05 18:11:54,432:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:54,432:INFO:Initializing create_model()
2022-11-05 18:11:54,432:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:54,433:INFO:Checking exceptions
2022-11-05 18:11:54,437:INFO:Importing libraries
2022-11-05 18:11:54,437:INFO:Copying training dataset
2022-11-05 18:11:54,444:INFO:Defining folds
2022-11-05 18:11:54,444:INFO:Declaring metric variables
2022-11-05 18:11:54,449:INFO:Importing untrained model
2022-11-05 18:11:54,455:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:11:54,460:INFO:Cross validation set to False
2022-11-05 18:11:54,461:INFO:Fitting Model
2022-11-05 18:11:54,633:INFO:Initializing predict_model()
2022-11-05 18:11:54,633:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c813a0>)
2022-11-05 18:11:54,633:INFO:Checking exceptions
2022-11-05 18:11:54,633:INFO:Preloading libraries
2022-11-05 18:11:55,014:INFO:display_container: 2
2022-11-05 18:11:55,016:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:11:55,017:INFO:create_model() successfully completed......................................
2022-11-05 18:11:55,280:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:55,280:INFO:Creating metrics dataframe
2022-11-05 18:11:55,297:INFO:Initializing Decision Tree Regressor
2022-11-05 18:11:55,297:INFO:Total runtime is 0.17798033157984416 minutes
2022-11-05 18:11:55,301:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:55,302:INFO:Initializing create_model()
2022-11-05 18:11:55,302:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:55,302:INFO:Checking exceptions
2022-11-05 18:11:55,306:INFO:Importing libraries
2022-11-05 18:11:55,306:INFO:Copying training dataset
2022-11-05 18:11:55,312:INFO:Defining folds
2022-11-05 18:11:55,312:INFO:Declaring metric variables
2022-11-05 18:11:55,317:INFO:Importing untrained model
2022-11-05 18:11:55,322:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:11:55,328:INFO:Cross validation set to False
2022-11-05 18:11:55,328:INFO:Fitting Model
2022-11-05 18:11:55,534:INFO:Initializing predict_model()
2022-11-05 18:11:55,534:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81670>)
2022-11-05 18:11:55,534:INFO:Checking exceptions
2022-11-05 18:11:55,534:INFO:Preloading libraries
2022-11-05 18:11:55,900:INFO:display_container: 2
2022-11-05 18:11:55,902:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:11:55,903:INFO:create_model() successfully completed......................................
2022-11-05 18:11:56,157:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:56,157:INFO:Creating metrics dataframe
2022-11-05 18:11:56,174:INFO:Initializing Random Forest Regressor
2022-11-05 18:11:56,174:INFO:Total runtime is 0.19260660012563072 minutes
2022-11-05 18:11:56,179:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:56,179:INFO:Initializing create_model()
2022-11-05 18:11:56,179:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:56,180:INFO:Checking exceptions
2022-11-05 18:11:56,184:INFO:Importing libraries
2022-11-05 18:11:56,184:INFO:Copying training dataset
2022-11-05 18:11:56,190:INFO:Defining folds
2022-11-05 18:11:56,190:INFO:Declaring metric variables
2022-11-05 18:11:56,195:INFO:Importing untrained model
2022-11-05 18:11:56,200:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:11:56,205:INFO:Cross validation set to False
2022-11-05 18:11:56,206:INFO:Fitting Model
2022-11-05 18:11:57,513:INFO:Initializing predict_model()
2022-11-05 18:11:57,513:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81f70>)
2022-11-05 18:11:57,514:INFO:Checking exceptions
2022-11-05 18:11:57,514:INFO:Preloading libraries
2022-11-05 18:11:58,003:INFO:display_container: 2
2022-11-05 18:11:58,004:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:11:58,005:INFO:create_model() successfully completed......................................
2022-11-05 18:11:58,263:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:58,264:INFO:Creating metrics dataframe
2022-11-05 18:11:58,281:INFO:Initializing Extra Trees Regressor
2022-11-05 18:11:58,281:INFO:Total runtime is 0.22771698236465457 minutes
2022-11-05 18:11:58,286:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:58,287:INFO:Initializing create_model()
2022-11-05 18:11:58,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:58,287:INFO:Checking exceptions
2022-11-05 18:11:58,291:INFO:Importing libraries
2022-11-05 18:11:58,291:INFO:Copying training dataset
2022-11-05 18:11:58,297:INFO:Defining folds
2022-11-05 18:11:58,297:INFO:Declaring metric variables
2022-11-05 18:11:58,302:INFO:Importing untrained model
2022-11-05 18:11:58,307:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:11:58,312:INFO:Cross validation set to False
2022-11-05 18:11:58,312:INFO:Fitting Model
2022-11-05 18:11:58,975:INFO:Initializing predict_model()
2022-11-05 18:11:58,975:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81430>)
2022-11-05 18:11:58,975:INFO:Checking exceptions
2022-11-05 18:11:58,975:INFO:Preloading libraries
2022-11-05 18:11:59,453:INFO:display_container: 2
2022-11-05 18:11:59,455:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:11:59,455:INFO:create_model() successfully completed......................................
2022-11-05 18:11:59,714:INFO:SubProcess create_model() end ==================================
2022-11-05 18:11:59,714:INFO:Creating metrics dataframe
2022-11-05 18:11:59,732:INFO:Initializing AdaBoost Regressor
2022-11-05 18:11:59,732:INFO:Total runtime is 0.251908552646637 minutes
2022-11-05 18:11:59,738:INFO:SubProcess create_model() called ==================================
2022-11-05 18:11:59,738:INFO:Initializing create_model()
2022-11-05 18:11:59,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:11:59,738:INFO:Checking exceptions
2022-11-05 18:11:59,742:INFO:Importing libraries
2022-11-05 18:11:59,742:INFO:Copying training dataset
2022-11-05 18:11:59,748:INFO:Defining folds
2022-11-05 18:11:59,749:INFO:Declaring metric variables
2022-11-05 18:11:59,754:INFO:Importing untrained model
2022-11-05 18:11:59,758:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:11:59,764:INFO:Cross validation set to False
2022-11-05 18:11:59,764:INFO:Fitting Model
2022-11-05 18:12:00,059:INFO:Initializing predict_model()
2022-11-05 18:12:00,060:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c815e0>)
2022-11-05 18:12:00,060:INFO:Checking exceptions
2022-11-05 18:12:00,061:INFO:Preloading libraries
2022-11-05 18:12:00,430:INFO:display_container: 2
2022-11-05 18:12:00,432:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:12:00,432:INFO:create_model() successfully completed......................................
2022-11-05 18:12:00,690:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:00,690:INFO:Creating metrics dataframe
2022-11-05 18:12:00,709:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:12:00,709:INFO:Total runtime is 0.26818255186080936 minutes
2022-11-05 18:12:00,713:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:00,714:INFO:Initializing create_model()
2022-11-05 18:12:00,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:00,714:INFO:Checking exceptions
2022-11-05 18:12:00,718:INFO:Importing libraries
2022-11-05 18:12:00,719:INFO:Copying training dataset
2022-11-05 18:12:00,725:INFO:Defining folds
2022-11-05 18:12:00,725:INFO:Declaring metric variables
2022-11-05 18:12:00,730:INFO:Importing untrained model
2022-11-05 18:12:00,735:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:12:00,741:INFO:Cross validation set to False
2022-11-05 18:12:00,741:INFO:Fitting Model
2022-11-05 18:12:01,885:INFO:Initializing predict_model()
2022-11-05 18:12:01,885:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c815e0>)
2022-11-05 18:12:01,885:INFO:Checking exceptions
2022-11-05 18:12:01,886:INFO:Preloading libraries
2022-11-05 18:12:02,310:INFO:display_container: 2
2022-11-05 18:12:02,311:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:12:02,312:INFO:create_model() successfully completed......................................
2022-11-05 18:12:02,573:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:02,573:INFO:Creating metrics dataframe
2022-11-05 18:12:02,592:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:12:02,592:INFO:Total runtime is 0.29957081874211633 minutes
2022-11-05 18:12:02,597:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:02,597:INFO:Initializing create_model()
2022-11-05 18:12:02,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:02,597:INFO:Checking exceptions
2022-11-05 18:12:02,601:INFO:Importing libraries
2022-11-05 18:12:02,601:INFO:Copying training dataset
2022-11-05 18:12:02,607:INFO:Defining folds
2022-11-05 18:12:02,607:INFO:Declaring metric variables
2022-11-05 18:12:02,612:INFO:Importing untrained model
2022-11-05 18:12:02,617:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:12:02,623:INFO:Cross validation set to False
2022-11-05 18:12:02,623:INFO:Fitting Model
2022-11-05 18:12:02,876:INFO:Initializing predict_model()
2022-11-05 18:12:02,877:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c813a0>)
2022-11-05 18:12:02,877:INFO:Checking exceptions
2022-11-05 18:12:02,877:INFO:Preloading libraries
2022-11-05 18:12:03,288:INFO:display_container: 2
2022-11-05 18:12:03,290:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:12:03,291:INFO:create_model() successfully completed......................................
2022-11-05 18:12:03,553:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:03,553:INFO:Creating metrics dataframe
2022-11-05 18:12:03,572:INFO:Initializing Dummy Regressor
2022-11-05 18:12:03,572:INFO:Total runtime is 0.3158971150716146 minutes
2022-11-05 18:12:03,577:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:03,577:INFO:Initializing create_model()
2022-11-05 18:12:03,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x141e22a60>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:03,577:INFO:Checking exceptions
2022-11-05 18:12:03,582:INFO:Importing libraries
2022-11-05 18:12:03,582:INFO:Copying training dataset
2022-11-05 18:12:03,588:INFO:Defining folds
2022-11-05 18:12:03,589:INFO:Declaring metric variables
2022-11-05 18:12:03,593:INFO:Importing untrained model
2022-11-05 18:12:03,598:INFO:Dummy Regressor Imported successfully
2022-11-05 18:12:03,603:INFO:Cross validation set to False
2022-11-05 18:12:03,604:INFO:Fitting Model
2022-11-05 18:12:03,765:INFO:Initializing predict_model()
2022-11-05 18:12:03,766:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities',
                                             'week_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141c81a60>)
2022-11-05 18:12:03,766:INFO:Checking exceptions
2022-11-05 18:12:03,766:INFO:Preloading libraries
2022-11-05 18:12:04,129:INFO:display_container: 2
2022-11-05 18:12:04,131:INFO:DummyRegressor()
2022-11-05 18:12:04,131:INFO:create_model() successfully completed......................................
2022-11-05 18:12:04,393:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:04,394:INFO:Creating metrics dataframe
2022-11-05 18:12:04,425:INFO:Initializing create_model()
2022-11-05 18:12:04,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14205da00>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:04,425:INFO:Checking exceptions
2022-11-05 18:12:04,432:INFO:Importing libraries
2022-11-05 18:12:04,432:INFO:Copying training dataset
2022-11-05 18:12:04,437:INFO:Defining folds
2022-11-05 18:12:04,437:INFO:Declaring metric variables
2022-11-05 18:12:04,437:INFO:Importing untrained model
2022-11-05 18:12:04,437:INFO:Declaring custom model
2022-11-05 18:12:04,438:INFO:Linear Regression Imported successfully
2022-11-05 18:12:04,439:INFO:Cross validation set to False
2022-11-05 18:12:04,439:INFO:Fitting Model
2022-11-05 18:12:04,592:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:12:04,592:INFO:create_model() successfully completed......................................
2022-11-05 18:12:04,896:INFO:master_model_container: 0
2022-11-05 18:12:04,896:INFO:display_container: 2
2022-11-05 18:12:04,897:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:12:04,897:INFO:compare_models() successfully completed......................................
2022-11-05 18:12:34,866:INFO:PyCaret RegressionExperiment
2022-11-05 18:12:34,867:INFO:Logging name: reg-default-name
2022-11-05 18:12:34,867:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:12:34,867:INFO:version 3.0.0.rc4
2022-11-05 18:12:34,868:INFO:Initializing setup()
2022-11-05 18:12:34,868:INFO:self.USI: 92fb
2022-11-05 18:12:34,868:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:12:34,868:INFO:Checking environment
2022-11-05 18:12:34,868:INFO:python_version: 3.9.6
2022-11-05 18:12:34,868:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:12:34,868:INFO:machine: x86_64
2022-11-05 18:12:34,868:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:12:34,868:INFO:Memory: svmem(total=17179869184, available=6605623296, percent=61.6, used=8948305920, free=92766208, active=6513496064, inactive=6475513856, wired=2434809856)
2022-11-05 18:12:34,869:INFO:Physical Core: 4
2022-11-05 18:12:34,869:INFO:Logical Core: 4
2022-11-05 18:12:34,869:INFO:Checking libraries
2022-11-05 18:12:34,869:INFO:System:
2022-11-05 18:12:34,869:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:12:34,869:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:12:34,869:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:12:34,869:INFO:PyCaret required dependencies:
2022-11-05 18:12:34,869:INFO:                 pip: 21.2.4
2022-11-05 18:12:34,869:INFO:          setuptools: 58.0.4
2022-11-05 18:12:34,869:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:12:34,869:INFO:             IPython: 8.6.0
2022-11-05 18:12:34,869:INFO:          ipywidgets: 8.0.2
2022-11-05 18:12:34,869:INFO:                tqdm: 4.64.1
2022-11-05 18:12:34,870:INFO:               numpy: 1.22.4
2022-11-05 18:12:34,870:INFO:              pandas: 1.4.4
2022-11-05 18:12:34,870:INFO:              jinja2: 3.1.2
2022-11-05 18:12:34,870:INFO:               scipy: 1.8.1
2022-11-05 18:12:34,870:INFO:              joblib: 1.2.0
2022-11-05 18:12:34,870:INFO:             sklearn: 1.1.3
2022-11-05 18:12:34,870:INFO:                pyod: 1.0.6
2022-11-05 18:12:34,870:INFO:            imblearn: 0.9.1
2022-11-05 18:12:34,870:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:12:34,870:INFO:            lightgbm: 3.3.3
2022-11-05 18:12:34,870:INFO:               numba: 0.55.2
2022-11-05 18:12:34,870:INFO:            requests: 2.28.1
2022-11-05 18:12:34,870:INFO:          matplotlib: 3.6.2
2022-11-05 18:12:34,870:INFO:          scikitplot: 0.3.7
2022-11-05 18:12:34,870:INFO:         yellowbrick: 1.5
2022-11-05 18:12:34,870:INFO:              plotly: 5.11.0
2022-11-05 18:12:34,871:INFO:             kaleido: 0.2.1
2022-11-05 18:12:34,871:INFO:         statsmodels: 0.13.5
2022-11-05 18:12:34,871:INFO:              sktime: 0.13.4
2022-11-05 18:12:34,871:INFO:               tbats: 1.1.1
2022-11-05 18:12:34,871:INFO:            pmdarima: 1.8.5
2022-11-05 18:12:34,871:INFO:              psutil: 5.9.3
2022-11-05 18:12:34,871:INFO:PyCaret optional dependencies:
2022-11-05 18:12:34,871:INFO:                shap: Not installed
2022-11-05 18:12:34,872:INFO:           interpret: Not installed
2022-11-05 18:12:34,872:INFO:                umap: Not installed
2022-11-05 18:12:34,872:INFO:    pandas_profiling: Not installed
2022-11-05 18:12:34,872:INFO:  explainerdashboard: Not installed
2022-11-05 18:12:34,872:INFO:             autoviz: Not installed
2022-11-05 18:12:34,872:INFO:           fairlearn: Not installed
2022-11-05 18:12:34,872:INFO:             xgboost: Not installed
2022-11-05 18:12:34,872:INFO:            catboost: Not installed
2022-11-05 18:12:34,872:INFO:              kmodes: Not installed
2022-11-05 18:12:34,872:INFO:             mlxtend: Not installed
2022-11-05 18:12:34,872:INFO:       statsforecast: Not installed
2022-11-05 18:12:34,872:INFO:        tune_sklearn: Not installed
2022-11-05 18:12:34,872:INFO:                 ray: Not installed
2022-11-05 18:12:34,872:INFO:            hyperopt: Not installed
2022-11-05 18:12:34,873:INFO:              optuna: Not installed
2022-11-05 18:12:34,873:INFO:               skopt: Not installed
2022-11-05 18:12:34,873:INFO:              mlflow: Not installed
2022-11-05 18:12:34,873:INFO:              gradio: Not installed
2022-11-05 18:12:34,873:INFO:             fastapi: Not installed
2022-11-05 18:12:34,873:INFO:             uvicorn: Not installed
2022-11-05 18:12:34,873:INFO:              m2cgen: Not installed
2022-11-05 18:12:34,873:INFO:           evidently: Not installed
2022-11-05 18:12:34,873:INFO:                nltk: Not installed
2022-11-05 18:12:34,873:INFO:            pyLDAvis: Not installed
2022-11-05 18:12:34,873:INFO:              gensim: Not installed
2022-11-05 18:12:34,873:INFO:               spacy: 3.4.2
2022-11-05 18:12:34,873:INFO:           wordcloud: Not installed
2022-11-05 18:12:34,873:INFO:            textblob: Not installed
2022-11-05 18:12:34,873:INFO:               fugue: Not installed
2022-11-05 18:12:34,873:INFO:           streamlit: Not installed
2022-11-05 18:12:34,874:INFO:             prophet: Not installed
2022-11-05 18:12:34,874:INFO:None
2022-11-05 18:12:34,874:INFO:Set up data.
2022-11-05 18:12:34,888:INFO:Set up train/test split.
2022-11-05 18:12:34,895:INFO:Set up index.
2022-11-05 18:12:34,895:INFO:Set up folding strategy.
2022-11-05 18:12:34,895:INFO:Assigning column types.
2022-11-05 18:12:34,900:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:12:34,900:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:12:34,907:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:12:34,914:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,014:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,091:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,099:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,106:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,278:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:12:35,285:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,476:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,484:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,578:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,659:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,661:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:12:35,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,781:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,862:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:35,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:35,880:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,102:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:12:36,213:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,409:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,489:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:12:36,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:12:36,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:36,870:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:12:37,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:37,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:37,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:37,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:37,258:INFO:Preparing preprocessing pipeline...
2022-11-05 18:12:37,259:INFO:Set up simple imputation.
2022-11-05 18:12:37,263:INFO:Set up encoding of categorical features.
2022-11-05 18:12:37,263:INFO:Set up variance threshold.
2022-11-05 18:12:37,792:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:12:37,803:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:12:37,803:INFO:Creating final display dataframe.
2022-11-05 18:12:39,957:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 5)
4           Train data shape        (10124, 5)
5            Test data shape         (4340, 5)
6           Numeric features                 1
7       Categorical features                 3
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              92fb
2022-11-05 18:12:40,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:40,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:40,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:40,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:12:40,754:INFO:setup() successfully completed in 5.89s...............
2022-11-05 18:12:49,987:INFO:Initializing compare_models()
2022-11-05 18:12:49,988:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:12:49,988:INFO:Checking exceptions
2022-11-05 18:12:49,992:INFO:Preparing display monitor
2022-11-05 18:12:50,066:INFO:Initializing Linear Regression
2022-11-05 18:12:50,066:INFO:Total runtime is 4.633267720540365e-06 minutes
2022-11-05 18:12:50,071:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:50,071:INFO:Initializing create_model()
2022-11-05 18:12:50,071:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:50,071:INFO:Checking exceptions
2022-11-05 18:12:50,076:INFO:Importing libraries
2022-11-05 18:12:50,080:INFO:Copying training dataset
2022-11-05 18:12:50,085:INFO:Defining folds
2022-11-05 18:12:50,085:INFO:Declaring metric variables
2022-11-05 18:12:50,105:INFO:Importing untrained model
2022-11-05 18:12:50,116:INFO:Linear Regression Imported successfully
2022-11-05 18:12:50,128:INFO:Cross validation set to False
2022-11-05 18:12:50,128:INFO:Fitting Model
2022-11-05 18:12:50,748:INFO:Initializing predict_model()
2022-11-05 18:12:50,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13d1ca9d0>)
2022-11-05 18:12:50,748:INFO:Checking exceptions
2022-11-05 18:12:50,748:INFO:Preloading libraries
2022-11-05 18:12:51,155:INFO:display_container: 2
2022-11-05 18:12:51,157:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:12:51,157:INFO:create_model() successfully completed......................................
2022-11-05 18:12:51,447:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:51,447:INFO:Creating metrics dataframe
2022-11-05 18:12:51,461:INFO:Initializing Lasso Regression
2022-11-05 18:12:51,462:INFO:Total runtime is 0.02326465050379435 minutes
2022-11-05 18:12:51,467:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:51,467:INFO:Initializing create_model()
2022-11-05 18:12:51,468:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:51,468:INFO:Checking exceptions
2022-11-05 18:12:51,473:INFO:Importing libraries
2022-11-05 18:12:51,473:INFO:Copying training dataset
2022-11-05 18:12:51,480:INFO:Defining folds
2022-11-05 18:12:51,480:INFO:Declaring metric variables
2022-11-05 18:12:51,488:INFO:Importing untrained model
2022-11-05 18:12:51,496:INFO:Lasso Regression Imported successfully
2022-11-05 18:12:51,502:INFO:Cross validation set to False
2022-11-05 18:12:51,503:INFO:Fitting Model
2022-11-05 18:12:51,695:INFO:Initializing predict_model()
2022-11-05 18:12:51,695:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...tant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298f70>)
2022-11-05 18:12:51,695:INFO:Checking exceptions
2022-11-05 18:12:51,696:INFO:Preloading libraries
2022-11-05 18:12:52,094:INFO:display_container: 2
2022-11-05 18:12:52,096:INFO:Lasso(random_state=23)
2022-11-05 18:12:52,096:INFO:create_model() successfully completed......................................
2022-11-05 18:12:52,366:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:52,366:INFO:Creating metrics dataframe
2022-11-05 18:12:52,380:INFO:Initializing Ridge Regression
2022-11-05 18:12:52,380:INFO:Total runtime is 0.03857504924138387 minutes
2022-11-05 18:12:52,385:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:52,385:INFO:Initializing create_model()
2022-11-05 18:12:52,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:52,386:INFO:Checking exceptions
2022-11-05 18:12:52,390:INFO:Importing libraries
2022-11-05 18:12:52,390:INFO:Copying training dataset
2022-11-05 18:12:52,396:INFO:Defining folds
2022-11-05 18:12:52,396:INFO:Declaring metric variables
2022-11-05 18:12:52,402:INFO:Importing untrained model
2022-11-05 18:12:52,407:INFO:Ridge Regression Imported successfully
2022-11-05 18:12:52,417:INFO:Cross validation set to False
2022-11-05 18:12:52,417:INFO:Fitting Model
2022-11-05 18:12:52,587:INFO:Initializing predict_model()
2022-11-05 18:12:52,587:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...tant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298d30>)
2022-11-05 18:12:52,587:INFO:Checking exceptions
2022-11-05 18:12:52,587:INFO:Preloading libraries
2022-11-05 18:12:52,957:INFO:display_container: 2
2022-11-05 18:12:52,959:INFO:Ridge(random_state=23)
2022-11-05 18:12:52,959:INFO:create_model() successfully completed......................................
2022-11-05 18:12:53,220:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:53,220:INFO:Creating metrics dataframe
2022-11-05 18:12:53,235:INFO:Initializing Elastic Net
2022-11-05 18:12:53,235:INFO:Total runtime is 0.05281993548075358 minutes
2022-11-05 18:12:53,240:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:53,240:INFO:Initializing create_model()
2022-11-05 18:12:53,240:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:53,241:INFO:Checking exceptions
2022-11-05 18:12:53,245:INFO:Importing libraries
2022-11-05 18:12:53,245:INFO:Copying training dataset
2022-11-05 18:12:53,251:INFO:Defining folds
2022-11-05 18:12:53,251:INFO:Declaring metric variables
2022-11-05 18:12:53,258:INFO:Importing untrained model
2022-11-05 18:12:53,268:INFO:Elastic Net Imported successfully
2022-11-05 18:12:53,278:INFO:Cross validation set to False
2022-11-05 18:12:53,278:INFO:Fitting Model
2022-11-05 18:12:53,454:INFO:Initializing predict_model()
2022-11-05 18:12:53,454:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298ee0>)
2022-11-05 18:12:53,454:INFO:Checking exceptions
2022-11-05 18:12:53,454:INFO:Preloading libraries
2022-11-05 18:12:53,821:INFO:display_container: 2
2022-11-05 18:12:53,823:INFO:ElasticNet(random_state=23)
2022-11-05 18:12:53,823:INFO:create_model() successfully completed......................................
2022-11-05 18:12:54,095:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:54,095:INFO:Creating metrics dataframe
2022-11-05 18:12:54,109:INFO:Initializing Least Angle Regression
2022-11-05 18:12:54,109:INFO:Total runtime is 0.06738826831181845 minutes
2022-11-05 18:12:54,114:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:54,115:INFO:Initializing create_model()
2022-11-05 18:12:54,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:54,115:INFO:Checking exceptions
2022-11-05 18:12:54,119:INFO:Importing libraries
2022-11-05 18:12:54,119:INFO:Copying training dataset
2022-11-05 18:12:54,125:INFO:Defining folds
2022-11-05 18:12:54,125:INFO:Declaring metric variables
2022-11-05 18:12:54,130:INFO:Importing untrained model
2022-11-05 18:12:54,135:INFO:Least Angle Regression Imported successfully
2022-11-05 18:12:54,141:INFO:Cross validation set to False
2022-11-05 18:12:54,141:INFO:Fitting Model
2022-11-05 18:12:54,309:INFO:Initializing predict_model()
2022-11-05 18:12:54,309:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...stant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298d30>)
2022-11-05 18:12:54,309:INFO:Checking exceptions
2022-11-05 18:12:54,309:INFO:Preloading libraries
2022-11-05 18:12:54,679:INFO:display_container: 2
2022-11-05 18:12:54,681:INFO:Lars(random_state=23)
2022-11-05 18:12:54,681:INFO:create_model() successfully completed......................................
2022-11-05 18:12:54,953:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:54,954:INFO:Creating metrics dataframe
2022-11-05 18:12:54,968:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:12:54,968:INFO:Total runtime is 0.08169901768366497 minutes
2022-11-05 18:12:54,972:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:54,973:INFO:Initializing create_model()
2022-11-05 18:12:54,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:54,974:INFO:Checking exceptions
2022-11-05 18:12:54,977:INFO:Importing libraries
2022-11-05 18:12:54,977:INFO:Copying training dataset
2022-11-05 18:12:54,983:INFO:Defining folds
2022-11-05 18:12:54,983:INFO:Declaring metric variables
2022-11-05 18:12:54,988:INFO:Importing untrained model
2022-11-05 18:12:54,993:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:12:55,001:INFO:Cross validation set to False
2022-11-05 18:12:55,001:INFO:Fitting Model
2022-11-05 18:12:55,170:INFO:Initializing predict_model()
2022-11-05 18:12:55,170:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298430>)
2022-11-05 18:12:55,171:INFO:Checking exceptions
2022-11-05 18:12:55,171:INFO:Preloading libraries
2022-11-05 18:12:55,534:INFO:display_container: 2
2022-11-05 18:12:55,536:INFO:LassoLars(random_state=23)
2022-11-05 18:12:55,536:INFO:create_model() successfully completed......................................
2022-11-05 18:12:55,799:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:55,799:INFO:Creating metrics dataframe
2022-11-05 18:12:55,813:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:12:55,813:INFO:Total runtime is 0.09578872124354046 minutes
2022-11-05 18:12:55,818:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:55,818:INFO:Initializing create_model()
2022-11-05 18:12:55,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:55,819:INFO:Checking exceptions
2022-11-05 18:12:55,822:INFO:Importing libraries
2022-11-05 18:12:55,823:INFO:Copying training dataset
2022-11-05 18:12:55,828:INFO:Defining folds
2022-11-05 18:12:55,829:INFO:Declaring metric variables
2022-11-05 18:12:55,834:INFO:Importing untrained model
2022-11-05 18:12:55,838:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:12:55,846:INFO:Cross validation set to False
2022-11-05 18:12:55,846:INFO:Fitting Model
2022-11-05 18:12:56,018:INFO:Initializing predict_model()
2022-11-05 18:12:56,018:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442989d0>)
2022-11-05 18:12:56,018:INFO:Checking exceptions
2022-11-05 18:12:56,018:INFO:Preloading libraries
2022-11-05 18:12:56,387:INFO:display_container: 2
2022-11-05 18:12:56,388:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:12:56,389:INFO:create_model() successfully completed......................................
2022-11-05 18:12:56,652:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:56,652:INFO:Creating metrics dataframe
2022-11-05 18:12:56,668:INFO:Initializing Bayesian Ridge
2022-11-05 18:12:56,668:INFO:Total runtime is 0.1100365996360779 minutes
2022-11-05 18:12:56,673:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:56,673:INFO:Initializing create_model()
2022-11-05 18:12:56,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:56,674:INFO:Checking exceptions
2022-11-05 18:12:56,678:INFO:Importing libraries
2022-11-05 18:12:56,678:INFO:Copying training dataset
2022-11-05 18:12:56,684:INFO:Defining folds
2022-11-05 18:12:56,684:INFO:Declaring metric variables
2022-11-05 18:12:56,689:INFO:Importing untrained model
2022-11-05 18:12:56,695:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:12:56,702:INFO:Cross validation set to False
2022-11-05 18:12:56,702:INFO:Fitting Model
2022-11-05 18:12:56,871:INFO:Initializing predict_model()
2022-11-05 18:12:56,871:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...y='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442980d0>)
2022-11-05 18:12:56,871:INFO:Checking exceptions
2022-11-05 18:12:56,871:INFO:Preloading libraries
2022-11-05 18:12:57,249:INFO:display_container: 2
2022-11-05 18:12:57,251:INFO:BayesianRidge()
2022-11-05 18:12:57,251:INFO:create_model() successfully completed......................................
2022-11-05 18:12:57,520:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:57,520:INFO:Creating metrics dataframe
2022-11-05 18:12:57,536:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:12:57,536:INFO:Total runtime is 0.12450223366419476 minutes
2022-11-05 18:12:57,541:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:57,541:INFO:Initializing create_model()
2022-11-05 18:12:57,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:57,541:INFO:Checking exceptions
2022-11-05 18:12:57,545:INFO:Importing libraries
2022-11-05 18:12:57,545:INFO:Copying training dataset
2022-11-05 18:12:57,551:INFO:Defining folds
2022-11-05 18:12:57,552:INFO:Declaring metric variables
2022-11-05 18:12:57,556:INFO:Importing untrained model
2022-11-05 18:12:57,561:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:12:57,569:INFO:Cross validation set to False
2022-11-05 18:12:57,569:INFO:Fitting Model
2022-11-05 18:12:57,743:INFO:Initializing predict_model()
2022-11-05 18:12:57,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298820>)
2022-11-05 18:12:57,744:INFO:Checking exceptions
2022-11-05 18:12:57,744:INFO:Preloading libraries
2022-11-05 18:12:58,123:INFO:display_container: 2
2022-11-05 18:12:58,125:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:12:58,126:INFO:create_model() successfully completed......................................
2022-11-05 18:12:58,412:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:58,412:INFO:Creating metrics dataframe
2022-11-05 18:12:58,428:INFO:Initializing Huber Regressor
2022-11-05 18:12:58,429:INFO:Total runtime is 0.1393772840499878 minutes
2022-11-05 18:12:58,434:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:58,434:INFO:Initializing create_model()
2022-11-05 18:12:58,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:58,435:INFO:Checking exceptions
2022-11-05 18:12:58,438:INFO:Importing libraries
2022-11-05 18:12:58,439:INFO:Copying training dataset
2022-11-05 18:12:58,445:INFO:Defining folds
2022-11-05 18:12:58,445:INFO:Declaring metric variables
2022-11-05 18:12:58,451:INFO:Importing untrained model
2022-11-05 18:12:58,455:INFO:Huber Regressor Imported successfully
2022-11-05 18:12:58,461:INFO:Cross validation set to False
2022-11-05 18:12:58,462:INFO:Fitting Model
2022-11-05 18:12:58,851:INFO:Initializing predict_model()
2022-11-05 18:12:58,851:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1417d75e0>)
2022-11-05 18:12:58,851:INFO:Checking exceptions
2022-11-05 18:12:58,851:INFO:Preloading libraries
2022-11-05 18:12:59,225:INFO:display_container: 2
2022-11-05 18:12:59,227:INFO:HuberRegressor()
2022-11-05 18:12:59,227:INFO:create_model() successfully completed......................................
2022-11-05 18:12:59,497:INFO:SubProcess create_model() end ==================================
2022-11-05 18:12:59,497:INFO:Creating metrics dataframe
2022-11-05 18:12:59,515:INFO:Initializing K Neighbors Regressor
2022-11-05 18:12:59,515:INFO:Total runtime is 0.15749190251032513 minutes
2022-11-05 18:12:59,520:INFO:SubProcess create_model() called ==================================
2022-11-05 18:12:59,521:INFO:Initializing create_model()
2022-11-05 18:12:59,521:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:12:59,521:INFO:Checking exceptions
2022-11-05 18:12:59,524:INFO:Importing libraries
2022-11-05 18:12:59,524:INFO:Copying training dataset
2022-11-05 18:12:59,531:INFO:Defining folds
2022-11-05 18:12:59,531:INFO:Declaring metric variables
2022-11-05 18:12:59,536:INFO:Importing untrained model
2022-11-05 18:12:59,541:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:12:59,559:INFO:Cross validation set to False
2022-11-05 18:12:59,559:INFO:Fitting Model
2022-11-05 18:12:59,731:INFO:Initializing predict_model()
2022-11-05 18:12:59,731:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...,
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298790>)
2022-11-05 18:12:59,731:INFO:Checking exceptions
2022-11-05 18:12:59,732:INFO:Preloading libraries
2022-11-05 18:13:00,127:INFO:display_container: 2
2022-11-05 18:13:00,129:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:13:00,129:INFO:create_model() successfully completed......................................
2022-11-05 18:13:00,392:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:00,392:INFO:Creating metrics dataframe
2022-11-05 18:13:00,409:INFO:Initializing Decision Tree Regressor
2022-11-05 18:13:00,409:INFO:Total runtime is 0.17237941821416222 minutes
2022-11-05 18:13:00,413:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:00,414:INFO:Initializing create_model()
2022-11-05 18:13:00,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:00,414:INFO:Checking exceptions
2022-11-05 18:13:00,418:INFO:Importing libraries
2022-11-05 18:13:00,418:INFO:Copying training dataset
2022-11-05 18:13:00,424:INFO:Defining folds
2022-11-05 18:13:00,424:INFO:Declaring metric variables
2022-11-05 18:13:00,429:INFO:Importing untrained model
2022-11-05 18:13:00,434:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:13:00,440:INFO:Cross validation set to False
2022-11-05 18:13:00,440:INFO:Fitting Model
2022-11-05 18:13:00,646:INFO:Initializing predict_model()
2022-11-05 18:13:00,646:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298c10>)
2022-11-05 18:13:00,646:INFO:Checking exceptions
2022-11-05 18:13:00,647:INFO:Preloading libraries
2022-11-05 18:13:01,013:INFO:display_container: 2
2022-11-05 18:13:01,015:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:13:01,015:INFO:create_model() successfully completed......................................
2022-11-05 18:13:01,285:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:01,285:INFO:Creating metrics dataframe
2022-11-05 18:13:01,302:INFO:Initializing Random Forest Regressor
2022-11-05 18:13:01,302:INFO:Total runtime is 0.1872758507728577 minutes
2022-11-05 18:13:01,307:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:01,308:INFO:Initializing create_model()
2022-11-05 18:13:01,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:01,308:INFO:Checking exceptions
2022-11-05 18:13:01,312:INFO:Importing libraries
2022-11-05 18:13:01,312:INFO:Copying training dataset
2022-11-05 18:13:01,318:INFO:Defining folds
2022-11-05 18:13:01,318:INFO:Declaring metric variables
2022-11-05 18:13:01,324:INFO:Importing untrained model
2022-11-05 18:13:01,329:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:13:01,334:INFO:Cross validation set to False
2022-11-05 18:13:01,335:INFO:Fitting Model
2022-11-05 18:13:02,516:INFO:Initializing predict_model()
2022-11-05 18:13:02,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442988b0>)
2022-11-05 18:13:02,517:INFO:Checking exceptions
2022-11-05 18:13:02,517:INFO:Preloading libraries
2022-11-05 18:13:02,934:INFO:display_container: 2
2022-11-05 18:13:02,936:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:13:02,936:INFO:create_model() successfully completed......................................
2022-11-05 18:13:03,207:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:03,207:INFO:Creating metrics dataframe
2022-11-05 18:13:03,225:INFO:Initializing Extra Trees Regressor
2022-11-05 18:13:03,225:INFO:Total runtime is 0.21932313442230228 minutes
2022-11-05 18:13:03,230:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:03,231:INFO:Initializing create_model()
2022-11-05 18:13:03,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:03,231:INFO:Checking exceptions
2022-11-05 18:13:03,235:INFO:Importing libraries
2022-11-05 18:13:03,235:INFO:Copying training dataset
2022-11-05 18:13:03,241:INFO:Defining folds
2022-11-05 18:13:03,241:INFO:Declaring metric variables
2022-11-05 18:13:03,246:INFO:Importing untrained model
2022-11-05 18:13:03,251:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:13:03,260:INFO:Cross validation set to False
2022-11-05 18:13:03,260:INFO:Fitting Model
2022-11-05 18:13:03,836:INFO:Initializing predict_model()
2022-11-05 18:13:03,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298c10>)
2022-11-05 18:13:03,836:INFO:Checking exceptions
2022-11-05 18:13:03,837:INFO:Preloading libraries
2022-11-05 18:13:04,251:INFO:display_container: 2
2022-11-05 18:13:04,253:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:13:04,254:INFO:create_model() successfully completed......................................
2022-11-05 18:13:04,525:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:04,525:INFO:Creating metrics dataframe
2022-11-05 18:13:04,543:INFO:Initializing AdaBoost Regressor
2022-11-05 18:13:04,543:INFO:Total runtime is 0.24128321806589764 minutes
2022-11-05 18:13:04,548:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:04,548:INFO:Initializing create_model()
2022-11-05 18:13:04,548:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:04,548:INFO:Checking exceptions
2022-11-05 18:13:04,552:INFO:Importing libraries
2022-11-05 18:13:04,552:INFO:Copying training dataset
2022-11-05 18:13:04,559:INFO:Defining folds
2022-11-05 18:13:04,559:INFO:Declaring metric variables
2022-11-05 18:13:04,564:INFO:Importing untrained model
2022-11-05 18:13:04,568:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:13:04,577:INFO:Cross validation set to False
2022-11-05 18:13:04,578:INFO:Fitting Model
2022-11-05 18:13:04,937:INFO:Initializing predict_model()
2022-11-05 18:13:04,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298e50>)
2022-11-05 18:13:04,938:INFO:Checking exceptions
2022-11-05 18:13:04,938:INFO:Preloading libraries
2022-11-05 18:13:05,328:INFO:display_container: 2
2022-11-05 18:13:05,330:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:13:05,330:INFO:create_model() successfully completed......................................
2022-11-05 18:13:05,793:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:05,793:INFO:Creating metrics dataframe
2022-11-05 18:13:05,811:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:13:05,812:INFO:Total runtime is 0.262428351243337 minutes
2022-11-05 18:13:05,816:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:05,817:INFO:Initializing create_model()
2022-11-05 18:13:05,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:05,817:INFO:Checking exceptions
2022-11-05 18:13:05,821:INFO:Importing libraries
2022-11-05 18:13:05,821:INFO:Copying training dataset
2022-11-05 18:13:05,827:INFO:Defining folds
2022-11-05 18:13:05,827:INFO:Declaring metric variables
2022-11-05 18:13:05,832:INFO:Importing untrained model
2022-11-05 18:13:05,837:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:13:05,844:INFO:Cross validation set to False
2022-11-05 18:13:05,844:INFO:Fitting Model
2022-11-05 18:13:07,160:INFO:Initializing predict_model()
2022-11-05 18:13:07,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144298d30>)
2022-11-05 18:13:07,161:INFO:Checking exceptions
2022-11-05 18:13:07,161:INFO:Preloading libraries
2022-11-05 18:13:07,831:INFO:display_container: 2
2022-11-05 18:13:07,833:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:13:07,833:INFO:create_model() successfully completed......................................
2022-11-05 18:13:08,130:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:08,130:INFO:Creating metrics dataframe
2022-11-05 18:13:08,150:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:13:08,150:INFO:Total runtime is 0.30139855146408084 minutes
2022-11-05 18:13:08,154:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:08,155:INFO:Initializing create_model()
2022-11-05 18:13:08,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:08,155:INFO:Checking exceptions
2022-11-05 18:13:08,159:INFO:Importing libraries
2022-11-05 18:13:08,159:INFO:Copying training dataset
2022-11-05 18:13:08,188:INFO:Defining folds
2022-11-05 18:13:08,188:INFO:Declaring metric variables
2022-11-05 18:13:08,195:INFO:Importing untrained model
2022-11-05 18:13:08,201:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:13:08,209:INFO:Cross validation set to False
2022-11-05 18:13:08,209:INFO:Fitting Model
2022-11-05 18:13:08,614:INFO:Initializing predict_model()
2022-11-05 18:13:08,614:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...,
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1417d78b0>)
2022-11-05 18:13:08,615:INFO:Checking exceptions
2022-11-05 18:13:08,615:INFO:Preloading libraries
2022-11-05 18:13:09,040:INFO:display_container: 2
2022-11-05 18:13:09,042:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:13:09,042:INFO:create_model() successfully completed......................................
2022-11-05 18:13:09,327:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:09,328:INFO:Creating metrics dataframe
2022-11-05 18:13:09,345:INFO:Initializing Dummy Regressor
2022-11-05 18:13:09,346:INFO:Total runtime is 0.32132788499196374 minutes
2022-11-05 18:13:09,350:INFO:SubProcess create_model() called ==================================
2022-11-05 18:13:09,350:INFO:Initializing create_model()
2022-11-05 18:13:09,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1387fb0a0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:09,351:INFO:Checking exceptions
2022-11-05 18:13:09,354:INFO:Importing libraries
2022-11-05 18:13:09,354:INFO:Copying training dataset
2022-11-05 18:13:09,360:INFO:Defining folds
2022-11-05 18:13:09,360:INFO:Declaring metric variables
2022-11-05 18:13:09,366:INFO:Importing untrained model
2022-11-05 18:13:09,370:INFO:Dummy Regressor Imported successfully
2022-11-05 18:13:09,376:INFO:Cross validation set to False
2022-11-05 18:13:09,376:INFO:Fitting Model
2022-11-05 18:13:09,560:INFO:Initializing predict_model()
2022-11-05 18:13:09,560:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1417d78b0>)
2022-11-05 18:13:09,560:INFO:Checking exceptions
2022-11-05 18:13:09,560:INFO:Preloading libraries
2022-11-05 18:13:09,933:INFO:display_container: 2
2022-11-05 18:13:09,935:INFO:DummyRegressor()
2022-11-05 18:13:09,935:INFO:create_model() successfully completed......................................
2022-11-05 18:13:10,206:INFO:SubProcess create_model() end ==================================
2022-11-05 18:13:10,206:INFO:Creating metrics dataframe
2022-11-05 18:13:10,238:INFO:Initializing create_model()
2022-11-05 18:13:10,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:13:10,238:INFO:Checking exceptions
2022-11-05 18:13:10,244:INFO:Importing libraries
2022-11-05 18:13:10,245:INFO:Copying training dataset
2022-11-05 18:13:10,250:INFO:Defining folds
2022-11-05 18:13:10,250:INFO:Declaring metric variables
2022-11-05 18:13:10,250:INFO:Importing untrained model
2022-11-05 18:13:10,250:INFO:Declaring custom model
2022-11-05 18:13:10,251:INFO:Linear Regression Imported successfully
2022-11-05 18:13:10,252:INFO:Cross validation set to False
2022-11-05 18:13:10,252:INFO:Fitting Model
2022-11-05 18:13:10,418:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:13:10,418:INFO:create_model() successfully completed......................................
2022-11-05 18:13:10,743:INFO:master_model_container: 0
2022-11-05 18:13:10,743:INFO:display_container: 2
2022-11-05 18:13:10,744:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:13:10,744:INFO:compare_models() successfully completed......................................
2022-11-05 18:13:42,719:INFO:Initializing create_model()
2022-11-05 18:13:42,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=huber, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-05 18:13:42,720:INFO:Checking exceptions
2022-11-05 18:13:42,767:INFO:Importing libraries
2022-11-05 18:13:42,767:INFO:Copying training dataset
2022-11-05 18:13:42,775:INFO:Defining folds
2022-11-05 18:13:42,775:INFO:Declaring metric variables
2022-11-05 18:13:42,780:INFO:Importing untrained model
2022-11-05 18:13:42,786:INFO:Huber Regressor Imported successfully
2022-11-05 18:13:42,798:INFO:Starting cross validation
2022-11-05 18:13:42,801:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 18:13:50,454:INFO:Calculating mean and std
2022-11-05 18:13:50,457:INFO:Creating metrics dataframe
2022-11-05 18:13:50,466:INFO:Finalizing model
2022-11-05 18:13:50,855:INFO:Initializing predict_model()
2022-11-05 18:13:50,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['salesDuringCommercialActivities'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              str...='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1417d7670>)
2022-11-05 18:13:50,855:INFO:Checking exceptions
2022-11-05 18:13:50,855:INFO:Preloading libraries
2022-11-05 18:13:50,855:INFO:Set up data.
2022-11-05 18:13:50,862:INFO:Set up index.
2022-11-05 18:13:51,768:INFO:Uploading results into container
2022-11-05 18:13:51,769:INFO:Uploading model into container now
2022-11-05 18:13:51,792:INFO:master_model_container: 1
2022-11-05 18:13:51,792:INFO:display_container: 3
2022-11-05 18:13:51,793:INFO:HuberRegressor()
2022-11-05 18:13:51,793:INFO:create_model() successfully completed......................................
2022-11-05 18:13:52,216:INFO:Initializing plot_model()
2022-11-05 18:13:52,216:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, system=True)
2022-11-05 18:13:52,216:INFO:Checking exceptions
2022-11-05 18:13:52,222:INFO:Preloading libraries
2022-11-05 18:13:52,223:INFO:Copying training dataset
2022-11-05 18:13:52,223:INFO:Plot type: residuals
2022-11-05 18:13:52,896:INFO:Fitting Model
2022-11-05 18:13:52,960:INFO:Scoring test/hold-out set
2022-11-05 18:13:53,968:INFO:Visual Rendered Successfully
2022-11-05 18:13:54,294:INFO:plot_model() successfully completed......................................
2022-11-05 18:13:54,337:INFO:Initializing plot_model()
2022-11-05 18:13:54,337:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, system=True)
2022-11-05 18:13:54,337:INFO:Checking exceptions
2022-11-05 18:13:54,344:INFO:Preloading libraries
2022-11-05 18:13:54,344:INFO:Copying training dataset
2022-11-05 18:13:54,344:INFO:Plot type: error
2022-11-05 18:13:54,751:INFO:Fitting Model
2022-11-05 18:13:54,751:INFO:Scoring test/hold-out set
2022-11-05 18:13:55,238:INFO:Visual Rendered Successfully
2022-11-05 18:13:55,527:INFO:plot_model() successfully completed......................................
2022-11-05 18:13:55,658:INFO:Initializing plot_model()
2022-11-05 18:13:55,658:INFO:plot_model(plot=rfe, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, system=True)
2022-11-05 18:13:55,658:INFO:Checking exceptions
2022-11-05 18:13:55,676:INFO:Preloading libraries
2022-11-05 18:13:55,677:INFO:Copying training dataset
2022-11-05 18:13:55,677:INFO:Plot type: rfe
2022-11-05 18:13:56,090:INFO:Fitting Model
2022-11-05 18:14:11,799:INFO:Visual Rendered Successfully
2022-11-05 18:14:12,073:INFO:plot_model() successfully completed......................................
2022-11-05 18:14:12,203:INFO:Initializing plot_model()
2022-11-05 18:14:12,204:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141d89e50>, system=True)
2022-11-05 18:14:12,204:INFO:Checking exceptions
2022-11-05 18:14:12,212:INFO:Preloading libraries
2022-11-05 18:14:12,212:INFO:Copying training dataset
2022-11-05 18:14:12,212:INFO:Plot type: feature
2022-11-05 18:14:12,791:INFO:Visual Rendered Successfully
2022-11-05 18:14:13,077:INFO:plot_model() successfully completed......................................
2022-11-05 18:15:11,357:INFO:PyCaret RegressionExperiment
2022-11-05 18:15:11,357:INFO:Logging name: reg-default-name
2022-11-05 18:15:11,357:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:15:11,357:INFO:version 3.0.0.rc4
2022-11-05 18:15:11,357:INFO:Initializing setup()
2022-11-05 18:15:11,357:INFO:self.USI: f57a
2022-11-05 18:15:11,357:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:15:11,357:INFO:Checking environment
2022-11-05 18:15:11,357:INFO:python_version: 3.9.6
2022-11-05 18:15:11,358:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:15:11,358:INFO:machine: x86_64
2022-11-05 18:15:11,358:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:15:11,358:INFO:Memory: svmem(total=17179869184, available=6607749120, percent=61.5, used=8946278400, free=104931328, active=6504513536, inactive=6429069312, wired=2441764864)
2022-11-05 18:15:11,358:INFO:Physical Core: 4
2022-11-05 18:15:11,358:INFO:Logical Core: 4
2022-11-05 18:15:11,359:INFO:Checking libraries
2022-11-05 18:15:11,359:INFO:System:
2022-11-05 18:15:11,359:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:15:11,359:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:15:11,359:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:15:11,359:INFO:PyCaret required dependencies:
2022-11-05 18:15:11,359:INFO:                 pip: 21.2.4
2022-11-05 18:15:11,359:INFO:          setuptools: 58.0.4
2022-11-05 18:15:11,359:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:15:11,359:INFO:             IPython: 8.6.0
2022-11-05 18:15:11,359:INFO:          ipywidgets: 8.0.2
2022-11-05 18:15:11,359:INFO:                tqdm: 4.64.1
2022-11-05 18:15:11,359:INFO:               numpy: 1.22.4
2022-11-05 18:15:11,359:INFO:              pandas: 1.4.4
2022-11-05 18:15:11,359:INFO:              jinja2: 3.1.2
2022-11-05 18:15:11,360:INFO:               scipy: 1.8.1
2022-11-05 18:15:11,360:INFO:              joblib: 1.2.0
2022-11-05 18:15:11,360:INFO:             sklearn: 1.1.3
2022-11-05 18:15:11,360:INFO:                pyod: 1.0.6
2022-11-05 18:15:11,360:INFO:            imblearn: 0.9.1
2022-11-05 18:15:11,360:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:15:11,360:INFO:            lightgbm: 3.3.3
2022-11-05 18:15:11,360:INFO:               numba: 0.55.2
2022-11-05 18:15:11,360:INFO:            requests: 2.28.1
2022-11-05 18:15:11,360:INFO:          matplotlib: 3.6.2
2022-11-05 18:15:11,360:INFO:          scikitplot: 0.3.7
2022-11-05 18:15:11,360:INFO:         yellowbrick: 1.5
2022-11-05 18:15:11,360:INFO:              plotly: 5.11.0
2022-11-05 18:15:11,360:INFO:             kaleido: 0.2.1
2022-11-05 18:15:11,360:INFO:         statsmodels: 0.13.5
2022-11-05 18:15:11,360:INFO:              sktime: 0.13.4
2022-11-05 18:15:11,360:INFO:               tbats: 1.1.1
2022-11-05 18:15:11,360:INFO:            pmdarima: 1.8.5
2022-11-05 18:15:11,361:INFO:              psutil: 5.9.3
2022-11-05 18:15:11,361:INFO:PyCaret optional dependencies:
2022-11-05 18:15:11,361:INFO:                shap: Not installed
2022-11-05 18:15:11,361:INFO:           interpret: Not installed
2022-11-05 18:15:11,361:INFO:                umap: Not installed
2022-11-05 18:15:11,361:INFO:    pandas_profiling: Not installed
2022-11-05 18:15:11,361:INFO:  explainerdashboard: Not installed
2022-11-05 18:15:11,361:INFO:             autoviz: Not installed
2022-11-05 18:15:11,361:INFO:           fairlearn: Not installed
2022-11-05 18:15:11,362:INFO:             xgboost: Not installed
2022-11-05 18:15:11,362:INFO:            catboost: Not installed
2022-11-05 18:15:11,363:INFO:              kmodes: Not installed
2022-11-05 18:15:11,363:INFO:             mlxtend: Not installed
2022-11-05 18:15:11,363:INFO:       statsforecast: Not installed
2022-11-05 18:15:11,363:INFO:        tune_sklearn: Not installed
2022-11-05 18:15:11,363:INFO:                 ray: Not installed
2022-11-05 18:15:11,363:INFO:            hyperopt: Not installed
2022-11-05 18:15:11,363:INFO:              optuna: Not installed
2022-11-05 18:15:11,363:INFO:               skopt: Not installed
2022-11-05 18:15:11,363:INFO:              mlflow: Not installed
2022-11-05 18:15:11,363:INFO:              gradio: Not installed
2022-11-05 18:15:11,364:INFO:             fastapi: Not installed
2022-11-05 18:15:11,364:INFO:             uvicorn: Not installed
2022-11-05 18:15:11,364:INFO:              m2cgen: Not installed
2022-11-05 18:15:11,364:INFO:           evidently: Not installed
2022-11-05 18:15:11,364:INFO:                nltk: Not installed
2022-11-05 18:15:11,364:INFO:            pyLDAvis: Not installed
2022-11-05 18:15:11,364:INFO:              gensim: Not installed
2022-11-05 18:15:11,364:INFO:               spacy: 3.4.2
2022-11-05 18:15:11,365:INFO:           wordcloud: Not installed
2022-11-05 18:15:11,365:INFO:            textblob: Not installed
2022-11-05 18:15:11,365:INFO:               fugue: Not installed
2022-11-05 18:15:11,365:INFO:           streamlit: Not installed
2022-11-05 18:15:11,365:INFO:             prophet: Not installed
2022-11-05 18:15:11,365:INFO:None
2022-11-05 18:15:11,365:INFO:Set up data.
2022-11-05 18:15:11,383:INFO:Set up train/test split.
2022-11-05 18:15:11,390:INFO:Set up index.
2022-11-05 18:15:11,390:INFO:Set up folding strategy.
2022-11-05 18:15:11,390:INFO:Assigning column types.
2022-11-05 18:15:11,394:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:15:11,395:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,402:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,410:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,506:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:11,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:11,583:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,591:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,599:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,699:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:11,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:11,775:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:15:11,783:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,791:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,888:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,962:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:11,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:11,971:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:15:11,979:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,155:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:15:12,171:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,294:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,388:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,571:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:15:12,711:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,784:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,785:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,978:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:15:12,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:12,980:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:15:13,090:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:13,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,275:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:15:13,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,351:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:15:13,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:13,737:INFO:Preparing preprocessing pipeline...
2022-11-05 18:15:13,739:INFO:Set up simple imputation.
2022-11-05 18:15:13,743:INFO:Set up encoding of categorical features.
2022-11-05 18:15:13,743:INFO:Set up variance threshold.
2022-11-05 18:15:14,263:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:15:14,274:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'day_name',
                                             'day_of_month'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'day_name',
                                                                         'day_of_month'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:15:14,274:INFO:Creating final display dataframe.
2022-11-05 18:15:16,000:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 4)
4           Train data shape        (10124, 4)
5            Test data shape         (4340, 4)
6       Categorical features                 3
7                 Preprocess              True
8            Imputation type            simple
9         Numeric imputation              mean
10    Categorical imputation          constant
11  Maximum one-hot encoding                 5
12           Encoding method              None
13    Low variance threshold                 0
14            Fold Generator             KFold
15               Fold Number                10
16                  CPU Jobs                -1
17                   Use GPU             False
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              f57a
2022-11-05 18:15:16,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:16,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:16,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:16,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:15:16,395:INFO:setup() successfully completed in 5.04s...............
2022-11-05 18:16:32,296:INFO:PyCaret RegressionExperiment
2022-11-05 18:16:32,297:INFO:Logging name: reg-default-name
2022-11-05 18:16:32,297:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:16:32,297:INFO:version 3.0.0.rc4
2022-11-05 18:16:32,297:INFO:Initializing setup()
2022-11-05 18:16:32,297:INFO:self.USI: 7b6f
2022-11-05 18:16:32,297:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:16:32,297:INFO:Checking environment
2022-11-05 18:16:32,297:INFO:python_version: 3.9.6
2022-11-05 18:16:32,297:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:16:32,298:INFO:machine: x86_64
2022-11-05 18:16:32,298:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:16:32,298:INFO:Memory: svmem(total=17179869184, available=6628048896, percent=61.4, used=8925667328, free=116113408, active=6513315840, inactive=6426308608, wired=2412351488)
2022-11-05 18:16:32,298:INFO:Physical Core: 4
2022-11-05 18:16:32,298:INFO:Logical Core: 4
2022-11-05 18:16:32,298:INFO:Checking libraries
2022-11-05 18:16:32,298:INFO:System:
2022-11-05 18:16:32,299:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:16:32,299:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:16:32,299:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:16:32,299:INFO:PyCaret required dependencies:
2022-11-05 18:16:32,299:INFO:                 pip: 21.2.4
2022-11-05 18:16:32,299:INFO:          setuptools: 58.0.4
2022-11-05 18:16:32,299:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:16:32,299:INFO:             IPython: 8.6.0
2022-11-05 18:16:32,299:INFO:          ipywidgets: 8.0.2
2022-11-05 18:16:32,299:INFO:                tqdm: 4.64.1
2022-11-05 18:16:32,299:INFO:               numpy: 1.22.4
2022-11-05 18:16:32,300:INFO:              pandas: 1.4.4
2022-11-05 18:16:32,300:INFO:              jinja2: 3.1.2
2022-11-05 18:16:32,300:INFO:               scipy: 1.8.1
2022-11-05 18:16:32,300:INFO:              joblib: 1.2.0
2022-11-05 18:16:32,300:INFO:             sklearn: 1.1.3
2022-11-05 18:16:32,300:INFO:                pyod: 1.0.6
2022-11-05 18:16:32,300:INFO:            imblearn: 0.9.1
2022-11-05 18:16:32,300:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:16:32,300:INFO:            lightgbm: 3.3.3
2022-11-05 18:16:32,300:INFO:               numba: 0.55.2
2022-11-05 18:16:32,300:INFO:            requests: 2.28.1
2022-11-05 18:16:32,300:INFO:          matplotlib: 3.6.2
2022-11-05 18:16:32,300:INFO:          scikitplot: 0.3.7
2022-11-05 18:16:32,300:INFO:         yellowbrick: 1.5
2022-11-05 18:16:32,300:INFO:              plotly: 5.11.0
2022-11-05 18:16:32,300:INFO:             kaleido: 0.2.1
2022-11-05 18:16:32,300:INFO:         statsmodels: 0.13.5
2022-11-05 18:16:32,301:INFO:              sktime: 0.13.4
2022-11-05 18:16:32,301:INFO:               tbats: 1.1.1
2022-11-05 18:16:32,301:INFO:            pmdarima: 1.8.5
2022-11-05 18:16:32,301:INFO:              psutil: 5.9.3
2022-11-05 18:16:32,301:INFO:PyCaret optional dependencies:
2022-11-05 18:16:32,301:INFO:                shap: Not installed
2022-11-05 18:16:32,301:INFO:           interpret: Not installed
2022-11-05 18:16:32,301:INFO:                umap: Not installed
2022-11-05 18:16:32,301:INFO:    pandas_profiling: Not installed
2022-11-05 18:16:32,301:INFO:  explainerdashboard: Not installed
2022-11-05 18:16:32,301:INFO:             autoviz: Not installed
2022-11-05 18:16:32,301:INFO:           fairlearn: Not installed
2022-11-05 18:16:32,301:INFO:             xgboost: Not installed
2022-11-05 18:16:32,301:INFO:            catboost: Not installed
2022-11-05 18:16:32,302:INFO:              kmodes: Not installed
2022-11-05 18:16:32,302:INFO:             mlxtend: Not installed
2022-11-05 18:16:32,302:INFO:       statsforecast: Not installed
2022-11-05 18:16:32,302:INFO:        tune_sklearn: Not installed
2022-11-05 18:16:32,302:INFO:                 ray: Not installed
2022-11-05 18:16:32,302:INFO:            hyperopt: Not installed
2022-11-05 18:16:32,302:INFO:              optuna: Not installed
2022-11-05 18:16:32,302:INFO:               skopt: Not installed
2022-11-05 18:16:32,302:INFO:              mlflow: Not installed
2022-11-05 18:16:32,302:INFO:              gradio: Not installed
2022-11-05 18:16:32,302:INFO:             fastapi: Not installed
2022-11-05 18:16:32,302:INFO:             uvicorn: Not installed
2022-11-05 18:16:32,303:INFO:              m2cgen: Not installed
2022-11-05 18:16:32,303:INFO:           evidently: Not installed
2022-11-05 18:16:32,303:INFO:                nltk: Not installed
2022-11-05 18:16:32,303:INFO:            pyLDAvis: Not installed
2022-11-05 18:16:32,303:INFO:              gensim: Not installed
2022-11-05 18:16:32,304:INFO:               spacy: 3.4.2
2022-11-05 18:16:32,304:INFO:           wordcloud: Not installed
2022-11-05 18:16:32,304:INFO:            textblob: Not installed
2022-11-05 18:16:32,304:INFO:               fugue: Not installed
2022-11-05 18:16:32,304:INFO:           streamlit: Not installed
2022-11-05 18:16:32,304:INFO:             prophet: Not installed
2022-11-05 18:16:32,304:INFO:None
2022-11-05 18:16:32,304:INFO:Set up data.
2022-11-05 18:16:32,321:INFO:Set up train/test split.
2022-11-05 18:16:32,332:INFO:Set up index.
2022-11-05 18:16:32,333:INFO:Set up folding strategy.
2022-11-05 18:16:32,333:INFO:Assigning column types.
2022-11-05 18:16:32,340:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:16:32,340:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,348:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,356:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:32,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:32,525:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,533:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,541:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:32,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:32,710:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:16:32,717:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,725:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,824:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:32,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:32,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:16:32,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,013:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,090:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:16:33,104:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,200:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,390:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,465:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:16:33,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:16:33,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:33,836:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:16:33,948:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:34,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:16:34,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,214:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:16:34,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:34,586:INFO:Preparing preprocessing pipeline...
2022-11-05 18:16:34,587:INFO:Set up date feature engineering.
2022-11-05 18:16:34,587:INFO:Set up simple imputation.
2022-11-05 18:16:34,593:INFO:Set up encoding of categorical features.
2022-11-05 18:16:34,593:INFO:Set up variance threshold.
2022-11-05 18:16:35,306:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:16:35,318:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:16:35,318:INFO:Creating final display dataframe.
2022-11-05 18:16:37,737:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 8)
4           Train data shape        (10124, 8)
5            Test data shape         (4340, 8)
6           Numeric features                 1
7              Date features                 1
8       Categorical features                 4
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              7b6f
2022-11-05 18:16:37,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:37,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:38,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:38,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:16:38,140:INFO:setup() successfully completed in 5.85s...............
2022-11-05 18:16:40,793:INFO:Initializing compare_models()
2022-11-05 18:16:40,793:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:16:40,794:INFO:Checking exceptions
2022-11-05 18:16:40,799:INFO:Preparing display monitor
2022-11-05 18:16:40,846:INFO:Initializing Linear Regression
2022-11-05 18:16:40,847:INFO:Total runtime is 6.337960561116536e-06 minutes
2022-11-05 18:16:40,852:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:40,852:INFO:Initializing create_model()
2022-11-05 18:16:40,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:40,852:INFO:Checking exceptions
2022-11-05 18:16:40,860:INFO:Importing libraries
2022-11-05 18:16:40,860:INFO:Copying training dataset
2022-11-05 18:16:40,866:INFO:Defining folds
2022-11-05 18:16:40,867:INFO:Declaring metric variables
2022-11-05 18:16:40,871:INFO:Importing untrained model
2022-11-05 18:16:40,880:INFO:Linear Regression Imported successfully
2022-11-05 18:16:40,891:INFO:Cross validation set to False
2022-11-05 18:16:40,891:INFO:Fitting Model
2022-11-05 18:16:41,583:INFO:Initializing predict_model()
2022-11-05 18:16:41,583:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1288210d0>)
2022-11-05 18:16:41,583:INFO:Checking exceptions
2022-11-05 18:16:41,583:INFO:Preloading libraries
2022-11-05 18:16:42,054:INFO:display_container: 2
2022-11-05 18:16:42,057:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:16:42,057:INFO:create_model() successfully completed......................................
2022-11-05 18:16:42,362:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:42,362:INFO:Creating metrics dataframe
2022-11-05 18:16:42,375:INFO:Initializing Lasso Regression
2022-11-05 18:16:42,376:INFO:Total runtime is 0.02548948526382446 minutes
2022-11-05 18:16:42,381:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:42,382:INFO:Initializing create_model()
2022-11-05 18:16:42,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:42,383:INFO:Checking exceptions
2022-11-05 18:16:42,386:INFO:Importing libraries
2022-11-05 18:16:42,386:INFO:Copying training dataset
2022-11-05 18:16:42,394:INFO:Defining folds
2022-11-05 18:16:42,394:INFO:Declaring metric variables
2022-11-05 18:16:42,400:INFO:Importing untrained model
2022-11-05 18:16:42,406:INFO:Lasso Regression Imported successfully
2022-11-05 18:16:42,417:INFO:Cross validation set to False
2022-11-05 18:16:42,417:INFO:Fitting Model
2022-11-05 18:16:42,641:INFO:Initializing predict_model()
2022-11-05 18:16:42,641:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2f70>)
2022-11-05 18:16:42,642:INFO:Checking exceptions
2022-11-05 18:16:42,642:INFO:Preloading libraries
2022-11-05 18:16:43,091:INFO:display_container: 2
2022-11-05 18:16:43,093:INFO:Lasso(random_state=23)
2022-11-05 18:16:43,093:INFO:create_model() successfully completed......................................
2022-11-05 18:16:43,366:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:43,366:INFO:Creating metrics dataframe
2022-11-05 18:16:43,379:INFO:Initializing Ridge Regression
2022-11-05 18:16:43,379:INFO:Total runtime is 0.042217739423116046 minutes
2022-11-05 18:16:43,385:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:43,385:INFO:Initializing create_model()
2022-11-05 18:16:43,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:43,386:INFO:Checking exceptions
2022-11-05 18:16:43,390:INFO:Importing libraries
2022-11-05 18:16:43,390:INFO:Copying training dataset
2022-11-05 18:16:43,398:INFO:Defining folds
2022-11-05 18:16:43,398:INFO:Declaring metric variables
2022-11-05 18:16:43,403:INFO:Importing untrained model
2022-11-05 18:16:43,409:INFO:Ridge Regression Imported successfully
2022-11-05 18:16:43,421:INFO:Cross validation set to False
2022-11-05 18:16:43,421:INFO:Fitting Model
2022-11-05 18:16:43,652:INFO:Initializing predict_model()
2022-11-05 18:16:43,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd29d0>)
2022-11-05 18:16:43,652:INFO:Checking exceptions
2022-11-05 18:16:43,653:INFO:Preloading libraries
2022-11-05 18:16:44,054:INFO:display_container: 2
2022-11-05 18:16:44,056:INFO:Ridge(random_state=23)
2022-11-05 18:16:44,057:INFO:create_model() successfully completed......................................
2022-11-05 18:16:44,331:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:44,331:INFO:Creating metrics dataframe
2022-11-05 18:16:44,346:INFO:Initializing Elastic Net
2022-11-05 18:16:44,347:INFO:Total runtime is 0.05834715366363526 minutes
2022-11-05 18:16:44,354:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:44,354:INFO:Initializing create_model()
2022-11-05 18:16:44,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:44,355:INFO:Checking exceptions
2022-11-05 18:16:44,359:INFO:Importing libraries
2022-11-05 18:16:44,359:INFO:Copying training dataset
2022-11-05 18:16:44,370:INFO:Defining folds
2022-11-05 18:16:44,371:INFO:Declaring metric variables
2022-11-05 18:16:44,378:INFO:Importing untrained model
2022-11-05 18:16:44,386:INFO:Elastic Net Imported successfully
2022-11-05 18:16:44,396:INFO:Cross validation set to False
2022-11-05 18:16:44,396:INFO:Fitting Model
2022-11-05 18:16:44,619:INFO:Initializing predict_model()
2022-11-05 18:16:44,619:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2b80>)
2022-11-05 18:16:44,620:INFO:Checking exceptions
2022-11-05 18:16:44,620:INFO:Preloading libraries
2022-11-05 18:16:45,038:INFO:display_container: 2
2022-11-05 18:16:45,040:INFO:ElasticNet(random_state=23)
2022-11-05 18:16:45,040:INFO:create_model() successfully completed......................................
2022-11-05 18:16:45,311:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:45,311:INFO:Creating metrics dataframe
2022-11-05 18:16:45,325:INFO:Initializing Least Angle Regression
2022-11-05 18:16:45,325:INFO:Total runtime is 0.07464826901753743 minutes
2022-11-05 18:16:45,330:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:45,331:INFO:Initializing create_model()
2022-11-05 18:16:45,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:45,331:INFO:Checking exceptions
2022-11-05 18:16:45,336:INFO:Importing libraries
2022-11-05 18:16:45,337:INFO:Copying training dataset
2022-11-05 18:16:45,345:INFO:Defining folds
2022-11-05 18:16:45,345:INFO:Declaring metric variables
2022-11-05 18:16:45,355:INFO:Importing untrained model
2022-11-05 18:16:45,363:INFO:Least Angle Regression Imported successfully
2022-11-05 18:16:45,372:INFO:Cross validation set to False
2022-11-05 18:16:45,372:INFO:Fitting Model
2022-11-05 18:16:45,601:INFO:Initializing predict_model()
2022-11-05 18:16:45,601:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2d30>)
2022-11-05 18:16:45,601:INFO:Checking exceptions
2022-11-05 18:16:45,601:INFO:Preloading libraries
2022-11-05 18:16:46,020:INFO:display_container: 2
2022-11-05 18:16:46,022:INFO:Lars(random_state=23)
2022-11-05 18:16:46,022:INFO:create_model() successfully completed......................................
2022-11-05 18:16:46,307:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:46,307:INFO:Creating metrics dataframe
2022-11-05 18:16:46,356:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:16:46,356:INFO:Total runtime is 0.09182947079340617 minutes
2022-11-05 18:16:46,382:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:46,383:INFO:Initializing create_model()
2022-11-05 18:16:46,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:46,384:INFO:Checking exceptions
2022-11-05 18:16:46,388:INFO:Importing libraries
2022-11-05 18:16:46,389:INFO:Copying training dataset
2022-11-05 18:16:46,415:INFO:Defining folds
2022-11-05 18:16:46,416:INFO:Declaring metric variables
2022-11-05 18:16:46,427:INFO:Importing untrained model
2022-11-05 18:16:46,433:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:16:46,440:INFO:Cross validation set to False
2022-11-05 18:16:46,440:INFO:Fitting Model
2022-11-05 18:16:46,684:INFO:Initializing predict_model()
2022-11-05 18:16:46,685:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2c10>)
2022-11-05 18:16:46,685:INFO:Checking exceptions
2022-11-05 18:16:46,685:INFO:Preloading libraries
2022-11-05 18:16:47,083:INFO:display_container: 2
2022-11-05 18:16:47,085:INFO:LassoLars(random_state=23)
2022-11-05 18:16:47,086:INFO:create_model() successfully completed......................................
2022-11-05 18:16:47,359:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:47,359:INFO:Creating metrics dataframe
2022-11-05 18:16:47,375:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:16:47,375:INFO:Total runtime is 0.1088101863861084 minutes
2022-11-05 18:16:47,380:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:47,382:INFO:Initializing create_model()
2022-11-05 18:16:47,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:47,382:INFO:Checking exceptions
2022-11-05 18:16:47,386:INFO:Importing libraries
2022-11-05 18:16:47,386:INFO:Copying training dataset
2022-11-05 18:16:47,394:INFO:Defining folds
2022-11-05 18:16:47,394:INFO:Declaring metric variables
2022-11-05 18:16:47,401:INFO:Importing untrained model
2022-11-05 18:16:47,415:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:16:47,424:INFO:Cross validation set to False
2022-11-05 18:16:47,425:INFO:Fitting Model
2022-11-05 18:16:47,673:INFO:Initializing predict_model()
2022-11-05 18:16:47,673:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd29d0>)
2022-11-05 18:16:47,674:INFO:Checking exceptions
2022-11-05 18:16:47,674:INFO:Preloading libraries
2022-11-05 18:16:48,098:INFO:display_container: 2
2022-11-05 18:16:48,100:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:16:48,100:INFO:create_model() successfully completed......................................
2022-11-05 18:16:48,374:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:48,374:INFO:Creating metrics dataframe
2022-11-05 18:16:48,389:INFO:Initializing Bayesian Ridge
2022-11-05 18:16:48,389:INFO:Total runtime is 0.1257074197133382 minutes
2022-11-05 18:16:48,394:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:48,394:INFO:Initializing create_model()
2022-11-05 18:16:48,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:48,395:INFO:Checking exceptions
2022-11-05 18:16:48,399:INFO:Importing libraries
2022-11-05 18:16:48,399:INFO:Copying training dataset
2022-11-05 18:16:48,406:INFO:Defining folds
2022-11-05 18:16:48,407:INFO:Declaring metric variables
2022-11-05 18:16:48,411:INFO:Importing untrained model
2022-11-05 18:16:48,417:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:16:48,424:INFO:Cross validation set to False
2022-11-05 18:16:48,425:INFO:Fitting Model
2022-11-05 18:16:48,658:INFO:Initializing predict_model()
2022-11-05 18:16:48,658:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2940>)
2022-11-05 18:16:48,658:INFO:Checking exceptions
2022-11-05 18:16:48,658:INFO:Preloading libraries
2022-11-05 18:16:49,085:INFO:display_container: 2
2022-11-05 18:16:49,088:INFO:BayesianRidge()
2022-11-05 18:16:49,088:INFO:create_model() successfully completed......................................
2022-11-05 18:16:49,364:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:49,364:INFO:Creating metrics dataframe
2022-11-05 18:16:49,381:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:16:49,381:INFO:Total runtime is 0.1422490358352661 minutes
2022-11-05 18:16:49,396:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:49,397:INFO:Initializing create_model()
2022-11-05 18:16:49,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:49,401:INFO:Checking exceptions
2022-11-05 18:16:49,406:INFO:Importing libraries
2022-11-05 18:16:49,406:INFO:Copying training dataset
2022-11-05 18:16:49,414:INFO:Defining folds
2022-11-05 18:16:49,414:INFO:Declaring metric variables
2022-11-05 18:16:49,423:INFO:Importing untrained model
2022-11-05 18:16:49,430:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:16:49,441:INFO:Cross validation set to False
2022-11-05 18:16:49,441:INFO:Fitting Model
2022-11-05 18:16:49,666:INFO:Initializing predict_model()
2022-11-05 18:16:49,666:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd29d0>)
2022-11-05 18:16:49,666:INFO:Checking exceptions
2022-11-05 18:16:49,666:INFO:Preloading libraries
2022-11-05 18:16:50,064:INFO:display_container: 2
2022-11-05 18:16:50,066:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:16:50,067:INFO:create_model() successfully completed......................................
2022-11-05 18:16:50,338:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:50,338:INFO:Creating metrics dataframe
2022-11-05 18:16:50,355:INFO:Initializing Huber Regressor
2022-11-05 18:16:50,355:INFO:Total runtime is 0.15848050117492674 minutes
2022-11-05 18:16:50,360:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:50,360:INFO:Initializing create_model()
2022-11-05 18:16:50,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:50,361:INFO:Checking exceptions
2022-11-05 18:16:50,365:INFO:Importing libraries
2022-11-05 18:16:50,365:INFO:Copying training dataset
2022-11-05 18:16:50,372:INFO:Defining folds
2022-11-05 18:16:50,372:INFO:Declaring metric variables
2022-11-05 18:16:50,377:INFO:Importing untrained model
2022-11-05 18:16:50,382:INFO:Huber Regressor Imported successfully
2022-11-05 18:16:50,388:INFO:Cross validation set to False
2022-11-05 18:16:50,389:INFO:Fitting Model
2022-11-05 18:16:50,671:INFO:Initializing predict_model()
2022-11-05 18:16:50,671:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141cfad30>)
2022-11-05 18:16:50,671:INFO:Checking exceptions
2022-11-05 18:16:50,672:INFO:Preloading libraries
2022-11-05 18:16:51,075:INFO:display_container: 2
2022-11-05 18:16:51,077:INFO:HuberRegressor()
2022-11-05 18:16:51,078:INFO:create_model() successfully completed......................................
2022-11-05 18:16:51,351:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:51,352:INFO:Creating metrics dataframe
2022-11-05 18:16:51,368:INFO:Initializing K Neighbors Regressor
2022-11-05 18:16:51,368:INFO:Total runtime is 0.17535993655522664 minutes
2022-11-05 18:16:51,372:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:51,373:INFO:Initializing create_model()
2022-11-05 18:16:51,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:51,373:INFO:Checking exceptions
2022-11-05 18:16:51,378:INFO:Importing libraries
2022-11-05 18:16:51,378:INFO:Copying training dataset
2022-11-05 18:16:51,385:INFO:Defining folds
2022-11-05 18:16:51,386:INFO:Declaring metric variables
2022-11-05 18:16:51,390:INFO:Importing untrained model
2022-11-05 18:16:51,395:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:16:51,401:INFO:Cross validation set to False
2022-11-05 18:16:51,402:INFO:Fitting Model
2022-11-05 18:16:51,628:INFO:Initializing predict_model()
2022-11-05 18:16:51,629:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141cfae50>)
2022-11-05 18:16:51,629:INFO:Checking exceptions
2022-11-05 18:16:51,629:INFO:Preloading libraries
2022-11-05 18:16:52,052:INFO:display_container: 2
2022-11-05 18:16:52,055:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:16:52,055:INFO:create_model() successfully completed......................................
2022-11-05 18:16:52,325:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:52,325:INFO:Creating metrics dataframe
2022-11-05 18:16:52,343:INFO:Initializing Decision Tree Regressor
2022-11-05 18:16:52,343:INFO:Total runtime is 0.1916100025177002 minutes
2022-11-05 18:16:52,348:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:52,348:INFO:Initializing create_model()
2022-11-05 18:16:52,349:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:52,349:INFO:Checking exceptions
2022-11-05 18:16:52,353:INFO:Importing libraries
2022-11-05 18:16:52,353:INFO:Copying training dataset
2022-11-05 18:16:52,361:INFO:Defining folds
2022-11-05 18:16:52,362:INFO:Declaring metric variables
2022-11-05 18:16:52,366:INFO:Importing untrained model
2022-11-05 18:16:52,371:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:16:52,378:INFO:Cross validation set to False
2022-11-05 18:16:52,378:INFO:Fitting Model
2022-11-05 18:16:52,656:INFO:Initializing predict_model()
2022-11-05 18:16:52,656:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd29d0>)
2022-11-05 18:16:52,656:INFO:Checking exceptions
2022-11-05 18:16:52,656:INFO:Preloading libraries
2022-11-05 18:16:53,062:INFO:display_container: 2
2022-11-05 18:16:53,064:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:16:53,064:INFO:create_model() successfully completed......................................
2022-11-05 18:16:53,334:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:53,334:INFO:Creating metrics dataframe
2022-11-05 18:16:53,351:INFO:Initializing Random Forest Regressor
2022-11-05 18:16:53,352:INFO:Total runtime is 0.20842116673787434 minutes
2022-11-05 18:16:53,356:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:53,357:INFO:Initializing create_model()
2022-11-05 18:16:53,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:53,357:INFO:Checking exceptions
2022-11-05 18:16:53,362:INFO:Importing libraries
2022-11-05 18:16:53,362:INFO:Copying training dataset
2022-11-05 18:16:53,369:INFO:Defining folds
2022-11-05 18:16:53,369:INFO:Declaring metric variables
2022-11-05 18:16:53,374:INFO:Importing untrained model
2022-11-05 18:16:53,380:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:16:53,386:INFO:Cross validation set to False
2022-11-05 18:16:53,386:INFO:Fitting Model
2022-11-05 18:16:54,983:INFO:Initializing predict_model()
2022-11-05 18:16:54,984:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141cfa940>)
2022-11-05 18:16:54,984:INFO:Checking exceptions
2022-11-05 18:16:54,984:INFO:Preloading libraries
2022-11-05 18:16:55,418:INFO:display_container: 2
2022-11-05 18:16:55,420:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:16:55,420:INFO:create_model() successfully completed......................................
2022-11-05 18:16:55,684:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:55,684:INFO:Creating metrics dataframe
2022-11-05 18:16:55,702:INFO:Initializing Extra Trees Regressor
2022-11-05 18:16:55,703:INFO:Total runtime is 0.2476048707962036 minutes
2022-11-05 18:16:55,707:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:55,708:INFO:Initializing create_model()
2022-11-05 18:16:55,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:55,708:INFO:Checking exceptions
2022-11-05 18:16:55,713:INFO:Importing libraries
2022-11-05 18:16:55,713:INFO:Copying training dataset
2022-11-05 18:16:55,721:INFO:Defining folds
2022-11-05 18:16:55,721:INFO:Declaring metric variables
2022-11-05 18:16:55,726:INFO:Importing untrained model
2022-11-05 18:16:55,732:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:16:55,738:INFO:Cross validation set to False
2022-11-05 18:16:55,739:INFO:Fitting Model
2022-11-05 18:16:56,553:INFO:Initializing predict_model()
2022-11-05 18:16:56,553:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2f70>)
2022-11-05 18:16:56,554:INFO:Checking exceptions
2022-11-05 18:16:56,554:INFO:Preloading libraries
2022-11-05 18:16:56,997:INFO:display_container: 2
2022-11-05 18:16:56,999:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:16:56,999:INFO:create_model() successfully completed......................................
2022-11-05 18:16:57,263:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:57,264:INFO:Creating metrics dataframe
2022-11-05 18:16:57,281:INFO:Initializing AdaBoost Regressor
2022-11-05 18:16:57,281:INFO:Total runtime is 0.27391417026519777 minutes
2022-11-05 18:16:57,287:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:57,287:INFO:Initializing create_model()
2022-11-05 18:16:57,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:57,288:INFO:Checking exceptions
2022-11-05 18:16:57,292:INFO:Importing libraries
2022-11-05 18:16:57,292:INFO:Copying training dataset
2022-11-05 18:16:57,301:INFO:Defining folds
2022-11-05 18:16:57,301:INFO:Declaring metric variables
2022-11-05 18:16:57,307:INFO:Importing untrained model
2022-11-05 18:16:57,313:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:16:57,318:INFO:Cross validation set to False
2022-11-05 18:16:57,319:INFO:Fitting Model
2022-11-05 18:16:58,039:INFO:Initializing predict_model()
2022-11-05 18:16:58,039:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14212be50>)
2022-11-05 18:16:58,039:INFO:Checking exceptions
2022-11-05 18:16:58,039:INFO:Preloading libraries
2022-11-05 18:16:58,470:INFO:display_container: 2
2022-11-05 18:16:58,472:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:16:58,472:INFO:create_model() successfully completed......................................
2022-11-05 18:16:58,751:INFO:SubProcess create_model() end ==================================
2022-11-05 18:16:58,751:INFO:Creating metrics dataframe
2022-11-05 18:16:58,770:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:16:58,770:INFO:Total runtime is 0.29872152010599773 minutes
2022-11-05 18:16:58,775:INFO:SubProcess create_model() called ==================================
2022-11-05 18:16:58,776:INFO:Initializing create_model()
2022-11-05 18:16:58,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:16:58,776:INFO:Checking exceptions
2022-11-05 18:16:58,781:INFO:Importing libraries
2022-11-05 18:16:58,781:INFO:Copying training dataset
2022-11-05 18:16:58,789:INFO:Defining folds
2022-11-05 18:16:58,790:INFO:Declaring metric variables
2022-11-05 18:16:58,794:INFO:Importing untrained model
2022-11-05 18:16:58,800:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:16:58,807:INFO:Cross validation set to False
2022-11-05 18:16:58,807:INFO:Fitting Model
2022-11-05 18:17:00,216:INFO:Initializing predict_model()
2022-11-05 18:17:00,217:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141cfac10>)
2022-11-05 18:17:00,217:INFO:Checking exceptions
2022-11-05 18:17:00,217:INFO:Preloading libraries
2022-11-05 18:17:00,626:INFO:display_container: 2
2022-11-05 18:17:00,628:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:17:00,629:INFO:create_model() successfully completed......................................
2022-11-05 18:17:00,944:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:00,944:INFO:Creating metrics dataframe
2022-11-05 18:17:00,970:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:17:00,971:INFO:Total runtime is 0.33540163437525433 minutes
2022-11-05 18:17:00,977:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:00,977:INFO:Initializing create_model()
2022-11-05 18:17:00,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:00,977:INFO:Checking exceptions
2022-11-05 18:17:00,981:INFO:Importing libraries
2022-11-05 18:17:00,982:INFO:Copying training dataset
2022-11-05 18:17:00,989:INFO:Defining folds
2022-11-05 18:17:00,990:INFO:Declaring metric variables
2022-11-05 18:17:00,994:INFO:Importing untrained model
2022-11-05 18:17:00,999:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:17:01,006:INFO:Cross validation set to False
2022-11-05 18:17:01,007:INFO:Fitting Model
2022-11-05 18:17:01,362:INFO:Initializing predict_model()
2022-11-05 18:17:01,362:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2c10>)
2022-11-05 18:17:01,362:INFO:Checking exceptions
2022-11-05 18:17:01,363:INFO:Preloading libraries
2022-11-05 18:17:01,833:INFO:display_container: 2
2022-11-05 18:17:01,835:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:17:01,835:INFO:create_model() successfully completed......................................
2022-11-05 18:17:02,108:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:02,108:INFO:Creating metrics dataframe
2022-11-05 18:17:02,128:INFO:Initializing Dummy Regressor
2022-11-05 18:17:02,128:INFO:Total runtime is 0.35469906727472944 minutes
2022-11-05 18:17:02,133:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:02,134:INFO:Initializing create_model()
2022-11-05 18:17:02,134:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x139504520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:02,134:INFO:Checking exceptions
2022-11-05 18:17:02,139:INFO:Importing libraries
2022-11-05 18:17:02,139:INFO:Copying training dataset
2022-11-05 18:17:02,147:INFO:Defining folds
2022-11-05 18:17:02,147:INFO:Declaring metric variables
2022-11-05 18:17:02,152:INFO:Importing untrained model
2022-11-05 18:17:02,157:INFO:Dummy Regressor Imported successfully
2022-11-05 18:17:02,163:INFO:Cross validation set to False
2022-11-05 18:17:02,163:INFO:Fitting Model
2022-11-05 18:17:02,386:INFO:Initializing predict_model()
2022-11-05 18:17:02,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('date_feature_extractor',
                 TransformerWrapper(include=['date'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroC...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141dd2b80>)
2022-11-05 18:17:02,386:INFO:Checking exceptions
2022-11-05 18:17:02,386:INFO:Preloading libraries
2022-11-05 18:17:02,798:INFO:display_container: 2
2022-11-05 18:17:02,800:INFO:DummyRegressor()
2022-11-05 18:17:02,800:INFO:create_model() successfully completed......................................
2022-11-05 18:17:03,074:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:03,074:INFO:Creating metrics dataframe
2022-11-05 18:17:03,106:INFO:Initializing create_model()
2022-11-05 18:17:03,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1443ad190>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:03,106:INFO:Checking exceptions
2022-11-05 18:17:03,114:INFO:Importing libraries
2022-11-05 18:17:03,114:INFO:Copying training dataset
2022-11-05 18:17:03,120:INFO:Defining folds
2022-11-05 18:17:03,121:INFO:Declaring metric variables
2022-11-05 18:17:03,121:INFO:Importing untrained model
2022-11-05 18:17:03,121:INFO:Declaring custom model
2022-11-05 18:17:03,122:INFO:Linear Regression Imported successfully
2022-11-05 18:17:03,123:INFO:Cross validation set to False
2022-11-05 18:17:03,123:INFO:Fitting Model
2022-11-05 18:17:03,334:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:17:03,334:INFO:create_model() successfully completed......................................
2022-11-05 18:17:03,653:INFO:master_model_container: 0
2022-11-05 18:17:03,654:INFO:display_container: 2
2022-11-05 18:17:03,654:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:17:03,654:INFO:compare_models() successfully completed......................................
2022-11-05 18:17:20,733:INFO:PyCaret RegressionExperiment
2022-11-05 18:17:20,733:INFO:Logging name: reg-default-name
2022-11-05 18:17:20,733:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:17:20,733:INFO:version 3.0.0.rc4
2022-11-05 18:17:20,733:INFO:Initializing setup()
2022-11-05 18:17:20,733:INFO:self.USI: 3b67
2022-11-05 18:17:20,734:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:17:20,734:INFO:Checking environment
2022-11-05 18:17:20,734:INFO:python_version: 3.9.6
2022-11-05 18:17:20,734:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:17:20,734:INFO:machine: x86_64
2022-11-05 18:17:20,734:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:17:20,734:INFO:Memory: svmem(total=17179869184, available=6554996736, percent=61.8, used=9000075264, free=45371392, active=6510936064, inactive=6430130176, wired=2489139200)
2022-11-05 18:17:20,734:INFO:Physical Core: 4
2022-11-05 18:17:20,734:INFO:Logical Core: 4
2022-11-05 18:17:20,734:INFO:Checking libraries
2022-11-05 18:17:20,734:INFO:System:
2022-11-05 18:17:20,734:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:17:20,734:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:17:20,734:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:17:20,735:INFO:PyCaret required dependencies:
2022-11-05 18:17:20,735:INFO:                 pip: 21.2.4
2022-11-05 18:17:20,735:INFO:          setuptools: 58.0.4
2022-11-05 18:17:20,735:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:17:20,735:INFO:             IPython: 8.6.0
2022-11-05 18:17:20,735:INFO:          ipywidgets: 8.0.2
2022-11-05 18:17:20,735:INFO:                tqdm: 4.64.1
2022-11-05 18:17:20,735:INFO:               numpy: 1.22.4
2022-11-05 18:17:20,735:INFO:              pandas: 1.4.4
2022-11-05 18:17:20,735:INFO:              jinja2: 3.1.2
2022-11-05 18:17:20,735:INFO:               scipy: 1.8.1
2022-11-05 18:17:20,735:INFO:              joblib: 1.2.0
2022-11-05 18:17:20,735:INFO:             sklearn: 1.1.3
2022-11-05 18:17:20,735:INFO:                pyod: 1.0.6
2022-11-05 18:17:20,735:INFO:            imblearn: 0.9.1
2022-11-05 18:17:20,736:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:17:20,736:INFO:            lightgbm: 3.3.3
2022-11-05 18:17:20,736:INFO:               numba: 0.55.2
2022-11-05 18:17:20,736:INFO:            requests: 2.28.1
2022-11-05 18:17:20,736:INFO:          matplotlib: 3.6.2
2022-11-05 18:17:20,736:INFO:          scikitplot: 0.3.7
2022-11-05 18:17:20,736:INFO:         yellowbrick: 1.5
2022-11-05 18:17:20,736:INFO:              plotly: 5.11.0
2022-11-05 18:17:20,736:INFO:             kaleido: 0.2.1
2022-11-05 18:17:20,736:INFO:         statsmodels: 0.13.5
2022-11-05 18:17:20,736:INFO:              sktime: 0.13.4
2022-11-05 18:17:20,736:INFO:               tbats: 1.1.1
2022-11-05 18:17:20,736:INFO:            pmdarima: 1.8.5
2022-11-05 18:17:20,736:INFO:              psutil: 5.9.3
2022-11-05 18:17:20,737:INFO:PyCaret optional dependencies:
2022-11-05 18:17:20,737:INFO:                shap: Not installed
2022-11-05 18:17:20,737:INFO:           interpret: Not installed
2022-11-05 18:17:20,737:INFO:                umap: Not installed
2022-11-05 18:17:20,737:INFO:    pandas_profiling: Not installed
2022-11-05 18:17:20,737:INFO:  explainerdashboard: Not installed
2022-11-05 18:17:20,737:INFO:             autoviz: Not installed
2022-11-05 18:17:20,737:INFO:           fairlearn: Not installed
2022-11-05 18:17:20,737:INFO:             xgboost: Not installed
2022-11-05 18:17:20,737:INFO:            catboost: Not installed
2022-11-05 18:17:20,737:INFO:              kmodes: Not installed
2022-11-05 18:17:20,737:INFO:             mlxtend: Not installed
2022-11-05 18:17:20,737:INFO:       statsforecast: Not installed
2022-11-05 18:17:20,737:INFO:        tune_sklearn: Not installed
2022-11-05 18:17:20,737:INFO:                 ray: Not installed
2022-11-05 18:17:20,738:INFO:            hyperopt: Not installed
2022-11-05 18:17:20,738:INFO:              optuna: Not installed
2022-11-05 18:17:20,738:INFO:               skopt: Not installed
2022-11-05 18:17:20,738:INFO:              mlflow: Not installed
2022-11-05 18:17:20,738:INFO:              gradio: Not installed
2022-11-05 18:17:20,738:INFO:             fastapi: Not installed
2022-11-05 18:17:20,738:INFO:             uvicorn: Not installed
2022-11-05 18:17:20,738:INFO:              m2cgen: Not installed
2022-11-05 18:17:20,738:INFO:           evidently: Not installed
2022-11-05 18:17:20,738:INFO:                nltk: Not installed
2022-11-05 18:17:20,739:INFO:            pyLDAvis: Not installed
2022-11-05 18:17:20,739:INFO:              gensim: Not installed
2022-11-05 18:17:20,739:INFO:               spacy: 3.4.2
2022-11-05 18:17:20,739:INFO:           wordcloud: Not installed
2022-11-05 18:17:20,739:INFO:            textblob: Not installed
2022-11-05 18:17:20,739:INFO:               fugue: Not installed
2022-11-05 18:17:20,739:INFO:           streamlit: Not installed
2022-11-05 18:17:20,739:INFO:             prophet: Not installed
2022-11-05 18:17:20,739:INFO:None
2022-11-05 18:17:20,739:INFO:Set up data.
2022-11-05 18:17:20,754:INFO:Set up train/test split.
2022-11-05 18:17:20,764:INFO:Set up index.
2022-11-05 18:17:20,764:INFO:Set up folding strategy.
2022-11-05 18:17:20,764:INFO:Assigning column types.
2022-11-05 18:17:20,770:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:17:20,770:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,778:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,787:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,884:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:20,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:20,967:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,974:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:17:20,983:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,166:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,167:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:17:21,176:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,183:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,286:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,369:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,377:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,477:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,554:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:17:21,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,675:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:21,804:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:17:21,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,008:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,009:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:17:22,127:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,355:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,430:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,431:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,431:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:17:22,546:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:17:22,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,805:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:17:22,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:22,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:23,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:23,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:23,174:INFO:Preparing preprocessing pipeline...
2022-11-05 18:17:23,175:INFO:Set up simple imputation.
2022-11-05 18:17:23,180:INFO:Set up encoding of categorical features.
2022-11-05 18:17:23,180:INFO:Set up variance threshold.
2022-11-05 18:17:23,831:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:17:23,841:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:17:23,841:INFO:Creating final display dataframe.
2022-11-05 18:17:26,058:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 6)
4           Train data shape        (10124, 6)
5            Test data shape         (4340, 6)
6           Numeric features                 1
7       Categorical features                 4
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              3b67
2022-11-05 18:17:26,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:26,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:26,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:26,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:17:26,456:INFO:setup() successfully completed in 5.73s...............
2022-11-05 18:17:26,645:INFO:Initializing compare_models()
2022-11-05 18:17:26,647:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:17:26,647:INFO:Checking exceptions
2022-11-05 18:17:26,651:INFO:Preparing display monitor
2022-11-05 18:17:26,706:INFO:Initializing Linear Regression
2022-11-05 18:17:26,706:INFO:Total runtime is 4.100799560546875e-06 minutes
2022-11-05 18:17:26,712:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:26,712:INFO:Initializing create_model()
2022-11-05 18:17:26,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:26,713:INFO:Checking exceptions
2022-11-05 18:17:26,719:INFO:Importing libraries
2022-11-05 18:17:26,719:INFO:Copying training dataset
2022-11-05 18:17:26,725:INFO:Defining folds
2022-11-05 18:17:26,725:INFO:Declaring metric variables
2022-11-05 18:17:26,734:INFO:Importing untrained model
2022-11-05 18:17:26,739:INFO:Linear Regression Imported successfully
2022-11-05 18:17:26,749:INFO:Cross validation set to False
2022-11-05 18:17:26,749:INFO:Fitting Model
2022-11-05 18:17:27,519:INFO:Initializing predict_model()
2022-11-05 18:17:27,519:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211dc0>)
2022-11-05 18:17:27,519:INFO:Checking exceptions
2022-11-05 18:17:27,519:INFO:Preloading libraries
2022-11-05 18:17:27,950:INFO:display_container: 2
2022-11-05 18:17:27,952:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:17:27,953:INFO:create_model() successfully completed......................................
2022-11-05 18:17:28,244:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:28,245:INFO:Creating metrics dataframe
2022-11-05 18:17:28,270:INFO:Initializing Lasso Regression
2022-11-05 18:17:28,270:INFO:Total runtime is 0.0260640819867452 minutes
2022-11-05 18:17:28,283:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:28,283:INFO:Initializing create_model()
2022-11-05 18:17:28,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:28,283:INFO:Checking exceptions
2022-11-05 18:17:28,286:INFO:Importing libraries
2022-11-05 18:17:28,286:INFO:Copying training dataset
2022-11-05 18:17:28,317:INFO:Defining folds
2022-11-05 18:17:28,317:INFO:Declaring metric variables
2022-11-05 18:17:28,345:INFO:Importing untrained model
2022-11-05 18:17:28,352:INFO:Lasso Regression Imported successfully
2022-11-05 18:17:28,359:INFO:Cross validation set to False
2022-11-05 18:17:28,359:INFO:Fitting Model
2022-11-05 18:17:28,584:INFO:Initializing predict_model()
2022-11-05 18:17:28,584:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442115e0>)
2022-11-05 18:17:28,584:INFO:Checking exceptions
2022-11-05 18:17:28,584:INFO:Preloading libraries
2022-11-05 18:17:28,988:INFO:display_container: 2
2022-11-05 18:17:28,990:INFO:Lasso(random_state=23)
2022-11-05 18:17:28,990:INFO:create_model() successfully completed......................................
2022-11-05 18:17:29,286:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:29,287:INFO:Creating metrics dataframe
2022-11-05 18:17:29,301:INFO:Initializing Ridge Regression
2022-11-05 18:17:29,301:INFO:Total runtime is 0.04325079917907715 minutes
2022-11-05 18:17:29,305:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:29,306:INFO:Initializing create_model()
2022-11-05 18:17:29,306:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:29,306:INFO:Checking exceptions
2022-11-05 18:17:29,310:INFO:Importing libraries
2022-11-05 18:17:29,310:INFO:Copying training dataset
2022-11-05 18:17:29,318:INFO:Defining folds
2022-11-05 18:17:29,318:INFO:Declaring metric variables
2022-11-05 18:17:29,323:INFO:Importing untrained model
2022-11-05 18:17:29,328:INFO:Ridge Regression Imported successfully
2022-11-05 18:17:29,337:INFO:Cross validation set to False
2022-11-05 18:17:29,337:INFO:Fitting Model
2022-11-05 18:17:29,560:INFO:Initializing predict_model()
2022-11-05 18:17:29,560:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211af0>)
2022-11-05 18:17:29,560:INFO:Checking exceptions
2022-11-05 18:17:29,561:INFO:Preloading libraries
2022-11-05 18:17:29,964:INFO:display_container: 2
2022-11-05 18:17:29,966:INFO:Ridge(random_state=23)
2022-11-05 18:17:29,966:INFO:create_model() successfully completed......................................
2022-11-05 18:17:30,242:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:30,242:INFO:Creating metrics dataframe
2022-11-05 18:17:30,256:INFO:Initializing Elastic Net
2022-11-05 18:17:30,256:INFO:Total runtime is 0.05916823148727417 minutes
2022-11-05 18:17:30,260:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:30,261:INFO:Initializing create_model()
2022-11-05 18:17:30,261:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:30,261:INFO:Checking exceptions
2022-11-05 18:17:30,266:INFO:Importing libraries
2022-11-05 18:17:30,266:INFO:Copying training dataset
2022-11-05 18:17:30,272:INFO:Defining folds
2022-11-05 18:17:30,273:INFO:Declaring metric variables
2022-11-05 18:17:30,278:INFO:Importing untrained model
2022-11-05 18:17:30,284:INFO:Elastic Net Imported successfully
2022-11-05 18:17:30,289:INFO:Cross validation set to False
2022-11-05 18:17:30,290:INFO:Fitting Model
2022-11-05 18:17:30,501:INFO:Initializing predict_model()
2022-11-05 18:17:30,501:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211c10>)
2022-11-05 18:17:30,501:INFO:Checking exceptions
2022-11-05 18:17:30,502:INFO:Preloading libraries
2022-11-05 18:17:30,902:INFO:display_container: 2
2022-11-05 18:17:30,904:INFO:ElasticNet(random_state=23)
2022-11-05 18:17:30,904:INFO:create_model() successfully completed......................................
2022-11-05 18:17:31,173:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:31,173:INFO:Creating metrics dataframe
2022-11-05 18:17:31,187:INFO:Initializing Least Angle Regression
2022-11-05 18:17:31,188:INFO:Total runtime is 0.07469003200531006 minutes
2022-11-05 18:17:31,193:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:31,193:INFO:Initializing create_model()
2022-11-05 18:17:31,193:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:31,193:INFO:Checking exceptions
2022-11-05 18:17:31,197:INFO:Importing libraries
2022-11-05 18:17:31,198:INFO:Copying training dataset
2022-11-05 18:17:31,204:INFO:Defining folds
2022-11-05 18:17:31,205:INFO:Declaring metric variables
2022-11-05 18:17:31,209:INFO:Importing untrained model
2022-11-05 18:17:31,215:INFO:Least Angle Regression Imported successfully
2022-11-05 18:17:31,224:INFO:Cross validation set to False
2022-11-05 18:17:31,224:INFO:Fitting Model
2022-11-05 18:17:31,438:INFO:Initializing predict_model()
2022-11-05 18:17:31,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211a60>)
2022-11-05 18:17:31,438:INFO:Checking exceptions
2022-11-05 18:17:31,438:INFO:Preloading libraries
2022-11-05 18:17:31,833:INFO:display_container: 2
2022-11-05 18:17:31,835:INFO:Lars(random_state=23)
2022-11-05 18:17:31,835:INFO:create_model() successfully completed......................................
2022-11-05 18:17:32,107:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:32,107:INFO:Creating metrics dataframe
2022-11-05 18:17:32,122:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:17:32,122:INFO:Total runtime is 0.09026321570078533 minutes
2022-11-05 18:17:32,126:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:32,127:INFO:Initializing create_model()
2022-11-05 18:17:32,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:32,127:INFO:Checking exceptions
2022-11-05 18:17:32,131:INFO:Importing libraries
2022-11-05 18:17:32,131:INFO:Copying training dataset
2022-11-05 18:17:32,138:INFO:Defining folds
2022-11-05 18:17:32,139:INFO:Declaring metric variables
2022-11-05 18:17:32,143:INFO:Importing untrained model
2022-11-05 18:17:32,148:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:17:32,156:INFO:Cross validation set to False
2022-11-05 18:17:32,156:INFO:Fitting Model
2022-11-05 18:17:32,368:INFO:Initializing predict_model()
2022-11-05 18:17:32,369:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442119d0>)
2022-11-05 18:17:32,369:INFO:Checking exceptions
2022-11-05 18:17:32,369:INFO:Preloading libraries
2022-11-05 18:17:32,758:INFO:display_container: 2
2022-11-05 18:17:32,760:INFO:LassoLars(random_state=23)
2022-11-05 18:17:32,760:INFO:create_model() successfully completed......................................
2022-11-05 18:17:33,033:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:33,033:INFO:Creating metrics dataframe
2022-11-05 18:17:33,049:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:17:33,049:INFO:Total runtime is 0.10571224689483644 minutes
2022-11-05 18:17:33,054:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:33,054:INFO:Initializing create_model()
2022-11-05 18:17:33,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:33,055:INFO:Checking exceptions
2022-11-05 18:17:33,058:INFO:Importing libraries
2022-11-05 18:17:33,058:INFO:Copying training dataset
2022-11-05 18:17:33,065:INFO:Defining folds
2022-11-05 18:17:33,065:INFO:Declaring metric variables
2022-11-05 18:17:33,070:INFO:Importing untrained model
2022-11-05 18:17:33,075:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:17:33,082:INFO:Cross validation set to False
2022-11-05 18:17:33,082:INFO:Fitting Model
2022-11-05 18:17:33,297:INFO:Initializing predict_model()
2022-11-05 18:17:33,298:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211dc0>)
2022-11-05 18:17:33,298:INFO:Checking exceptions
2022-11-05 18:17:33,298:INFO:Preloading libraries
2022-11-05 18:17:33,695:INFO:display_container: 2
2022-11-05 18:17:33,697:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:17:33,697:INFO:create_model() successfully completed......................................
2022-11-05 18:17:33,966:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:33,966:INFO:Creating metrics dataframe
2022-11-05 18:17:33,981:INFO:Initializing Bayesian Ridge
2022-11-05 18:17:33,981:INFO:Total runtime is 0.12125081618626914 minutes
2022-11-05 18:17:33,986:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:33,986:INFO:Initializing create_model()
2022-11-05 18:17:33,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:33,987:INFO:Checking exceptions
2022-11-05 18:17:33,991:INFO:Importing libraries
2022-11-05 18:17:33,991:INFO:Copying training dataset
2022-11-05 18:17:33,997:INFO:Defining folds
2022-11-05 18:17:33,997:INFO:Declaring metric variables
2022-11-05 18:17:34,002:INFO:Importing untrained model
2022-11-05 18:17:34,008:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:17:34,014:INFO:Cross validation set to False
2022-11-05 18:17:34,015:INFO:Fitting Model
2022-11-05 18:17:34,235:INFO:Initializing predict_model()
2022-11-05 18:17:34,235:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211550>)
2022-11-05 18:17:34,236:INFO:Checking exceptions
2022-11-05 18:17:34,236:INFO:Preloading libraries
2022-11-05 18:17:34,648:INFO:display_container: 2
2022-11-05 18:17:34,650:INFO:BayesianRidge()
2022-11-05 18:17:34,650:INFO:create_model() successfully completed......................................
2022-11-05 18:17:34,926:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:34,926:INFO:Creating metrics dataframe
2022-11-05 18:17:34,942:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:17:34,942:INFO:Total runtime is 0.1372612992922465 minutes
2022-11-05 18:17:34,946:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:34,947:INFO:Initializing create_model()
2022-11-05 18:17:34,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:34,947:INFO:Checking exceptions
2022-11-05 18:17:34,951:INFO:Importing libraries
2022-11-05 18:17:34,951:INFO:Copying training dataset
2022-11-05 18:17:34,959:INFO:Defining folds
2022-11-05 18:17:34,959:INFO:Declaring metric variables
2022-11-05 18:17:34,963:INFO:Importing untrained model
2022-11-05 18:17:34,969:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:17:34,979:INFO:Cross validation set to False
2022-11-05 18:17:34,979:INFO:Fitting Model
2022-11-05 18:17:35,200:INFO:Initializing predict_model()
2022-11-05 18:17:35,201:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211a60>)
2022-11-05 18:17:35,201:INFO:Checking exceptions
2022-11-05 18:17:35,201:INFO:Preloading libraries
2022-11-05 18:17:35,607:INFO:display_container: 2
2022-11-05 18:17:35,609:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:17:35,609:INFO:create_model() successfully completed......................................
2022-11-05 18:17:35,886:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:35,887:INFO:Creating metrics dataframe
2022-11-05 18:17:35,902:INFO:Initializing Huber Regressor
2022-11-05 18:17:35,902:INFO:Total runtime is 0.15327229897181194 minutes
2022-11-05 18:17:35,907:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:35,908:INFO:Initializing create_model()
2022-11-05 18:17:35,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:35,908:INFO:Checking exceptions
2022-11-05 18:17:35,912:INFO:Importing libraries
2022-11-05 18:17:35,912:INFO:Copying training dataset
2022-11-05 18:17:35,918:INFO:Defining folds
2022-11-05 18:17:35,919:INFO:Declaring metric variables
2022-11-05 18:17:35,924:INFO:Importing untrained model
2022-11-05 18:17:35,953:INFO:Huber Regressor Imported successfully
2022-11-05 18:17:35,987:INFO:Cross validation set to False
2022-11-05 18:17:35,988:INFO:Fitting Model
2022-11-05 18:17:36,260:INFO:Initializing predict_model()
2022-11-05 18:17:36,261:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1492900d0>)
2022-11-05 18:17:36,261:INFO:Checking exceptions
2022-11-05 18:17:36,261:INFO:Preloading libraries
2022-11-05 18:17:36,673:INFO:display_container: 2
2022-11-05 18:17:36,675:INFO:HuberRegressor()
2022-11-05 18:17:36,675:INFO:create_model() successfully completed......................................
2022-11-05 18:17:36,944:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:36,944:INFO:Creating metrics dataframe
2022-11-05 18:17:36,960:INFO:Initializing K Neighbors Regressor
2022-11-05 18:17:36,961:INFO:Total runtime is 0.17090961535771687 minutes
2022-11-05 18:17:36,965:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:36,966:INFO:Initializing create_model()
2022-11-05 18:17:36,966:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:36,966:INFO:Checking exceptions
2022-11-05 18:17:36,970:INFO:Importing libraries
2022-11-05 18:17:36,970:INFO:Copying training dataset
2022-11-05 18:17:36,977:INFO:Defining folds
2022-11-05 18:17:36,977:INFO:Declaring metric variables
2022-11-05 18:17:36,982:INFO:Importing untrained model
2022-11-05 18:17:36,987:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:17:36,995:INFO:Cross validation set to False
2022-11-05 18:17:36,996:INFO:Fitting Model
2022-11-05 18:17:37,212:INFO:Initializing predict_model()
2022-11-05 18:17:37,212:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211af0>)
2022-11-05 18:17:37,213:INFO:Checking exceptions
2022-11-05 18:17:37,213:INFO:Preloading libraries
2022-11-05 18:17:37,637:INFO:display_container: 2
2022-11-05 18:17:37,639:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:17:37,639:INFO:create_model() successfully completed......................................
2022-11-05 18:17:37,913:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:37,914:INFO:Creating metrics dataframe
2022-11-05 18:17:37,930:INFO:Initializing Decision Tree Regressor
2022-11-05 18:17:37,930:INFO:Total runtime is 0.18706181446711223 minutes
2022-11-05 18:17:37,935:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:37,935:INFO:Initializing create_model()
2022-11-05 18:17:37,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:37,936:INFO:Checking exceptions
2022-11-05 18:17:37,940:INFO:Importing libraries
2022-11-05 18:17:37,940:INFO:Copying training dataset
2022-11-05 18:17:37,947:INFO:Defining folds
2022-11-05 18:17:37,948:INFO:Declaring metric variables
2022-11-05 18:17:37,952:INFO:Importing untrained model
2022-11-05 18:17:37,957:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:17:37,964:INFO:Cross validation set to False
2022-11-05 18:17:37,964:INFO:Fitting Model
2022-11-05 18:17:38,280:INFO:Initializing predict_model()
2022-11-05 18:17:38,280:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442115e0>)
2022-11-05 18:17:38,280:INFO:Checking exceptions
2022-11-05 18:17:38,280:INFO:Preloading libraries
2022-11-05 18:17:38,756:INFO:display_container: 2
2022-11-05 18:17:38,759:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:17:38,760:INFO:create_model() successfully completed......................................
2022-11-05 18:17:39,199:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:39,199:INFO:Creating metrics dataframe
2022-11-05 18:17:39,218:INFO:Initializing Random Forest Regressor
2022-11-05 18:17:39,218:INFO:Total runtime is 0.20853194793065388 minutes
2022-11-05 18:17:39,223:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:39,224:INFO:Initializing create_model()
2022-11-05 18:17:39,224:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:39,224:INFO:Checking exceptions
2022-11-05 18:17:39,229:INFO:Importing libraries
2022-11-05 18:17:39,229:INFO:Copying training dataset
2022-11-05 18:17:39,237:INFO:Defining folds
2022-11-05 18:17:39,237:INFO:Declaring metric variables
2022-11-05 18:17:39,242:INFO:Importing untrained model
2022-11-05 18:17:39,248:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:17:39,254:INFO:Cross validation set to False
2022-11-05 18:17:39,254:INFO:Fitting Model
2022-11-05 18:17:40,816:INFO:Initializing predict_model()
2022-11-05 18:17:40,816:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211430>)
2022-11-05 18:17:40,816:INFO:Checking exceptions
2022-11-05 18:17:40,816:INFO:Preloading libraries
2022-11-05 18:17:41,249:INFO:display_container: 2
2022-11-05 18:17:41,250:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:17:41,251:INFO:create_model() successfully completed......................................
2022-11-05 18:17:41,549:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:41,549:INFO:Creating metrics dataframe
2022-11-05 18:17:41,571:INFO:Initializing Extra Trees Regressor
2022-11-05 18:17:41,572:INFO:Total runtime is 0.24775879780451457 minutes
2022-11-05 18:17:41,576:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:41,577:INFO:Initializing create_model()
2022-11-05 18:17:41,578:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:41,578:INFO:Checking exceptions
2022-11-05 18:17:41,582:INFO:Importing libraries
2022-11-05 18:17:41,582:INFO:Copying training dataset
2022-11-05 18:17:41,590:INFO:Defining folds
2022-11-05 18:17:41,590:INFO:Declaring metric variables
2022-11-05 18:17:41,597:INFO:Importing untrained model
2022-11-05 18:17:41,606:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:17:41,612:INFO:Cross validation set to False
2022-11-05 18:17:41,612:INFO:Fitting Model
2022-11-05 18:17:42,407:INFO:Initializing predict_model()
2022-11-05 18:17:42,407:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211670>)
2022-11-05 18:17:42,407:INFO:Checking exceptions
2022-11-05 18:17:42,407:INFO:Preloading libraries
2022-11-05 18:17:42,830:INFO:display_container: 2
2022-11-05 18:17:42,832:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:17:42,833:INFO:create_model() successfully completed......................................
2022-11-05 18:17:43,113:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:43,113:INFO:Creating metrics dataframe
2022-11-05 18:17:43,130:INFO:Initializing AdaBoost Regressor
2022-11-05 18:17:43,130:INFO:Total runtime is 0.27373246749242147 minutes
2022-11-05 18:17:43,135:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:43,135:INFO:Initializing create_model()
2022-11-05 18:17:43,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:43,136:INFO:Checking exceptions
2022-11-05 18:17:43,140:INFO:Importing libraries
2022-11-05 18:17:43,140:INFO:Copying training dataset
2022-11-05 18:17:43,147:INFO:Defining folds
2022-11-05 18:17:43,147:INFO:Declaring metric variables
2022-11-05 18:17:43,152:INFO:Importing untrained model
2022-11-05 18:17:43,156:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:17:43,162:INFO:Cross validation set to False
2022-11-05 18:17:43,162:INFO:Fitting Model
2022-11-05 18:17:43,543:INFO:Initializing predict_model()
2022-11-05 18:17:43,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211280>)
2022-11-05 18:17:43,544:INFO:Checking exceptions
2022-11-05 18:17:43,544:INFO:Preloading libraries
2022-11-05 18:17:43,942:INFO:display_container: 2
2022-11-05 18:17:43,944:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:17:43,945:INFO:create_model() successfully completed......................................
2022-11-05 18:17:44,222:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:44,222:INFO:Creating metrics dataframe
2022-11-05 18:17:44,266:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:17:44,266:INFO:Total runtime is 0.2926686445871989 minutes
2022-11-05 18:17:44,283:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:44,284:INFO:Initializing create_model()
2022-11-05 18:17:44,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:44,284:INFO:Checking exceptions
2022-11-05 18:17:44,288:INFO:Importing libraries
2022-11-05 18:17:44,288:INFO:Copying training dataset
2022-11-05 18:17:44,303:INFO:Defining folds
2022-11-05 18:17:44,303:INFO:Declaring metric variables
2022-11-05 18:17:44,311:INFO:Importing untrained model
2022-11-05 18:17:44,316:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:17:44,322:INFO:Cross validation set to False
2022-11-05 18:17:44,322:INFO:Fitting Model
2022-11-05 18:17:45,677:INFO:Initializing predict_model()
2022-11-05 18:17:45,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211c10>)
2022-11-05 18:17:45,677:INFO:Checking exceptions
2022-11-05 18:17:45,677:INFO:Preloading libraries
2022-11-05 18:17:46,090:INFO:display_container: 2
2022-11-05 18:17:46,092:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:17:46,092:INFO:create_model() successfully completed......................................
2022-11-05 18:17:46,372:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:46,372:INFO:Creating metrics dataframe
2022-11-05 18:17:46,392:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:17:46,392:INFO:Total runtime is 0.3281027674674988 minutes
2022-11-05 18:17:46,399:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:46,400:INFO:Initializing create_model()
2022-11-05 18:17:46,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:46,400:INFO:Checking exceptions
2022-11-05 18:17:46,404:INFO:Importing libraries
2022-11-05 18:17:46,404:INFO:Copying training dataset
2022-11-05 18:17:46,411:INFO:Defining folds
2022-11-05 18:17:46,411:INFO:Declaring metric variables
2022-11-05 18:17:46,416:INFO:Importing untrained model
2022-11-05 18:17:46,423:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:17:46,429:INFO:Cross validation set to False
2022-11-05 18:17:46,430:INFO:Fitting Model
2022-11-05 18:17:46,770:INFO:Initializing predict_model()
2022-11-05 18:17:46,770:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211790>)
2022-11-05 18:17:46,770:INFO:Checking exceptions
2022-11-05 18:17:46,770:INFO:Preloading libraries
2022-11-05 18:17:47,218:INFO:display_container: 2
2022-11-05 18:17:47,220:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:17:47,221:INFO:create_model() successfully completed......................................
2022-11-05 18:17:47,630:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:47,630:INFO:Creating metrics dataframe
2022-11-05 18:17:47,670:INFO:Initializing Dummy Regressor
2022-11-05 18:17:47,671:INFO:Total runtime is 0.3494098464647929 minutes
2022-11-05 18:17:47,679:INFO:SubProcess create_model() called ==================================
2022-11-05 18:17:47,680:INFO:Initializing create_model()
2022-11-05 18:17:47,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x13ced8640>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:47,680:INFO:Checking exceptions
2022-11-05 18:17:47,689:INFO:Importing libraries
2022-11-05 18:17:47,689:INFO:Copying training dataset
2022-11-05 18:17:47,697:INFO:Defining folds
2022-11-05 18:17:47,697:INFO:Declaring metric variables
2022-11-05 18:17:47,704:INFO:Importing untrained model
2022-11-05 18:17:47,708:INFO:Dummy Regressor Imported successfully
2022-11-05 18:17:47,714:INFO:Cross validation set to False
2022-11-05 18:17:47,714:INFO:Fitting Model
2022-11-05 18:17:47,920:INFO:Initializing predict_model()
2022-11-05 18:17:47,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strateg...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1442111f0>)
2022-11-05 18:17:47,921:INFO:Checking exceptions
2022-11-05 18:17:47,921:INFO:Preloading libraries
2022-11-05 18:17:48,340:INFO:display_container: 2
2022-11-05 18:17:48,342:INFO:DummyRegressor()
2022-11-05 18:17:48,342:INFO:create_model() successfully completed......................................
2022-11-05 18:17:48,634:INFO:SubProcess create_model() end ==================================
2022-11-05 18:17:48,635:INFO:Creating metrics dataframe
2022-11-05 18:17:48,670:INFO:Initializing create_model()
2022-11-05 18:17:48,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148fca1c0>, estimator=DecisionTreeRegressor(random_state=23), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:17:48,670:INFO:Checking exceptions
2022-11-05 18:17:48,678:INFO:Importing libraries
2022-11-05 18:17:48,678:INFO:Copying training dataset
2022-11-05 18:17:48,684:INFO:Defining folds
2022-11-05 18:17:48,684:INFO:Declaring metric variables
2022-11-05 18:17:48,684:INFO:Importing untrained model
2022-11-05 18:17:48,684:INFO:Declaring custom model
2022-11-05 18:17:48,685:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:17:48,687:INFO:Cross validation set to False
2022-11-05 18:17:48,687:INFO:Fitting Model
2022-11-05 18:17:48,935:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:17:48,935:INFO:create_model() successfully completed......................................
2022-11-05 18:17:49,252:INFO:master_model_container: 0
2022-11-05 18:17:49,253:INFO:display_container: 2
2022-11-05 18:17:49,253:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:17:49,253:INFO:compare_models() successfully completed......................................
2022-11-05 18:26:59,087:INFO:PyCaret RegressionExperiment
2022-11-05 18:26:59,087:INFO:Logging name: reg-default-name
2022-11-05 18:26:59,087:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 18:26:59,087:INFO:version 3.0.0.rc4
2022-11-05 18:26:59,087:INFO:Initializing setup()
2022-11-05 18:26:59,087:INFO:self.USI: 35e4
2022-11-05 18:26:59,087:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 18:26:59,088:INFO:Checking environment
2022-11-05 18:26:59,088:INFO:python_version: 3.9.6
2022-11-05 18:26:59,088:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 18:26:59,088:INFO:machine: x86_64
2022-11-05 18:26:59,088:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:26:59,088:INFO:Memory: svmem(total=17179869184, available=6776107008, percent=60.6, used=8786370560, free=412741632, active=6364504064, inactive=6304804864, wired=2421866496)
2022-11-05 18:26:59,088:INFO:Physical Core: 4
2022-11-05 18:26:59,088:INFO:Logical Core: 4
2022-11-05 18:26:59,088:INFO:Checking libraries
2022-11-05 18:26:59,088:INFO:System:
2022-11-05 18:26:59,088:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 18:26:59,088:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 18:26:59,088:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 18:26:59,088:INFO:PyCaret required dependencies:
2022-11-05 18:26:59,089:INFO:                 pip: 21.2.4
2022-11-05 18:26:59,089:INFO:          setuptools: 58.0.4
2022-11-05 18:26:59,089:INFO:             pycaret: 3.0.0rc4
2022-11-05 18:26:59,089:INFO:             IPython: 8.6.0
2022-11-05 18:26:59,089:INFO:          ipywidgets: 8.0.2
2022-11-05 18:26:59,089:INFO:                tqdm: 4.64.1
2022-11-05 18:26:59,089:INFO:               numpy: 1.22.4
2022-11-05 18:26:59,089:INFO:              pandas: 1.4.4
2022-11-05 18:26:59,089:INFO:              jinja2: 3.1.2
2022-11-05 18:26:59,089:INFO:               scipy: 1.8.1
2022-11-05 18:26:59,089:INFO:              joblib: 1.2.0
2022-11-05 18:26:59,089:INFO:             sklearn: 1.1.3
2022-11-05 18:26:59,089:INFO:                pyod: 1.0.6
2022-11-05 18:26:59,089:INFO:            imblearn: 0.9.1
2022-11-05 18:26:59,089:INFO:   category_encoders: 2.5.1.post0
2022-11-05 18:26:59,089:INFO:            lightgbm: 3.3.3
2022-11-05 18:26:59,089:INFO:               numba: 0.55.2
2022-11-05 18:26:59,090:INFO:            requests: 2.28.1
2022-11-05 18:26:59,090:INFO:          matplotlib: 3.6.2
2022-11-05 18:26:59,090:INFO:          scikitplot: 0.3.7
2022-11-05 18:26:59,090:INFO:         yellowbrick: 1.5
2022-11-05 18:26:59,090:INFO:              plotly: 5.11.0
2022-11-05 18:26:59,090:INFO:             kaleido: 0.2.1
2022-11-05 18:26:59,090:INFO:         statsmodels: 0.13.5
2022-11-05 18:26:59,090:INFO:              sktime: 0.13.4
2022-11-05 18:26:59,090:INFO:               tbats: 1.1.1
2022-11-05 18:26:59,090:INFO:            pmdarima: 1.8.5
2022-11-05 18:26:59,090:INFO:              psutil: 5.9.3
2022-11-05 18:26:59,090:INFO:PyCaret optional dependencies:
2022-11-05 18:26:59,090:INFO:                shap: Not installed
2022-11-05 18:26:59,090:INFO:           interpret: Not installed
2022-11-05 18:26:59,090:INFO:                umap: Not installed
2022-11-05 18:26:59,090:INFO:    pandas_profiling: Not installed
2022-11-05 18:26:59,091:INFO:  explainerdashboard: Not installed
2022-11-05 18:26:59,091:INFO:             autoviz: Not installed
2022-11-05 18:26:59,091:INFO:           fairlearn: Not installed
2022-11-05 18:26:59,091:INFO:             xgboost: Not installed
2022-11-05 18:26:59,091:INFO:            catboost: Not installed
2022-11-05 18:26:59,091:INFO:              kmodes: Not installed
2022-11-05 18:26:59,091:INFO:             mlxtend: Not installed
2022-11-05 18:26:59,091:INFO:       statsforecast: Not installed
2022-11-05 18:26:59,091:INFO:        tune_sklearn: Not installed
2022-11-05 18:26:59,091:INFO:                 ray: Not installed
2022-11-05 18:26:59,091:INFO:            hyperopt: Not installed
2022-11-05 18:26:59,091:INFO:              optuna: Not installed
2022-11-05 18:26:59,091:INFO:               skopt: Not installed
2022-11-05 18:26:59,091:INFO:              mlflow: Not installed
2022-11-05 18:26:59,091:INFO:              gradio: Not installed
2022-11-05 18:26:59,091:INFO:             fastapi: Not installed
2022-11-05 18:26:59,091:INFO:             uvicorn: Not installed
2022-11-05 18:26:59,092:INFO:              m2cgen: Not installed
2022-11-05 18:26:59,092:INFO:           evidently: Not installed
2022-11-05 18:26:59,092:INFO:                nltk: Not installed
2022-11-05 18:26:59,092:INFO:            pyLDAvis: Not installed
2022-11-05 18:26:59,092:INFO:              gensim: Not installed
2022-11-05 18:26:59,092:INFO:               spacy: 3.4.2
2022-11-05 18:26:59,092:INFO:           wordcloud: Not installed
2022-11-05 18:26:59,092:INFO:            textblob: Not installed
2022-11-05 18:26:59,092:INFO:               fugue: Not installed
2022-11-05 18:26:59,092:INFO:           streamlit: Not installed
2022-11-05 18:26:59,092:INFO:             prophet: Not installed
2022-11-05 18:26:59,092:INFO:None
2022-11-05 18:26:59,092:INFO:Set up data.
2022-11-05 18:26:59,113:INFO:Set up train/test split.
2022-11-05 18:26:59,125:INFO:Set up index.
2022-11-05 18:26:59,126:INFO:Set up folding strategy.
2022-11-05 18:26:59,127:INFO:Assigning column types.
2022-11-05 18:26:59,131:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 18:26:59,132:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,139:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,244:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,320:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,332:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,342:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,519:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 18:26:59,526:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,534:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,713:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,720:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:26:59,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:26:59,892:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 18:26:59,906:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,106:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,202:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,278:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 18:27:00,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,720:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 18:27:00,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:27:00,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:00,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,017:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 18:27:01,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,092:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 18:27:01,279:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:01,473:INFO:Preparing preprocessing pipeline...
2022-11-05 18:27:01,474:INFO:Set up simple imputation.
2022-11-05 18:27:01,480:INFO:Set up encoding of ordinal features.
2022-11-05 18:27:01,482:INFO:Set up encoding of categorical features.
2022-11-05 18:27:01,482:INFO:Set up variance threshold.
2022-11-05 18:27:02,787:INFO:Finished creating preprocessing pipeline.
2022-11-05 18:27:02,803:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                                                                                     'february': 0,
                                                                                     'january': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 18:27:02,803:INFO:Creating final display dataframe.
2022-11-05 18:27:06,717:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 9)
4           Train data shape        (10124, 9)
5            Test data shape         (4340, 9)
6           Ordinal features                 1
7           Numeric features                 3
8       Categorical features                 5
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              35e4
2022-11-05 18:27:06,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:06,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:07,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:07,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 18:27:07,125:INFO:setup() successfully completed in 8.04s...............
2022-11-05 18:27:09,494:INFO:Initializing compare_models()
2022-11-05 18:27:09,494:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 18:27:09,494:INFO:Checking exceptions
2022-11-05 18:27:09,499:INFO:Preparing display monitor
2022-11-05 18:27:09,551:INFO:Initializing Linear Regression
2022-11-05 18:27:09,552:INFO:Total runtime is 5.133946736653646e-06 minutes
2022-11-05 18:27:09,558:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:09,559:INFO:Initializing create_model()
2022-11-05 18:27:09,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:09,559:INFO:Checking exceptions
2022-11-05 18:27:09,565:INFO:Importing libraries
2022-11-05 18:27:09,566:INFO:Copying training dataset
2022-11-05 18:27:09,572:INFO:Defining folds
2022-11-05 18:27:09,572:INFO:Declaring metric variables
2022-11-05 18:27:09,577:INFO:Importing untrained model
2022-11-05 18:27:09,582:INFO:Linear Regression Imported successfully
2022-11-05 18:27:09,590:INFO:Cross validation set to False
2022-11-05 18:27:09,590:INFO:Fitting Model
2022-11-05 18:27:10,471:INFO:Initializing predict_model()
2022-11-05 18:27:10,471:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d44c10>)
2022-11-05 18:27:10,471:INFO:Checking exceptions
2022-11-05 18:27:10,471:INFO:Preloading libraries
2022-11-05 18:27:11,030:INFO:display_container: 2
2022-11-05 18:27:11,032:INFO:LinearRegression(n_jobs=-1)
2022-11-05 18:27:11,032:INFO:create_model() successfully completed......................................
2022-11-05 18:27:11,330:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:11,331:INFO:Creating metrics dataframe
2022-11-05 18:27:11,343:INFO:Initializing Lasso Regression
2022-11-05 18:27:11,343:INFO:Total runtime is 0.029866766929626466 minutes
2022-11-05 18:27:11,348:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:11,349:INFO:Initializing create_model()
2022-11-05 18:27:11,349:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:11,349:INFO:Checking exceptions
2022-11-05 18:27:11,353:INFO:Importing libraries
2022-11-05 18:27:11,353:INFO:Copying training dataset
2022-11-05 18:27:11,360:INFO:Defining folds
2022-11-05 18:27:11,360:INFO:Declaring metric variables
2022-11-05 18:27:11,365:INFO:Importing untrained model
2022-11-05 18:27:11,370:INFO:Lasso Regression Imported successfully
2022-11-05 18:27:11,378:INFO:Cross validation set to False
2022-11-05 18:27:11,378:INFO:Fitting Model
2022-11-05 18:27:11,811:INFO:Initializing predict_model()
2022-11-05 18:27:11,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417da60>)
2022-11-05 18:27:11,812:INFO:Checking exceptions
2022-11-05 18:27:11,812:INFO:Preloading libraries
2022-11-05 18:27:12,323:INFO:display_container: 2
2022-11-05 18:27:12,325:INFO:Lasso(random_state=23)
2022-11-05 18:27:12,325:INFO:create_model() successfully completed......................................
2022-11-05 18:27:12,601:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:12,601:INFO:Creating metrics dataframe
2022-11-05 18:27:12,614:INFO:Initializing Ridge Regression
2022-11-05 18:27:12,614:INFO:Total runtime is 0.051049586137135824 minutes
2022-11-05 18:27:12,619:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:12,619:INFO:Initializing create_model()
2022-11-05 18:27:12,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:12,620:INFO:Checking exceptions
2022-11-05 18:27:12,624:INFO:Importing libraries
2022-11-05 18:27:12,624:INFO:Copying training dataset
2022-11-05 18:27:12,630:INFO:Defining folds
2022-11-05 18:27:12,630:INFO:Declaring metric variables
2022-11-05 18:27:12,635:INFO:Importing untrained model
2022-11-05 18:27:12,641:INFO:Ridge Regression Imported successfully
2022-11-05 18:27:12,647:INFO:Cross validation set to False
2022-11-05 18:27:12,647:INFO:Fitting Model
2022-11-05 18:27:13,075:INFO:Initializing predict_model()
2022-11-05 18:27:13,075:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417dc10>)
2022-11-05 18:27:13,075:INFO:Checking exceptions
2022-11-05 18:27:13,076:INFO:Preloading libraries
2022-11-05 18:27:13,570:INFO:display_container: 2
2022-11-05 18:27:13,572:INFO:Ridge(random_state=23)
2022-11-05 18:27:13,572:INFO:create_model() successfully completed......................................
2022-11-05 18:27:13,852:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:13,852:INFO:Creating metrics dataframe
2022-11-05 18:27:13,867:INFO:Initializing Elastic Net
2022-11-05 18:27:13,867:INFO:Total runtime is 0.07192432085673015 minutes
2022-11-05 18:27:13,871:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:13,872:INFO:Initializing create_model()
2022-11-05 18:27:13,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:13,872:INFO:Checking exceptions
2022-11-05 18:27:13,876:INFO:Importing libraries
2022-11-05 18:27:13,876:INFO:Copying training dataset
2022-11-05 18:27:13,883:INFO:Defining folds
2022-11-05 18:27:13,884:INFO:Declaring metric variables
2022-11-05 18:27:13,889:INFO:Importing untrained model
2022-11-05 18:27:13,896:INFO:Elastic Net Imported successfully
2022-11-05 18:27:13,903:INFO:Cross validation set to False
2022-11-05 18:27:13,903:INFO:Fitting Model
2022-11-05 18:27:14,335:INFO:Initializing predict_model()
2022-11-05 18:27:14,336:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d1f0>)
2022-11-05 18:27:14,336:INFO:Checking exceptions
2022-11-05 18:27:14,336:INFO:Preloading libraries
2022-11-05 18:27:14,831:INFO:display_container: 2
2022-11-05 18:27:14,833:INFO:ElasticNet(random_state=23)
2022-11-05 18:27:14,833:INFO:create_model() successfully completed......................................
2022-11-05 18:27:15,158:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:15,158:INFO:Creating metrics dataframe
2022-11-05 18:27:15,172:INFO:Initializing Least Angle Regression
2022-11-05 18:27:15,172:INFO:Total runtime is 0.09367886781692505 minutes
2022-11-05 18:27:15,178:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:15,178:INFO:Initializing create_model()
2022-11-05 18:27:15,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:15,179:INFO:Checking exceptions
2022-11-05 18:27:15,183:INFO:Importing libraries
2022-11-05 18:27:15,183:INFO:Copying training dataset
2022-11-05 18:27:15,189:INFO:Defining folds
2022-11-05 18:27:15,190:INFO:Declaring metric variables
2022-11-05 18:27:15,194:INFO:Importing untrained model
2022-11-05 18:27:15,201:INFO:Least Angle Regression Imported successfully
2022-11-05 18:27:15,207:INFO:Cross validation set to False
2022-11-05 18:27:15,207:INFO:Fitting Model
2022-11-05 18:27:15,642:INFO:Initializing predict_model()
2022-11-05 18:27:15,642:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d790>)
2022-11-05 18:27:15,643:INFO:Checking exceptions
2022-11-05 18:27:15,643:INFO:Preloading libraries
2022-11-05 18:27:16,142:INFO:display_container: 2
2022-11-05 18:27:16,144:INFO:Lars(random_state=23)
2022-11-05 18:27:16,145:INFO:create_model() successfully completed......................................
2022-11-05 18:27:16,421:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:16,422:INFO:Creating metrics dataframe
2022-11-05 18:27:16,435:INFO:Initializing Lasso Least Angle Regression
2022-11-05 18:27:16,436:INFO:Total runtime is 0.11473660469055176 minutes
2022-11-05 18:27:16,440:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:16,441:INFO:Initializing create_model()
2022-11-05 18:27:16,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:16,441:INFO:Checking exceptions
2022-11-05 18:27:16,445:INFO:Importing libraries
2022-11-05 18:27:16,445:INFO:Copying training dataset
2022-11-05 18:27:16,452:INFO:Defining folds
2022-11-05 18:27:16,452:INFO:Declaring metric variables
2022-11-05 18:27:16,456:INFO:Importing untrained model
2022-11-05 18:27:16,466:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 18:27:16,477:INFO:Cross validation set to False
2022-11-05 18:27:16,478:INFO:Fitting Model
2022-11-05 18:27:16,905:INFO:Initializing predict_model()
2022-11-05 18:27:16,905:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d550>)
2022-11-05 18:27:16,905:INFO:Checking exceptions
2022-11-05 18:27:16,905:INFO:Preloading libraries
2022-11-05 18:27:17,412:INFO:display_container: 2
2022-11-05 18:27:17,416:INFO:LassoLars(random_state=23)
2022-11-05 18:27:17,417:INFO:create_model() successfully completed......................................
2022-11-05 18:27:17,706:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:17,706:INFO:Creating metrics dataframe
2022-11-05 18:27:17,720:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 18:27:17,720:INFO:Total runtime is 0.13614850441614787 minutes
2022-11-05 18:27:17,725:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:17,726:INFO:Initializing create_model()
2022-11-05 18:27:17,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:17,726:INFO:Checking exceptions
2022-11-05 18:27:17,730:INFO:Importing libraries
2022-11-05 18:27:17,730:INFO:Copying training dataset
2022-11-05 18:27:17,737:INFO:Defining folds
2022-11-05 18:27:17,737:INFO:Declaring metric variables
2022-11-05 18:27:17,742:INFO:Importing untrained model
2022-11-05 18:27:17,751:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 18:27:17,759:INFO:Cross validation set to False
2022-11-05 18:27:17,759:INFO:Fitting Model
2022-11-05 18:27:18,178:INFO:Initializing predict_model()
2022-11-05 18:27:18,178:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417ddc0>)
2022-11-05 18:27:18,178:INFO:Checking exceptions
2022-11-05 18:27:18,178:INFO:Preloading libraries
2022-11-05 18:27:18,673:INFO:display_container: 2
2022-11-05 18:27:18,675:INFO:OrthogonalMatchingPursuit()
2022-11-05 18:27:18,675:INFO:create_model() successfully completed......................................
2022-11-05 18:27:18,958:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:18,958:INFO:Creating metrics dataframe
2022-11-05 18:27:18,973:INFO:Initializing Bayesian Ridge
2022-11-05 18:27:18,973:INFO:Total runtime is 0.15702760219573975 minutes
2022-11-05 18:27:18,977:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:18,978:INFO:Initializing create_model()
2022-11-05 18:27:18,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:18,978:INFO:Checking exceptions
2022-11-05 18:27:18,983:INFO:Importing libraries
2022-11-05 18:27:18,983:INFO:Copying training dataset
2022-11-05 18:27:18,989:INFO:Defining folds
2022-11-05 18:27:18,989:INFO:Declaring metric variables
2022-11-05 18:27:18,994:INFO:Importing untrained model
2022-11-05 18:27:18,999:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:27:19,006:INFO:Cross validation set to False
2022-11-05 18:27:19,006:INFO:Fitting Model
2022-11-05 18:27:19,428:INFO:Initializing predict_model()
2022-11-05 18:27:19,429:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d280>)
2022-11-05 18:27:19,429:INFO:Checking exceptions
2022-11-05 18:27:19,429:INFO:Preloading libraries
2022-11-05 18:27:19,932:INFO:display_container: 2
2022-11-05 18:27:19,935:INFO:BayesianRidge()
2022-11-05 18:27:19,935:INFO:create_model() successfully completed......................................
2022-11-05 18:27:20,272:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:20,273:INFO:Creating metrics dataframe
2022-11-05 18:27:20,289:INFO:Initializing Passive Aggressive Regressor
2022-11-05 18:27:20,289:INFO:Total runtime is 0.17896348237991333 minutes
2022-11-05 18:27:20,294:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:20,295:INFO:Initializing create_model()
2022-11-05 18:27:20,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:20,295:INFO:Checking exceptions
2022-11-05 18:27:20,299:INFO:Importing libraries
2022-11-05 18:27:20,299:INFO:Copying training dataset
2022-11-05 18:27:20,306:INFO:Defining folds
2022-11-05 18:27:20,306:INFO:Declaring metric variables
2022-11-05 18:27:20,311:INFO:Importing untrained model
2022-11-05 18:27:20,319:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 18:27:20,328:INFO:Cross validation set to False
2022-11-05 18:27:20,328:INFO:Fitting Model
2022-11-05 18:27:20,763:INFO:Initializing predict_model()
2022-11-05 18:27:20,763:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417df70>)
2022-11-05 18:27:20,764:INFO:Checking exceptions
2022-11-05 18:27:20,764:INFO:Preloading libraries
2022-11-05 18:27:21,250:INFO:display_container: 2
2022-11-05 18:27:21,252:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 18:27:21,252:INFO:create_model() successfully completed......................................
2022-11-05 18:27:21,531:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:21,531:INFO:Creating metrics dataframe
2022-11-05 18:27:21,547:INFO:Initializing Huber Regressor
2022-11-05 18:27:21,547:INFO:Total runtime is 0.19992760022481282 minutes
2022-11-05 18:27:21,552:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:21,552:INFO:Initializing create_model()
2022-11-05 18:27:21,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:21,553:INFO:Checking exceptions
2022-11-05 18:27:21,557:INFO:Importing libraries
2022-11-05 18:27:21,557:INFO:Copying training dataset
2022-11-05 18:27:21,564:INFO:Defining folds
2022-11-05 18:27:21,564:INFO:Declaring metric variables
2022-11-05 18:27:21,569:INFO:Importing untrained model
2022-11-05 18:27:21,575:INFO:Huber Regressor Imported successfully
2022-11-05 18:27:21,581:INFO:Cross validation set to False
2022-11-05 18:27:21,581:INFO:Fitting Model
2022-11-05 18:27:22,066:INFO:Initializing predict_model()
2022-11-05 18:27:22,066:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141d5e5e0>)
2022-11-05 18:27:22,066:INFO:Checking exceptions
2022-11-05 18:27:22,067:INFO:Preloading libraries
2022-11-05 18:27:22,568:INFO:display_container: 2
2022-11-05 18:27:22,570:INFO:HuberRegressor()
2022-11-05 18:27:22,570:INFO:create_model() successfully completed......................................
2022-11-05 18:27:22,848:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:22,849:INFO:Creating metrics dataframe
2022-11-05 18:27:22,864:INFO:Initializing K Neighbors Regressor
2022-11-05 18:27:22,864:INFO:Total runtime is 0.22188460032145182 minutes
2022-11-05 18:27:22,869:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:22,870:INFO:Initializing create_model()
2022-11-05 18:27:22,870:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:22,870:INFO:Checking exceptions
2022-11-05 18:27:22,874:INFO:Importing libraries
2022-11-05 18:27:22,874:INFO:Copying training dataset
2022-11-05 18:27:22,881:INFO:Defining folds
2022-11-05 18:27:22,882:INFO:Declaring metric variables
2022-11-05 18:27:22,888:INFO:Importing untrained model
2022-11-05 18:27:22,892:INFO:K Neighbors Regressor Imported successfully
2022-11-05 18:27:22,899:INFO:Cross validation set to False
2022-11-05 18:27:22,899:INFO:Fitting Model
2022-11-05 18:27:23,329:INFO:Initializing predict_model()
2022-11-05 18:27:23,329:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d550>)
2022-11-05 18:27:23,329:INFO:Checking exceptions
2022-11-05 18:27:23,329:INFO:Preloading libraries
2022-11-05 18:27:23,858:INFO:display_container: 2
2022-11-05 18:27:23,860:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 18:27:23,860:INFO:create_model() successfully completed......................................
2022-11-05 18:27:24,143:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:24,143:INFO:Creating metrics dataframe
2022-11-05 18:27:24,159:INFO:Initializing Decision Tree Regressor
2022-11-05 18:27:24,159:INFO:Total runtime is 0.2434610644976298 minutes
2022-11-05 18:27:24,163:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:24,164:INFO:Initializing create_model()
2022-11-05 18:27:24,164:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:24,164:INFO:Checking exceptions
2022-11-05 18:27:24,168:INFO:Importing libraries
2022-11-05 18:27:24,168:INFO:Copying training dataset
2022-11-05 18:27:24,175:INFO:Defining folds
2022-11-05 18:27:24,175:INFO:Declaring metric variables
2022-11-05 18:27:24,180:INFO:Importing untrained model
2022-11-05 18:27:24,184:INFO:Decision Tree Regressor Imported successfully
2022-11-05 18:27:24,191:INFO:Cross validation set to False
2022-11-05 18:27:24,192:INFO:Fitting Model
2022-11-05 18:27:24,726:INFO:Initializing predict_model()
2022-11-05 18:27:24,726:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d160>)
2022-11-05 18:27:24,726:INFO:Checking exceptions
2022-11-05 18:27:24,727:INFO:Preloading libraries
2022-11-05 18:27:25,217:INFO:display_container: 2
2022-11-05 18:27:25,219:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 18:27:25,219:INFO:create_model() successfully completed......................................
2022-11-05 18:27:25,495:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:25,495:INFO:Creating metrics dataframe
2022-11-05 18:27:25,512:INFO:Initializing Random Forest Regressor
2022-11-05 18:27:25,513:INFO:Total runtime is 0.2660237193107605 minutes
2022-11-05 18:27:25,518:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:25,518:INFO:Initializing create_model()
2022-11-05 18:27:25,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:25,518:INFO:Checking exceptions
2022-11-05 18:27:25,522:INFO:Importing libraries
2022-11-05 18:27:25,522:INFO:Copying training dataset
2022-11-05 18:27:25,529:INFO:Defining folds
2022-11-05 18:27:25,530:INFO:Declaring metric variables
2022-11-05 18:27:25,534:INFO:Importing untrained model
2022-11-05 18:27:25,540:INFO:Random Forest Regressor Imported successfully
2022-11-05 18:27:25,546:INFO:Cross validation set to False
2022-11-05 18:27:25,546:INFO:Fitting Model
2022-11-05 18:27:27,641:INFO:Initializing predict_model()
2022-11-05 18:27:27,641:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d700>)
2022-11-05 18:27:27,641:INFO:Checking exceptions
2022-11-05 18:27:27,642:INFO:Preloading libraries
2022-11-05 18:27:28,177:INFO:display_container: 2
2022-11-05 18:27:28,179:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:27:28,180:INFO:create_model() successfully completed......................................
2022-11-05 18:27:28,465:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:28,465:INFO:Creating metrics dataframe
2022-11-05 18:27:28,481:INFO:Initializing Extra Trees Regressor
2022-11-05 18:27:28,482:INFO:Total runtime is 0.31550173759460454 minutes
2022-11-05 18:27:28,514:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:28,515:INFO:Initializing create_model()
2022-11-05 18:27:28,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:28,515:INFO:Checking exceptions
2022-11-05 18:27:28,519:INFO:Importing libraries
2022-11-05 18:27:28,519:INFO:Copying training dataset
2022-11-05 18:27:28,537:INFO:Defining folds
2022-11-05 18:27:28,538:INFO:Declaring metric variables
2022-11-05 18:27:28,553:INFO:Importing untrained model
2022-11-05 18:27:28,559:INFO:Extra Trees Regressor Imported successfully
2022-11-05 18:27:28,580:INFO:Cross validation set to False
2022-11-05 18:27:28,580:INFO:Fitting Model
2022-11-05 18:27:29,887:INFO:Initializing predict_model()
2022-11-05 18:27:29,888:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417da60>)
2022-11-05 18:27:29,888:INFO:Checking exceptions
2022-11-05 18:27:29,888:INFO:Preloading libraries
2022-11-05 18:27:30,512:INFO:display_container: 2
2022-11-05 18:27:30,515:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 18:27:30,515:INFO:create_model() successfully completed......................................
2022-11-05 18:27:30,826:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:30,826:INFO:Creating metrics dataframe
2022-11-05 18:27:30,846:INFO:Initializing AdaBoost Regressor
2022-11-05 18:27:30,846:INFO:Total runtime is 0.3549104531606039 minutes
2022-11-05 18:27:30,851:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:30,851:INFO:Initializing create_model()
2022-11-05 18:27:30,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:30,851:INFO:Checking exceptions
2022-11-05 18:27:30,856:INFO:Importing libraries
2022-11-05 18:27:30,856:INFO:Copying training dataset
2022-11-05 18:27:30,864:INFO:Defining folds
2022-11-05 18:27:30,864:INFO:Declaring metric variables
2022-11-05 18:27:30,870:INFO:Importing untrained model
2022-11-05 18:27:30,875:INFO:AdaBoost Regressor Imported successfully
2022-11-05 18:27:30,883:INFO:Cross validation set to False
2022-11-05 18:27:30,883:INFO:Fitting Model
2022-11-05 18:27:31,801:INFO:Initializing predict_model()
2022-11-05 18:27:31,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d8b0>)
2022-11-05 18:27:31,802:INFO:Checking exceptions
2022-11-05 18:27:31,802:INFO:Preloading libraries
2022-11-05 18:27:32,573:INFO:display_container: 2
2022-11-05 18:27:32,575:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 18:27:32,575:INFO:create_model() successfully completed......................................
2022-11-05 18:27:33,044:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:33,044:INFO:Creating metrics dataframe
2022-11-05 18:27:33,073:INFO:Initializing Gradient Boosting Regressor
2022-11-05 18:27:33,073:INFO:Total runtime is 0.39203273455301924 minutes
2022-11-05 18:27:33,080:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:33,081:INFO:Initializing create_model()
2022-11-05 18:27:33,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:33,081:INFO:Checking exceptions
2022-11-05 18:27:33,086:INFO:Importing libraries
2022-11-05 18:27:33,086:INFO:Copying training dataset
2022-11-05 18:27:33,093:INFO:Defining folds
2022-11-05 18:27:33,094:INFO:Declaring metric variables
2022-11-05 18:27:33,116:INFO:Importing untrained model
2022-11-05 18:27:33,133:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 18:27:33,146:INFO:Cross validation set to False
2022-11-05 18:27:33,146:INFO:Fitting Model
2022-11-05 18:27:35,222:INFO:Initializing predict_model()
2022-11-05 18:27:35,222:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417da60>)
2022-11-05 18:27:35,222:INFO:Checking exceptions
2022-11-05 18:27:35,222:INFO:Preloading libraries
2022-11-05 18:27:35,748:INFO:display_container: 2
2022-11-05 18:27:35,750:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 18:27:35,751:INFO:create_model() successfully completed......................................
2022-11-05 18:27:36,079:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:36,079:INFO:Creating metrics dataframe
2022-11-05 18:27:36,100:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 18:27:36,100:INFO:Total runtime is 0.44247956673304245 minutes
2022-11-05 18:27:36,105:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:36,106:INFO:Initializing create_model()
2022-11-05 18:27:36,106:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:36,106:INFO:Checking exceptions
2022-11-05 18:27:36,109:INFO:Importing libraries
2022-11-05 18:27:36,109:INFO:Copying training dataset
2022-11-05 18:27:36,116:INFO:Defining folds
2022-11-05 18:27:36,116:INFO:Declaring metric variables
2022-11-05 18:27:36,123:INFO:Importing untrained model
2022-11-05 18:27:36,130:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 18:27:36,137:INFO:Cross validation set to False
2022-11-05 18:27:36,137:INFO:Fitting Model
2022-11-05 18:27:36,831:INFO:Initializing predict_model()
2022-11-05 18:27:36,832:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d8b0>)
2022-11-05 18:27:36,832:INFO:Checking exceptions
2022-11-05 18:27:36,832:INFO:Preloading libraries
2022-11-05 18:27:37,706:INFO:display_container: 2
2022-11-05 18:27:37,724:INFO:LGBMRegressor(random_state=23)
2022-11-05 18:27:37,724:INFO:create_model() successfully completed......................................
2022-11-05 18:27:38,264:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:38,264:INFO:Creating metrics dataframe
2022-11-05 18:27:38,288:INFO:Initializing Dummy Regressor
2022-11-05 18:27:38,289:INFO:Total runtime is 0.4789542317390442 minutes
2022-11-05 18:27:38,294:INFO:SubProcess create_model() called ==================================
2022-11-05 18:27:38,295:INFO:Initializing create_model()
2022-11-05 18:27:38,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1491f1f10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:38,296:INFO:Checking exceptions
2022-11-05 18:27:38,299:INFO:Importing libraries
2022-11-05 18:27:38,299:INFO:Copying training dataset
2022-11-05 18:27:38,308:INFO:Defining folds
2022-11-05 18:27:38,308:INFO:Declaring metric variables
2022-11-05 18:27:38,315:INFO:Importing untrained model
2022-11-05 18:27:38,324:INFO:Dummy Regressor Imported successfully
2022-11-05 18:27:38,337:INFO:Cross validation set to False
2022-11-05 18:27:38,337:INFO:Fitting Model
2022-11-05 18:27:38,908:INFO:Initializing predict_model()
2022-11-05 18:27:38,909:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417ddc0>)
2022-11-05 18:27:38,909:INFO:Checking exceptions
2022-11-05 18:27:38,909:INFO:Preloading libraries
2022-11-05 18:27:39,503:INFO:display_container: 2
2022-11-05 18:27:39,511:INFO:DummyRegressor()
2022-11-05 18:27:39,513:INFO:create_model() successfully completed......................................
2022-11-05 18:27:39,844:INFO:SubProcess create_model() end ==================================
2022-11-05 18:27:39,844:INFO:Creating metrics dataframe
2022-11-05 18:27:39,875:INFO:Initializing create_model()
2022-11-05 18:27:39,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 18:27:39,875:INFO:Checking exceptions
2022-11-05 18:27:39,882:INFO:Importing libraries
2022-11-05 18:27:39,882:INFO:Copying training dataset
2022-11-05 18:27:39,887:INFO:Defining folds
2022-11-05 18:27:39,887:INFO:Declaring metric variables
2022-11-05 18:27:39,887:INFO:Importing untrained model
2022-11-05 18:27:39,887:INFO:Declaring custom model
2022-11-05 18:27:39,889:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:27:39,891:INFO:Cross validation set to False
2022-11-05 18:27:39,891:INFO:Fitting Model
2022-11-05 18:27:40,297:INFO:BayesianRidge()
2022-11-05 18:27:40,297:INFO:create_model() successfully completed......................................
2022-11-05 18:27:40,645:INFO:master_model_container: 0
2022-11-05 18:27:40,645:INFO:display_container: 2
2022-11-05 18:27:40,646:INFO:BayesianRidge()
2022-11-05 18:27:40,646:INFO:compare_models() successfully completed......................................
2022-11-05 18:27:40,767:INFO:Initializing create_model()
2022-11-05 18:27:40,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=br, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-05 18:27:40,768:INFO:Checking exceptions
2022-11-05 18:27:40,823:INFO:Importing libraries
2022-11-05 18:27:40,823:INFO:Copying training dataset
2022-11-05 18:27:40,830:INFO:Defining folds
2022-11-05 18:27:40,830:INFO:Declaring metric variables
2022-11-05 18:27:40,835:INFO:Importing untrained model
2022-11-05 18:27:40,846:INFO:Bayesian Ridge Imported successfully
2022-11-05 18:27:40,863:INFO:Starting cross validation
2022-11-05 18:27:40,871:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 18:27:57,717:INFO:Calculating mean and std
2022-11-05 18:27:57,721:INFO:Creating metrics dataframe
2022-11-05 18:27:57,733:INFO:Finalizing model
2022-11-05 18:27:58,158:INFO:Initializing predict_model()
2022-11-05 18:27:58,158:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'month',
                                             'day_name'],
                                    transformer=SimpleImpute...
                ('rest_encoding',
                 TransformerWrapper(include=['macroCategory', 'category',
                                             'day_of_month', 'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d550>)
2022-11-05 18:27:58,158:INFO:Checking exceptions
2022-11-05 18:27:58,158:INFO:Preloading libraries
2022-11-05 18:27:58,158:INFO:Set up data.
2022-11-05 18:27:58,166:INFO:Set up index.
2022-11-05 18:27:59,802:INFO:Uploading results into container
2022-11-05 18:27:59,803:INFO:Uploading model into container now
2022-11-05 18:27:59,823:INFO:master_model_container: 1
2022-11-05 18:27:59,823:INFO:display_container: 3
2022-11-05 18:27:59,824:INFO:BayesianRidge()
2022-11-05 18:27:59,824:INFO:create_model() successfully completed......................................
2022-11-05 18:28:00,201:INFO:Initializing plot_model()
2022-11-05 18:28:00,201:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, system=True)
2022-11-05 18:28:00,202:INFO:Checking exceptions
2022-11-05 18:28:00,218:INFO:Preloading libraries
2022-11-05 18:28:00,218:INFO:Copying training dataset
2022-11-05 18:28:00,218:INFO:Plot type: residuals
2022-11-05 18:28:01,428:INFO:Fitting Model
2022-11-05 18:28:01,494:INFO:Scoring test/hold-out set
2022-11-05 18:28:02,617:INFO:Visual Rendered Successfully
2022-11-05 18:28:02,920:INFO:plot_model() successfully completed......................................
2022-11-05 18:28:33,608:INFO:Initializing plot_model()
2022-11-05 18:28:33,608:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, system=True)
2022-11-05 18:28:33,608:INFO:Checking exceptions
2022-11-05 18:28:33,615:INFO:Preloading libraries
2022-11-05 18:28:33,615:INFO:Copying training dataset
2022-11-05 18:28:33,615:INFO:Plot type: error
2022-11-05 18:28:34,880:INFO:Fitting Model
2022-11-05 18:28:34,880:INFO:Scoring test/hold-out set
2022-11-05 18:28:35,375:INFO:Visual Rendered Successfully
2022-11-05 18:28:35,711:INFO:plot_model() successfully completed......................................
2022-11-05 18:28:53,247:INFO:Initializing plot_model()
2022-11-05 18:28:53,248:INFO:plot_model(plot=rfe, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, system=True)
2022-11-05 18:28:53,248:INFO:Checking exceptions
2022-11-05 18:28:53,262:INFO:Preloading libraries
2022-11-05 18:28:53,263:INFO:Copying training dataset
2022-11-05 18:28:53,263:INFO:Plot type: rfe
2022-11-05 18:28:54,294:INFO:Fitting Model
2022-11-05 18:28:56,038:INFO:Visual Rendered Successfully
2022-11-05 18:28:56,313:INFO:plot_model() successfully completed......................................
2022-11-05 18:29:09,145:INFO:Initializing plot_model()
2022-11-05 18:29:09,145:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x141ca52e0>, system=True)
2022-11-05 18:29:09,145:INFO:Checking exceptions
2022-11-05 18:29:09,154:INFO:Preloading libraries
2022-11-05 18:29:09,154:INFO:Copying training dataset
2022-11-05 18:29:09,154:INFO:Plot type: feature
2022-11-05 18:29:10,374:INFO:Visual Rendered Successfully
2022-11-05 18:29:10,664:INFO:plot_model() successfully completed......................................
2022-11-05 18:34:29,268:ERROR:
'explainerdashboard' is a soft dependency and not included in the pycaret installation. Please run: `pip install explainerdashboard` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2022-11-05 18:34:52,232:ERROR:
'explainerdashboard' is a soft dependency and not included in the pycaret installation. Please run: `pip install explainerdashboard` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2022-11-05 18:36:29,637:ERROR:
'explainerdashboard' is a soft dependency and not included in the pycaret installation. Please run: `pip install explainerdashboard` to install.
Alternately, you can install this by running `pip install pycaret[analysis]`
NoneType: None
2022-11-05 20:03:45,837:INFO:PyCaret RegressionExperiment
2022-11-05 20:03:45,845:INFO:Logging name: reg-default-name
2022-11-05 20:03:45,845:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 20:03:45,845:INFO:version 3.0.0.rc4
2022-11-05 20:03:45,845:INFO:Initializing setup()
2022-11-05 20:03:45,845:INFO:self.USI: f1a8
2022-11-05 20:03:45,846:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 20:03:45,846:INFO:Checking environment
2022-11-05 20:03:45,846:INFO:python_version: 3.9.6
2022-11-05 20:03:45,846:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 20:03:45,846:INFO:machine: x86_64
2022-11-05 20:03:45,846:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 20:03:45,846:INFO:Memory: svmem(total=17179869184, available=6504136704, percent=62.1, used=8963055616, free=66318336, active=6438739968, inactive=6291722240, wired=2524315648)
2022-11-05 20:03:45,846:INFO:Physical Core: 4
2022-11-05 20:03:45,846:INFO:Logical Core: 4
2022-11-05 20:03:45,846:INFO:Checking libraries
2022-11-05 20:03:45,846:INFO:System:
2022-11-05 20:03:45,847:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 20:03:45,847:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 20:03:45,847:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 20:03:45,847:INFO:PyCaret required dependencies:
2022-11-05 20:03:45,847:INFO:                 pip: 21.2.4
2022-11-05 20:03:45,847:INFO:          setuptools: 58.0.4
2022-11-05 20:03:45,847:INFO:             pycaret: 3.0.0rc4
2022-11-05 20:03:45,847:INFO:             IPython: 8.6.0
2022-11-05 20:03:45,847:INFO:          ipywidgets: 8.0.2
2022-11-05 20:03:45,847:INFO:                tqdm: 4.64.1
2022-11-05 20:03:45,847:INFO:               numpy: 1.22.4
2022-11-05 20:03:45,847:INFO:              pandas: 1.4.4
2022-11-05 20:03:45,847:INFO:              jinja2: 3.1.2
2022-11-05 20:03:45,847:INFO:               scipy: 1.8.1
2022-11-05 20:03:45,848:INFO:              joblib: 1.2.0
2022-11-05 20:03:45,848:INFO:             sklearn: 1.1.3
2022-11-05 20:03:45,848:INFO:                pyod: 1.0.6
2022-11-05 20:03:45,848:INFO:            imblearn: 0.9.1
2022-11-05 20:03:45,848:INFO:   category_encoders: 2.5.1.post0
2022-11-05 20:03:45,848:INFO:            lightgbm: 3.3.3
2022-11-05 20:03:45,848:INFO:               numba: 0.55.2
2022-11-05 20:03:45,848:INFO:            requests: 2.28.1
2022-11-05 20:03:45,848:INFO:          matplotlib: 3.6.2
2022-11-05 20:03:45,848:INFO:          scikitplot: 0.3.7
2022-11-05 20:03:45,848:INFO:         yellowbrick: 1.5
2022-11-05 20:03:45,848:INFO:              plotly: 5.11.0
2022-11-05 20:03:45,848:INFO:             kaleido: 0.2.1
2022-11-05 20:03:45,848:INFO:         statsmodels: 0.13.5
2022-11-05 20:03:45,848:INFO:              sktime: 0.13.4
2022-11-05 20:03:45,848:INFO:               tbats: 1.1.1
2022-11-05 20:03:45,848:INFO:            pmdarima: 1.8.5
2022-11-05 20:03:45,849:INFO:              psutil: 5.9.3
2022-11-05 20:03:45,849:INFO:PyCaret optional dependencies:
2022-11-05 20:03:45,849:INFO:                shap: Not installed
2022-11-05 20:03:45,849:INFO:           interpret: Not installed
2022-11-05 20:03:45,849:INFO:                umap: Not installed
2022-11-05 20:03:45,849:INFO:    pandas_profiling: Not installed
2022-11-05 20:03:45,849:INFO:  explainerdashboard: Not installed
2022-11-05 20:03:45,849:INFO:             autoviz: Not installed
2022-11-05 20:03:45,849:INFO:           fairlearn: Not installed
2022-11-05 20:03:45,849:INFO:             xgboost: Not installed
2022-11-05 20:03:45,849:INFO:            catboost: Not installed
2022-11-05 20:03:45,849:INFO:              kmodes: Not installed
2022-11-05 20:03:45,849:INFO:             mlxtend: Not installed
2022-11-05 20:03:45,849:INFO:       statsforecast: Not installed
2022-11-05 20:03:45,849:INFO:        tune_sklearn: Not installed
2022-11-05 20:03:45,850:INFO:                 ray: Not installed
2022-11-05 20:03:45,850:INFO:            hyperopt: Not installed
2022-11-05 20:03:45,850:INFO:              optuna: Not installed
2022-11-05 20:03:45,850:INFO:               skopt: Not installed
2022-11-05 20:03:45,850:INFO:              mlflow: Not installed
2022-11-05 20:03:45,850:INFO:              gradio: Not installed
2022-11-05 20:03:45,850:INFO:             fastapi: Not installed
2022-11-05 20:03:45,850:INFO:             uvicorn: Not installed
2022-11-05 20:03:45,850:INFO:              m2cgen: Not installed
2022-11-05 20:03:45,850:INFO:           evidently: Not installed
2022-11-05 20:03:45,850:INFO:                nltk: Not installed
2022-11-05 20:03:45,850:INFO:            pyLDAvis: Not installed
2022-11-05 20:03:45,850:INFO:              gensim: Not installed
2022-11-05 20:03:45,850:INFO:               spacy: 3.4.2
2022-11-05 20:03:45,850:INFO:           wordcloud: Not installed
2022-11-05 20:03:45,851:INFO:            textblob: Not installed
2022-11-05 20:03:45,851:INFO:               fugue: Not installed
2022-11-05 20:03:45,851:INFO:           streamlit: Not installed
2022-11-05 20:03:45,851:INFO:             prophet: Not installed
2022-11-05 20:03:45,851:INFO:None
2022-11-05 20:03:45,851:INFO:Set up data.
2022-11-05 20:03:45,866:INFO:Set up train/test split.
2022-11-05 20:03:45,877:INFO:Set up index.
2022-11-05 20:03:45,877:INFO:Set up folding strategy.
2022-11-05 20:03:45,877:INFO:Assigning column types.
2022-11-05 20:03:45,881:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 20:03:45,882:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 20:03:45,889:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:03:45,896:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,060:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,144:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,151:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,159:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,330:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 20:03:46,338:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,345:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,523:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,530:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,702:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 20:03:46,718:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:46,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:46,926:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,026:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,100:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,102:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 20:03:47,215:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,401:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,492:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 20:03:47,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,802:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:03:47,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:47,882:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 20:03:48,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:48,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:48,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:48,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:48,260:INFO:Preparing preprocessing pipeline...
2022-11-05 20:03:48,261:INFO:Set up simple imputation.
2022-11-05 20:03:48,267:INFO:Set up encoding of categorical features.
2022-11-05 20:03:48,267:INFO:Set up variance threshold.
2022-11-05 20:03:48,911:INFO:Finished creating preprocessing pipeline.
2022-11-05 20:03:48,922:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 20:03:48,922:INFO:Creating final display dataframe.
2022-11-05 20:03:51,062:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 5)
4           Train data shape        (10124, 5)
5            Test data shape         (4340, 5)
6           Numeric features                 1
7       Categorical features                 3
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              f1a8
2022-11-05 20:03:51,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:51,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:51,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:51,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:03:51,454:INFO:setup() successfully completed in 5.62s...............
2022-11-05 20:03:51,488:INFO:Initializing compare_models()
2022-11-05 20:03:51,489:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 20:03:51,489:INFO:Checking exceptions
2022-11-05 20:03:51,493:INFO:Preparing display monitor
2022-11-05 20:03:51,542:INFO:Initializing Linear Regression
2022-11-05 20:03:51,542:INFO:Total runtime is 5.30083974202474e-06 minutes
2022-11-05 20:03:51,547:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:51,547:INFO:Initializing create_model()
2022-11-05 20:03:51,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:51,548:INFO:Checking exceptions
2022-11-05 20:03:51,554:INFO:Importing libraries
2022-11-05 20:03:51,554:INFO:Copying training dataset
2022-11-05 20:03:51,560:INFO:Defining folds
2022-11-05 20:03:51,560:INFO:Declaring metric variables
2022-11-05 20:03:51,565:INFO:Importing untrained model
2022-11-05 20:03:51,569:INFO:Linear Regression Imported successfully
2022-11-05 20:03:51,578:INFO:Cross validation set to False
2022-11-05 20:03:51,578:INFO:Fitting Model
2022-11-05 20:03:52,171:INFO:Initializing predict_model()
2022-11-05 20:03:52,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a0a8f70>)
2022-11-05 20:03:52,171:INFO:Checking exceptions
2022-11-05 20:03:52,171:INFO:Preloading libraries
2022-11-05 20:03:52,746:INFO:display_container: 2
2022-11-05 20:03:52,748:INFO:LinearRegression(n_jobs=-1)
2022-11-05 20:03:52,748:INFO:create_model() successfully completed......................................
2022-11-05 20:03:53,109:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:53,109:INFO:Creating metrics dataframe
2022-11-05 20:03:53,124:INFO:Initializing Lasso Regression
2022-11-05 20:03:53,124:INFO:Total runtime is 0.026376767953236898 minutes
2022-11-05 20:03:53,129:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:53,129:INFO:Initializing create_model()
2022-11-05 20:03:53,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:53,130:INFO:Checking exceptions
2022-11-05 20:03:53,134:INFO:Importing libraries
2022-11-05 20:03:53,134:INFO:Copying training dataset
2022-11-05 20:03:53,139:INFO:Defining folds
2022-11-05 20:03:53,140:INFO:Declaring metric variables
2022-11-05 20:03:53,145:INFO:Importing untrained model
2022-11-05 20:03:53,150:INFO:Lasso Regression Imported successfully
2022-11-05 20:03:53,156:INFO:Cross validation set to False
2022-11-05 20:03:53,156:INFO:Fitting Model
2022-11-05 20:03:53,351:INFO:Initializing predict_model()
2022-11-05 20:03:53,351:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979160>)
2022-11-05 20:03:53,351:INFO:Checking exceptions
2022-11-05 20:03:53,351:INFO:Preloading libraries
2022-11-05 20:03:53,794:INFO:display_container: 2
2022-11-05 20:03:53,796:INFO:Lasso(random_state=23)
2022-11-05 20:03:53,796:INFO:create_model() successfully completed......................................
2022-11-05 20:03:54,103:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:54,103:INFO:Creating metrics dataframe
2022-11-05 20:03:54,116:INFO:Initializing Ridge Regression
2022-11-05 20:03:54,116:INFO:Total runtime is 0.042905569076538086 minutes
2022-11-05 20:03:54,120:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:54,121:INFO:Initializing create_model()
2022-11-05 20:03:54,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:54,121:INFO:Checking exceptions
2022-11-05 20:03:54,125:INFO:Importing libraries
2022-11-05 20:03:54,126:INFO:Copying training dataset
2022-11-05 20:03:54,131:INFO:Defining folds
2022-11-05 20:03:54,132:INFO:Declaring metric variables
2022-11-05 20:03:54,138:INFO:Importing untrained model
2022-11-05 20:03:54,146:INFO:Ridge Regression Imported successfully
2022-11-05 20:03:54,155:INFO:Cross validation set to False
2022-11-05 20:03:54,155:INFO:Fitting Model
2022-11-05 20:03:54,342:INFO:Initializing predict_model()
2022-11-05 20:03:54,342:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979b80>)
2022-11-05 20:03:54,342:INFO:Checking exceptions
2022-11-05 20:03:54,342:INFO:Preloading libraries
2022-11-05 20:03:54,782:INFO:display_container: 2
2022-11-05 20:03:54,784:INFO:Ridge(random_state=23)
2022-11-05 20:03:54,784:INFO:create_model() successfully completed......................................
2022-11-05 20:03:55,086:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:55,086:INFO:Creating metrics dataframe
2022-11-05 20:03:55,100:INFO:Initializing Elastic Net
2022-11-05 20:03:55,100:INFO:Total runtime is 0.05930823485056559 minutes
2022-11-05 20:03:55,104:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:55,105:INFO:Initializing create_model()
2022-11-05 20:03:55,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:55,105:INFO:Checking exceptions
2022-11-05 20:03:55,109:INFO:Importing libraries
2022-11-05 20:03:55,109:INFO:Copying training dataset
2022-11-05 20:03:55,115:INFO:Defining folds
2022-11-05 20:03:55,116:INFO:Declaring metric variables
2022-11-05 20:03:55,120:INFO:Importing untrained model
2022-11-05 20:03:55,127:INFO:Elastic Net Imported successfully
2022-11-05 20:03:55,134:INFO:Cross validation set to False
2022-11-05 20:03:55,134:INFO:Fitting Model
2022-11-05 20:03:55,352:INFO:Initializing predict_model()
2022-11-05 20:03:55,352:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979a60>)
2022-11-05 20:03:55,352:INFO:Checking exceptions
2022-11-05 20:03:55,352:INFO:Preloading libraries
2022-11-05 20:03:55,793:INFO:display_container: 2
2022-11-05 20:03:55,795:INFO:ElasticNet(random_state=23)
2022-11-05 20:03:55,795:INFO:create_model() successfully completed......................................
2022-11-05 20:03:56,094:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:56,094:INFO:Creating metrics dataframe
2022-11-05 20:03:56,108:INFO:Initializing Least Angle Regression
2022-11-05 20:03:56,108:INFO:Total runtime is 0.07611469825108846 minutes
2022-11-05 20:03:56,114:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:56,115:INFO:Initializing create_model()
2022-11-05 20:03:56,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:56,115:INFO:Checking exceptions
2022-11-05 20:03:56,118:INFO:Importing libraries
2022-11-05 20:03:56,118:INFO:Copying training dataset
2022-11-05 20:03:56,124:INFO:Defining folds
2022-11-05 20:03:56,124:INFO:Declaring metric variables
2022-11-05 20:03:56,131:INFO:Importing untrained model
2022-11-05 20:03:56,135:INFO:Least Angle Regression Imported successfully
2022-11-05 20:03:56,142:INFO:Cross validation set to False
2022-11-05 20:03:56,142:INFO:Fitting Model
2022-11-05 20:03:56,332:INFO:Initializing predict_model()
2022-11-05 20:03:56,332:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979790>)
2022-11-05 20:03:56,332:INFO:Checking exceptions
2022-11-05 20:03:56,332:INFO:Preloading libraries
2022-11-05 20:03:56,767:INFO:display_container: 2
2022-11-05 20:03:56,769:INFO:Lars(random_state=23)
2022-11-05 20:03:56,769:INFO:create_model() successfully completed......................................
2022-11-05 20:03:57,067:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:57,067:INFO:Creating metrics dataframe
2022-11-05 20:03:57,081:INFO:Initializing Lasso Least Angle Regression
2022-11-05 20:03:57,082:INFO:Total runtime is 0.0923321008682251 minutes
2022-11-05 20:03:57,086:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:57,086:INFO:Initializing create_model()
2022-11-05 20:03:57,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:57,087:INFO:Checking exceptions
2022-11-05 20:03:57,090:INFO:Importing libraries
2022-11-05 20:03:57,091:INFO:Copying training dataset
2022-11-05 20:03:57,096:INFO:Defining folds
2022-11-05 20:03:57,096:INFO:Declaring metric variables
2022-11-05 20:03:57,101:INFO:Importing untrained model
2022-11-05 20:03:57,107:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 20:03:57,113:INFO:Cross validation set to False
2022-11-05 20:03:57,113:INFO:Fitting Model
2022-11-05 20:03:57,304:INFO:Initializing predict_model()
2022-11-05 20:03:57,304:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979700>)
2022-11-05 20:03:57,304:INFO:Checking exceptions
2022-11-05 20:03:57,304:INFO:Preloading libraries
2022-11-05 20:03:57,739:INFO:display_container: 2
2022-11-05 20:03:57,741:INFO:LassoLars(random_state=23)
2022-11-05 20:03:57,741:INFO:create_model() successfully completed......................................
2022-11-05 20:03:58,035:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:58,035:INFO:Creating metrics dataframe
2022-11-05 20:03:58,051:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 20:03:58,051:INFO:Total runtime is 0.10848965247472128 minutes
2022-11-05 20:03:58,056:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:58,056:INFO:Initializing create_model()
2022-11-05 20:03:58,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:58,057:INFO:Checking exceptions
2022-11-05 20:03:58,060:INFO:Importing libraries
2022-11-05 20:03:58,060:INFO:Copying training dataset
2022-11-05 20:03:58,067:INFO:Defining folds
2022-11-05 20:03:58,067:INFO:Declaring metric variables
2022-11-05 20:03:58,072:INFO:Importing untrained model
2022-11-05 20:03:58,077:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 20:03:58,083:INFO:Cross validation set to False
2022-11-05 20:03:58,083:INFO:Fitting Model
2022-11-05 20:03:58,274:INFO:Initializing predict_model()
2022-11-05 20:03:58,274:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979c10>)
2022-11-05 20:03:58,274:INFO:Checking exceptions
2022-11-05 20:03:58,274:INFO:Preloading libraries
2022-11-05 20:03:58,708:INFO:display_container: 2
2022-11-05 20:03:58,710:INFO:OrthogonalMatchingPursuit()
2022-11-05 20:03:58,710:INFO:create_model() successfully completed......................................
2022-11-05 20:03:59,005:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:59,006:INFO:Creating metrics dataframe
2022-11-05 20:03:59,021:INFO:Initializing Bayesian Ridge
2022-11-05 20:03:59,022:INFO:Total runtime is 0.1246666193008423 minutes
2022-11-05 20:03:59,026:INFO:SubProcess create_model() called ==================================
2022-11-05 20:03:59,027:INFO:Initializing create_model()
2022-11-05 20:03:59,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:03:59,027:INFO:Checking exceptions
2022-11-05 20:03:59,031:INFO:Importing libraries
2022-11-05 20:03:59,031:INFO:Copying training dataset
2022-11-05 20:03:59,037:INFO:Defining folds
2022-11-05 20:03:59,037:INFO:Declaring metric variables
2022-11-05 20:03:59,042:INFO:Importing untrained model
2022-11-05 20:03:59,049:INFO:Bayesian Ridge Imported successfully
2022-11-05 20:03:59,056:INFO:Cross validation set to False
2022-11-05 20:03:59,057:INFO:Fitting Model
2022-11-05 20:03:59,248:INFO:Initializing predict_model()
2022-11-05 20:03:59,248:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979d30>)
2022-11-05 20:03:59,249:INFO:Checking exceptions
2022-11-05 20:03:59,249:INFO:Preloading libraries
2022-11-05 20:03:59,688:INFO:display_container: 2
2022-11-05 20:03:59,690:INFO:BayesianRidge()
2022-11-05 20:03:59,691:INFO:create_model() successfully completed......................................
2022-11-05 20:03:59,989:INFO:SubProcess create_model() end ==================================
2022-11-05 20:03:59,989:INFO:Creating metrics dataframe
2022-11-05 20:04:00,004:INFO:Initializing Passive Aggressive Regressor
2022-11-05 20:04:00,005:INFO:Total runtime is 0.14105000098546347 minutes
2022-11-05 20:04:00,009:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:00,010:INFO:Initializing create_model()
2022-11-05 20:04:00,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:00,010:INFO:Checking exceptions
2022-11-05 20:04:00,014:INFO:Importing libraries
2022-11-05 20:04:00,014:INFO:Copying training dataset
2022-11-05 20:04:00,021:INFO:Defining folds
2022-11-05 20:04:00,021:INFO:Declaring metric variables
2022-11-05 20:04:00,025:INFO:Importing untrained model
2022-11-05 20:04:00,030:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 20:04:00,037:INFO:Cross validation set to False
2022-11-05 20:04:00,037:INFO:Fitting Model
2022-11-05 20:04:00,237:INFO:Initializing predict_model()
2022-11-05 20:04:00,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant')))...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979dc0>)
2022-11-05 20:04:00,237:INFO:Checking exceptions
2022-11-05 20:04:00,237:INFO:Preloading libraries
2022-11-05 20:04:00,680:INFO:display_container: 2
2022-11-05 20:04:00,682:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 20:04:00,682:INFO:create_model() successfully completed......................................
2022-11-05 20:04:00,979:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:00,980:INFO:Creating metrics dataframe
2022-11-05 20:04:00,995:INFO:Initializing Huber Regressor
2022-11-05 20:04:00,996:INFO:Total runtime is 0.15756693283716838 minutes
2022-11-05 20:04:01,000:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:01,001:INFO:Initializing create_model()
2022-11-05 20:04:01,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:01,001:INFO:Checking exceptions
2022-11-05 20:04:01,005:INFO:Importing libraries
2022-11-05 20:04:01,005:INFO:Copying training dataset
2022-11-05 20:04:01,010:INFO:Defining folds
2022-11-05 20:04:01,011:INFO:Declaring metric variables
2022-11-05 20:04:01,016:INFO:Importing untrained model
2022-11-05 20:04:01,022:INFO:Huber Regressor Imported successfully
2022-11-05 20:04:01,027:INFO:Cross validation set to False
2022-11-05 20:04:01,027:INFO:Fitting Model
2022-11-05 20:04:01,324:INFO:Initializing predict_model()
2022-11-05 20:04:01,324:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979f70>)
2022-11-05 20:04:01,324:INFO:Checking exceptions
2022-11-05 20:04:01,324:INFO:Preloading libraries
2022-11-05 20:04:01,787:INFO:display_container: 2
2022-11-05 20:04:01,789:INFO:HuberRegressor()
2022-11-05 20:04:01,789:INFO:create_model() successfully completed......................................
2022-11-05 20:04:02,091:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:02,091:INFO:Creating metrics dataframe
2022-11-05 20:04:02,108:INFO:Initializing K Neighbors Regressor
2022-11-05 20:04:02,108:INFO:Total runtime is 0.176112433274587 minutes
2022-11-05 20:04:02,113:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:02,114:INFO:Initializing create_model()
2022-11-05 20:04:02,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:02,114:INFO:Checking exceptions
2022-11-05 20:04:02,118:INFO:Importing libraries
2022-11-05 20:04:02,118:INFO:Copying training dataset
2022-11-05 20:04:02,124:INFO:Defining folds
2022-11-05 20:04:02,124:INFO:Declaring metric variables
2022-11-05 20:04:02,129:INFO:Importing untrained model
2022-11-05 20:04:02,133:INFO:K Neighbors Regressor Imported successfully
2022-11-05 20:04:02,140:INFO:Cross validation set to False
2022-11-05 20:04:02,140:INFO:Fitting Model
2022-11-05 20:04:02,353:INFO:Initializing predict_model()
2022-11-05 20:04:02,354:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a979ca0>)
2022-11-05 20:04:02,354:INFO:Checking exceptions
2022-11-05 20:04:02,354:INFO:Preloading libraries
2022-11-05 20:04:02,808:INFO:display_container: 2
2022-11-05 20:04:02,809:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 20:04:02,809:INFO:create_model() successfully completed......................................
2022-11-05 20:04:03,113:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:03,113:INFO:Creating metrics dataframe
2022-11-05 20:04:03,129:INFO:Initializing Decision Tree Regressor
2022-11-05 20:04:03,129:INFO:Total runtime is 0.19313019911448162 minutes
2022-11-05 20:04:03,134:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:03,134:INFO:Initializing create_model()
2022-11-05 20:04:03,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:03,135:INFO:Checking exceptions
2022-11-05 20:04:03,139:INFO:Importing libraries
2022-11-05 20:04:03,139:INFO:Copying training dataset
2022-11-05 20:04:03,144:INFO:Defining folds
2022-11-05 20:04:03,145:INFO:Declaring metric variables
2022-11-05 20:04:03,149:INFO:Importing untrained model
2022-11-05 20:04:03,154:INFO:Decision Tree Regressor Imported successfully
2022-11-05 20:04:03,161:INFO:Cross validation set to False
2022-11-05 20:04:03,161:INFO:Fitting Model
2022-11-05 20:04:03,399:INFO:Initializing predict_model()
2022-11-05 20:04:03,399:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant')))...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a9799d0>)
2022-11-05 20:04:03,399:INFO:Checking exceptions
2022-11-05 20:04:03,399:INFO:Preloading libraries
2022-11-05 20:04:03,832:INFO:display_container: 2
2022-11-05 20:04:03,834:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 20:04:03,834:INFO:create_model() successfully completed......................................
2022-11-05 20:04:04,137:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:04,138:INFO:Creating metrics dataframe
2022-11-05 20:04:04,154:INFO:Initializing Random Forest Regressor
2022-11-05 20:04:04,154:INFO:Total runtime is 0.2102137843767802 minutes
2022-11-05 20:04:04,159:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:04,160:INFO:Initializing create_model()
2022-11-05 20:04:04,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:04,160:INFO:Checking exceptions
2022-11-05 20:04:04,164:INFO:Importing libraries
2022-11-05 20:04:04,164:INFO:Copying training dataset
2022-11-05 20:04:04,170:INFO:Defining folds
2022-11-05 20:04:04,170:INFO:Declaring metric variables
2022-11-05 20:04:04,175:INFO:Importing untrained model
2022-11-05 20:04:04,180:INFO:Random Forest Regressor Imported successfully
2022-11-05 20:04:04,186:INFO:Cross validation set to False
2022-11-05 20:04:04,186:INFO:Fitting Model
2022-11-05 20:04:05,428:INFO:Initializing predict_model()
2022-11-05 20:04:05,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant')))...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a9799d0>)
2022-11-05 20:04:05,428:INFO:Checking exceptions
2022-11-05 20:04:05,428:INFO:Preloading libraries
2022-11-05 20:04:05,895:INFO:display_container: 2
2022-11-05 20:04:05,897:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 20:04:05,898:INFO:create_model() successfully completed......................................
2022-11-05 20:04:06,254:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:06,255:INFO:Creating metrics dataframe
2022-11-05 20:04:06,273:INFO:Initializing Extra Trees Regressor
2022-11-05 20:04:06,273:INFO:Total runtime is 0.24553132057189941 minutes
2022-11-05 20:04:06,279:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:06,279:INFO:Initializing create_model()
2022-11-05 20:04:06,279:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:06,279:INFO:Checking exceptions
2022-11-05 20:04:06,283:INFO:Importing libraries
2022-11-05 20:04:06,283:INFO:Copying training dataset
2022-11-05 20:04:06,289:INFO:Defining folds
2022-11-05 20:04:06,290:INFO:Declaring metric variables
2022-11-05 20:04:06,295:INFO:Importing untrained model
2022-11-05 20:04:06,300:INFO:Extra Trees Regressor Imported successfully
2022-11-05 20:04:06,327:INFO:Cross validation set to False
2022-11-05 20:04:06,328:INFO:Fitting Model
2022-11-05 20:04:07,024:INFO:Initializing predict_model()
2022-11-05 20:04:07,024:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant')))...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211ca0>)
2022-11-05 20:04:07,025:INFO:Checking exceptions
2022-11-05 20:04:07,025:INFO:Preloading libraries
2022-11-05 20:04:07,510:INFO:display_container: 2
2022-11-05 20:04:07,512:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 20:04:07,512:INFO:create_model() successfully completed......................................
2022-11-05 20:04:07,806:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:07,806:INFO:Creating metrics dataframe
2022-11-05 20:04:07,824:INFO:Initializing AdaBoost Regressor
2022-11-05 20:04:07,824:INFO:Total runtime is 0.2713720003763835 minutes
2022-11-05 20:04:07,829:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:07,829:INFO:Initializing create_model()
2022-11-05 20:04:07,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:07,830:INFO:Checking exceptions
2022-11-05 20:04:07,833:INFO:Importing libraries
2022-11-05 20:04:07,833:INFO:Copying training dataset
2022-11-05 20:04:07,838:INFO:Defining folds
2022-11-05 20:04:07,839:INFO:Declaring metric variables
2022-11-05 20:04:07,844:INFO:Importing untrained model
2022-11-05 20:04:07,848:INFO:AdaBoost Regressor Imported successfully
2022-11-05 20:04:07,854:INFO:Cross validation set to False
2022-11-05 20:04:07,854:INFO:Fitting Model
2022-11-05 20:04:08,184:INFO:Initializing predict_model()
2022-11-05 20:04:08,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant')))...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211ca0>)
2022-11-05 20:04:08,185:INFO:Checking exceptions
2022-11-05 20:04:08,185:INFO:Preloading libraries
2022-11-05 20:04:08,633:INFO:display_container: 2
2022-11-05 20:04:08,635:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 20:04:08,635:INFO:create_model() successfully completed......................................
2022-11-05 20:04:08,941:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:08,942:INFO:Creating metrics dataframe
2022-11-05 20:04:08,962:INFO:Initializing Gradient Boosting Regressor
2022-11-05 20:04:08,963:INFO:Total runtime is 0.29035153388977053 minutes
2022-11-05 20:04:08,967:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:08,968:INFO:Initializing create_model()
2022-11-05 20:04:08,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:08,968:INFO:Checking exceptions
2022-11-05 20:04:08,972:INFO:Importing libraries
2022-11-05 20:04:08,972:INFO:Copying training dataset
2022-11-05 20:04:08,978:INFO:Defining folds
2022-11-05 20:04:08,979:INFO:Declaring metric variables
2022-11-05 20:04:08,984:INFO:Importing untrained model
2022-11-05 20:04:08,989:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 20:04:08,995:INFO:Cross validation set to False
2022-11-05 20:04:08,996:INFO:Fitting Model
2022-11-05 20:04:10,180:INFO:Initializing predict_model()
2022-11-05 20:04:10,180:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant')))...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211ca0>)
2022-11-05 20:04:10,180:INFO:Checking exceptions
2022-11-05 20:04:10,180:INFO:Preloading libraries
2022-11-05 20:04:10,650:INFO:display_container: 2
2022-11-05 20:04:10,651:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 20:04:10,651:INFO:create_model() successfully completed......................................
2022-11-05 20:04:10,958:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:10,958:INFO:Creating metrics dataframe
2022-11-05 20:04:10,976:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 20:04:10,976:INFO:Total runtime is 0.32390883366266887 minutes
2022-11-05 20:04:10,981:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:10,982:INFO:Initializing create_model()
2022-11-05 20:04:10,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:10,982:INFO:Checking exceptions
2022-11-05 20:04:10,986:INFO:Importing libraries
2022-11-05 20:04:10,986:INFO:Copying training dataset
2022-11-05 20:04:10,992:INFO:Defining folds
2022-11-05 20:04:10,992:INFO:Declaring metric variables
2022-11-05 20:04:10,997:INFO:Importing untrained model
2022-11-05 20:04:11,002:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 20:04:11,009:INFO:Cross validation set to False
2022-11-05 20:04:11,009:INFO:Fitting Model
2022-11-05 20:04:11,315:INFO:Initializing predict_model()
2022-11-05 20:04:11,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211d30>)
2022-11-05 20:04:11,316:INFO:Checking exceptions
2022-11-05 20:04:11,316:INFO:Preloading libraries
2022-11-05 20:04:11,801:INFO:display_container: 2
2022-11-05 20:04:11,803:INFO:LGBMRegressor(random_state=23)
2022-11-05 20:04:11,803:INFO:create_model() successfully completed......................................
2022-11-05 20:04:12,110:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:12,110:INFO:Creating metrics dataframe
2022-11-05 20:04:12,128:INFO:Initializing Dummy Regressor
2022-11-05 20:04:12,129:INFO:Total runtime is 0.3431174675623576 minutes
2022-11-05 20:04:12,134:INFO:SubProcess create_model() called ==================================
2022-11-05 20:04:12,134:INFO:Initializing create_model()
2022-11-05 20:04:12,134:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x14a0cfc70>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:12,134:INFO:Checking exceptions
2022-11-05 20:04:12,138:INFO:Importing libraries
2022-11-05 20:04:12,138:INFO:Copying training dataset
2022-11-05 20:04:12,143:INFO:Defining folds
2022-11-05 20:04:12,144:INFO:Declaring metric variables
2022-11-05 20:04:12,150:INFO:Importing untrained model
2022-11-05 20:04:12,155:INFO:Dummy Regressor Imported successfully
2022-11-05 20:04:12,161:INFO:Cross validation set to False
2022-11-05 20:04:12,161:INFO:Fitting Model
2022-11-05 20:04:12,351:INFO:Initializing predict_model()
2022-11-05 20:04:12,351:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x144211e50>)
2022-11-05 20:04:12,351:INFO:Checking exceptions
2022-11-05 20:04:12,351:INFO:Preloading libraries
2022-11-05 20:04:12,784:INFO:display_container: 2
2022-11-05 20:04:12,785:INFO:DummyRegressor()
2022-11-05 20:04:12,786:INFO:create_model() successfully completed......................................
2022-11-05 20:04:13,075:INFO:SubProcess create_model() end ==================================
2022-11-05 20:04:13,075:INFO:Creating metrics dataframe
2022-11-05 20:04:13,108:INFO:Initializing create_model()
2022-11-05 20:04:13,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:04:13,108:INFO:Checking exceptions
2022-11-05 20:04:13,115:INFO:Importing libraries
2022-11-05 20:04:13,115:INFO:Copying training dataset
2022-11-05 20:04:13,120:INFO:Defining folds
2022-11-05 20:04:13,120:INFO:Declaring metric variables
2022-11-05 20:04:13,120:INFO:Importing untrained model
2022-11-05 20:04:13,120:INFO:Declaring custom model
2022-11-05 20:04:13,120:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 20:04:13,122:INFO:Cross validation set to False
2022-11-05 20:04:13,122:INFO:Fitting Model
2022-11-05 20:04:13,295:INFO:OrthogonalMatchingPursuit()
2022-11-05 20:04:13,295:INFO:create_model() successfully completed......................................
2022-11-05 20:04:13,640:INFO:master_model_container: 0
2022-11-05 20:04:13,641:INFO:display_container: 2
2022-11-05 20:04:13,641:INFO:OrthogonalMatchingPursuit()
2022-11-05 20:04:13,641:INFO:compare_models() successfully completed......................................
2022-11-05 20:04:33,203:INFO:Initializing create_model()
2022-11-05 20:04:33,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-05 20:04:33,204:INFO:Checking exceptions
2022-11-05 20:04:33,259:INFO:Importing libraries
2022-11-05 20:04:33,259:INFO:Copying training dataset
2022-11-05 20:04:33,269:INFO:Defining folds
2022-11-05 20:04:33,269:INFO:Declaring metric variables
2022-11-05 20:04:33,274:INFO:Importing untrained model
2022-11-05 20:04:33,282:INFO:Linear Regression Imported successfully
2022-11-05 20:04:33,297:INFO:Starting cross validation
2022-11-05 20:04:33,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 20:04:45,504:WARNING:/Users/javierdaza/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2022-11-05 20:04:45,574:WARNING:/Users/javierdaza/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2022-11-05 20:04:45,578:WARNING:/Users/javierdaza/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2022-11-05 20:04:45,674:WARNING:/Users/javierdaza/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py:246: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2022-11-05 20:04:50,944:INFO:Calculating mean and std
2022-11-05 20:04:50,951:INFO:Creating metrics dataframe
2022-11-05 20:04:50,964:INFO:Finalizing model
2022-11-05 20:04:51,164:INFO:Initializing predict_model()
2022-11-05 20:04:51,164:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x148eddf70>)
2022-11-05 20:04:51,164:INFO:Checking exceptions
2022-11-05 20:04:51,165:INFO:Preloading libraries
2022-11-05 20:04:51,165:INFO:Set up data.
2022-11-05 20:04:51,171:INFO:Set up index.
2022-11-05 20:04:52,125:INFO:Uploading results into container
2022-11-05 20:04:52,126:INFO:Uploading model into container now
2022-11-05 20:04:52,145:INFO:master_model_container: 1
2022-11-05 20:04:52,145:INFO:display_container: 3
2022-11-05 20:04:52,146:INFO:LinearRegression(n_jobs=-1)
2022-11-05 20:04:52,146:INFO:create_model() successfully completed......................................
2022-11-05 20:04:52,500:INFO:Initializing plot_model()
2022-11-05 20:04:52,500:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, system=True)
2022-11-05 20:04:52,500:INFO:Checking exceptions
2022-11-05 20:04:52,507:INFO:Preloading libraries
2022-11-05 20:04:52,507:INFO:Copying training dataset
2022-11-05 20:04:52,507:INFO:Plot type: residuals
2022-11-05 20:04:53,048:INFO:Fitting Model
2022-11-05 20:04:53,111:INFO:Scoring test/hold-out set
2022-11-05 20:04:53,940:INFO:Visual Rendered Successfully
2022-11-05 20:04:54,301:INFO:plot_model() successfully completed......................................
2022-11-05 20:04:54,508:INFO:Initializing plot_model()
2022-11-05 20:04:54,508:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, system=True)
2022-11-05 20:04:54,508:INFO:Checking exceptions
2022-11-05 20:04:54,519:INFO:Preloading libraries
2022-11-05 20:04:54,519:INFO:Copying training dataset
2022-11-05 20:04:54,519:INFO:Plot type: error
2022-11-05 20:04:55,065:INFO:Fitting Model
2022-11-05 20:04:55,066:INFO:Scoring test/hold-out set
2022-11-05 20:04:55,554:INFO:Visual Rendered Successfully
2022-11-05 20:04:55,863:INFO:plot_model() successfully completed......................................
2022-11-05 20:04:56,155:INFO:Initializing plot_model()
2022-11-05 20:04:56,156:INFO:plot_model(plot=rfe, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, system=True)
2022-11-05 20:04:56,157:INFO:Checking exceptions
2022-11-05 20:04:56,163:INFO:Preloading libraries
2022-11-05 20:04:56,164:INFO:Copying training dataset
2022-11-05 20:04:56,164:INFO:Plot type: rfe
2022-11-05 20:04:56,692:INFO:Fitting Model
2022-11-05 20:04:57,439:INFO:Visual Rendered Successfully
2022-11-05 20:04:57,742:INFO:plot_model() successfully completed......................................
2022-11-05 20:04:57,893:INFO:Initializing plot_model()
2022-11-05 20:04:57,893:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x14a09d520>, system=True)
2022-11-05 20:04:57,893:INFO:Checking exceptions
2022-11-05 20:04:57,903:INFO:Preloading libraries
2022-11-05 20:04:57,903:INFO:Copying training dataset
2022-11-05 20:04:57,903:INFO:Plot type: feature
2022-11-05 20:04:58,553:INFO:Visual Rendered Successfully
2022-11-05 20:04:58,893:INFO:plot_model() successfully completed......................................
2022-11-05 20:13:01,449:INFO:PyCaret RegressionExperiment
2022-11-05 20:13:01,449:INFO:Logging name: reg-default-name
2022-11-05 20:13:01,449:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-05 20:13:01,449:INFO:version 3.0.0.rc4
2022-11-05 20:13:01,449:INFO:Initializing setup()
2022-11-05 20:13:01,450:INFO:self.USI: cefb
2022-11-05 20:13:01,450:INFO:self.variable_keys: {'X_train', 'y', 'n_jobs_param', 'log_plots_param', 'transform_target_method_param', 'seed', 'USI', '_all_metrics', 'y_test', 'variable_keys', 'y_train', 'exp_name_log', 'X', '_gpu_n_jobs_param', '_all_models_internal', 'fold_shuffle_param', 'transform_target_param', '_all_models', 'logging_param', 'display_container', '_ml_usecase', 'exp_id', 'fold_generator', 'memory', 'X_test', '_available_plots', 'data', 'pipeline', 'target_param', 'html_param', 'master_model_container', 'fold_groups_param', 'gpu_param', 'idx'}
2022-11-05 20:13:01,450:INFO:Checking environment
2022-11-05 20:13:01,450:INFO:python_version: 3.9.6
2022-11-05 20:13:01,450:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-05 20:13:01,450:INFO:machine: x86_64
2022-11-05 20:13:01,450:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-05 20:13:01,450:INFO:Memory: svmem(total=17179869184, available=6410424320, percent=62.7, used=8644583424, free=165052416, active=6246649856, inactive=6200238080, wired=2397933568)
2022-11-05 20:13:01,451:INFO:Physical Core: 4
2022-11-05 20:13:01,451:INFO:Logical Core: 4
2022-11-05 20:13:01,451:INFO:Checking libraries
2022-11-05 20:13:01,451:INFO:System:
2022-11-05 20:13:01,451:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-05 20:13:01,451:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-05 20:13:01,451:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-05 20:13:01,451:INFO:PyCaret required dependencies:
2022-11-05 20:13:01,451:INFO:                 pip: 21.2.4
2022-11-05 20:13:01,452:INFO:          setuptools: 58.0.4
2022-11-05 20:13:01,452:INFO:             pycaret: 3.0.0rc4
2022-11-05 20:13:01,452:INFO:             IPython: 8.6.0
2022-11-05 20:13:01,452:INFO:          ipywidgets: 8.0.2
2022-11-05 20:13:01,452:INFO:                tqdm: 4.64.1
2022-11-05 20:13:01,452:INFO:               numpy: 1.22.4
2022-11-05 20:13:01,452:INFO:              pandas: 1.4.4
2022-11-05 20:13:01,452:INFO:              jinja2: 3.1.2
2022-11-05 20:13:01,452:INFO:               scipy: 1.8.1
2022-11-05 20:13:01,453:INFO:              joblib: 1.2.0
2022-11-05 20:13:01,453:INFO:             sklearn: 1.1.3
2022-11-05 20:13:01,453:INFO:                pyod: 1.0.6
2022-11-05 20:13:01,453:INFO:            imblearn: 0.9.1
2022-11-05 20:13:01,453:INFO:   category_encoders: 2.5.1.post0
2022-11-05 20:13:01,453:INFO:            lightgbm: 3.3.3
2022-11-05 20:13:01,453:INFO:               numba: 0.55.2
2022-11-05 20:13:01,453:INFO:            requests: 2.28.1
2022-11-05 20:13:01,453:INFO:          matplotlib: 3.6.2
2022-11-05 20:13:01,453:INFO:          scikitplot: 0.3.7
2022-11-05 20:13:01,453:INFO:         yellowbrick: 1.5
2022-11-05 20:13:01,454:INFO:              plotly: 5.11.0
2022-11-05 20:13:01,454:INFO:             kaleido: 0.2.1
2022-11-05 20:13:01,454:INFO:         statsmodels: 0.13.5
2022-11-05 20:13:01,454:INFO:              sktime: 0.13.4
2022-11-05 20:13:01,454:INFO:               tbats: 1.1.1
2022-11-05 20:13:01,454:INFO:            pmdarima: 1.8.5
2022-11-05 20:13:01,454:INFO:              psutil: 5.9.3
2022-11-05 20:13:01,454:INFO:PyCaret optional dependencies:
2022-11-05 20:13:01,454:INFO:                shap: Not installed
2022-11-05 20:13:01,455:INFO:           interpret: Not installed
2022-11-05 20:13:01,455:INFO:                umap: Not installed
2022-11-05 20:13:01,455:INFO:    pandas_profiling: Not installed
2022-11-05 20:13:01,455:INFO:  explainerdashboard: Not installed
2022-11-05 20:13:01,455:INFO:             autoviz: Not installed
2022-11-05 20:13:01,455:INFO:           fairlearn: Not installed
2022-11-05 20:13:01,455:INFO:             xgboost: Not installed
2022-11-05 20:13:01,456:INFO:            catboost: Not installed
2022-11-05 20:13:01,456:INFO:              kmodes: Not installed
2022-11-05 20:13:01,456:INFO:             mlxtend: Not installed
2022-11-05 20:13:01,456:INFO:       statsforecast: Not installed
2022-11-05 20:13:01,456:INFO:        tune_sklearn: Not installed
2022-11-05 20:13:01,456:INFO:                 ray: Not installed
2022-11-05 20:13:01,456:INFO:            hyperopt: Not installed
2022-11-05 20:13:01,456:INFO:              optuna: Not installed
2022-11-05 20:13:01,456:INFO:               skopt: Not installed
2022-11-05 20:13:01,456:INFO:              mlflow: Not installed
2022-11-05 20:13:01,456:INFO:              gradio: Not installed
2022-11-05 20:13:01,456:INFO:             fastapi: Not installed
2022-11-05 20:13:01,456:INFO:             uvicorn: Not installed
2022-11-05 20:13:01,456:INFO:              m2cgen: Not installed
2022-11-05 20:13:01,456:INFO:           evidently: Not installed
2022-11-05 20:13:01,456:INFO:                nltk: Not installed
2022-11-05 20:13:01,456:INFO:            pyLDAvis: Not installed
2022-11-05 20:13:01,457:INFO:              gensim: Not installed
2022-11-05 20:13:01,457:INFO:               spacy: 3.4.2
2022-11-05 20:13:01,457:INFO:           wordcloud: Not installed
2022-11-05 20:13:01,457:INFO:            textblob: Not installed
2022-11-05 20:13:01,458:INFO:               fugue: Not installed
2022-11-05 20:13:01,458:INFO:           streamlit: Not installed
2022-11-05 20:13:01,458:INFO:             prophet: Not installed
2022-11-05 20:13:01,458:INFO:None
2022-11-05 20:13:01,458:INFO:Set up data.
2022-11-05 20:13:01,491:INFO:Set up train/test split.
2022-11-05 20:13:01,503:INFO:Set up index.
2022-11-05 20:13:01,504:INFO:Set up folding strategy.
2022-11-05 20:13:01,504:INFO:Assigning column types.
2022-11-05 20:13:01,510:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 20:13:01,511:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,520:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,528:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,660:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:01,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:01,766:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,774:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,786:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,972:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:01,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:01,973:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-05 20:13:01,981:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:13:01,989:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,178:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,186:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,466:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-05 20:13:02,491:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,907:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:02,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:02,989:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-05 20:13:03,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:03,185:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:03,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,324:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:03,422:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 20:13:03,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,423:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 20:13:03,539:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:03,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-05 20:13:03,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:03,835:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-05 20:13:04,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:04,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:04,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:04,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:04,240:INFO:Preparing preprocessing pipeline...
2022-11-05 20:13:04,241:INFO:Set up simple imputation.
2022-11-05 20:13:04,247:INFO:Set up encoding of ordinal features.
2022-11-05 20:13:04,249:INFO:Set up encoding of categorical features.
2022-11-05 20:13:04,249:INFO:Set up variance threshold.
2022-11-05 20:13:06,067:INFO:Finished creating preprocessing pipeline.
2022-11-05 20:13:06,091:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                ('rest_encoding',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-05 20:13:06,091:INFO:Creating final display dataframe.
2022-11-05 20:13:11,785:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape       (14464, 10)
4           Train data shape       (10124, 10)
5            Test data shape        (4340, 10)
6           Ordinal features                 1
7           Numeric features                 3
8       Categorical features                 6
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              cefb
2022-11-05 20:13:12,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:12,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:12,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:12,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 20:13:12,218:INFO:setup() successfully completed in 10.77s...............
2022-11-05 20:13:12,259:INFO:Initializing compare_models()
2022-11-05 20:13:12,259:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-05 20:13:12,259:INFO:Checking exceptions
2022-11-05 20:13:12,264:INFO:Preparing display monitor
2022-11-05 20:13:12,333:INFO:Initializing Linear Regression
2022-11-05 20:13:12,333:INFO:Total runtime is 4.2478243509928385e-06 minutes
2022-11-05 20:13:12,337:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:12,338:INFO:Initializing create_model()
2022-11-05 20:13:12,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:12,338:INFO:Checking exceptions
2022-11-05 20:13:12,342:INFO:Importing libraries
2022-11-05 20:13:12,342:INFO:Copying training dataset
2022-11-05 20:13:12,355:INFO:Defining folds
2022-11-05 20:13:12,355:INFO:Declaring metric variables
2022-11-05 20:13:12,364:INFO:Importing untrained model
2022-11-05 20:13:12,369:INFO:Linear Regression Imported successfully
2022-11-05 20:13:12,390:INFO:Cross validation set to False
2022-11-05 20:13:12,390:INFO:Fitting Model
2022-11-05 20:13:13,819:INFO:Initializing predict_model()
2022-11-05 20:13:13,820:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14aece160>)
2022-11-05 20:13:13,820:INFO:Checking exceptions
2022-11-05 20:13:13,820:INFO:Preloading libraries
2022-11-05 20:13:14,607:INFO:display_container: 2
2022-11-05 20:13:14,609:INFO:LinearRegression(n_jobs=-1)
2022-11-05 20:13:14,609:INFO:create_model() successfully completed......................................
2022-11-05 20:13:14,950:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:14,950:INFO:Creating metrics dataframe
2022-11-05 20:13:14,963:INFO:Initializing Lasso Regression
2022-11-05 20:13:14,963:INFO:Total runtime is 0.04384769996007284 minutes
2022-11-05 20:13:14,968:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:14,968:INFO:Initializing create_model()
2022-11-05 20:13:14,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:14,969:INFO:Checking exceptions
2022-11-05 20:13:14,973:INFO:Importing libraries
2022-11-05 20:13:14,973:INFO:Copying training dataset
2022-11-05 20:13:14,983:INFO:Defining folds
2022-11-05 20:13:14,983:INFO:Declaring metric variables
2022-11-05 20:13:14,989:INFO:Importing untrained model
2022-11-05 20:13:15,034:INFO:Lasso Regression Imported successfully
2022-11-05 20:13:15,054:INFO:Cross validation set to False
2022-11-05 20:13:15,054:INFO:Fitting Model
2022-11-05 20:13:15,674:INFO:Initializing predict_model()
2022-11-05 20:13:15,674:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14210fca0>)
2022-11-05 20:13:15,674:INFO:Checking exceptions
2022-11-05 20:13:15,675:INFO:Preloading libraries
2022-11-05 20:13:16,338:INFO:display_container: 2
2022-11-05 20:13:16,340:INFO:Lasso(random_state=23)
2022-11-05 20:13:16,341:INFO:create_model() successfully completed......................................
2022-11-05 20:13:16,679:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:16,679:INFO:Creating metrics dataframe
2022-11-05 20:13:16,704:INFO:Initializing Ridge Regression
2022-11-05 20:13:16,704:INFO:Total runtime is 0.07285845279693604 minutes
2022-11-05 20:13:16,710:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:16,710:INFO:Initializing create_model()
2022-11-05 20:13:16,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:16,711:INFO:Checking exceptions
2022-11-05 20:13:16,719:INFO:Importing libraries
2022-11-05 20:13:16,719:INFO:Copying training dataset
2022-11-05 20:13:16,728:INFO:Defining folds
2022-11-05 20:13:16,733:INFO:Declaring metric variables
2022-11-05 20:13:16,740:INFO:Importing untrained model
2022-11-05 20:13:16,758:INFO:Ridge Regression Imported successfully
2022-11-05 20:13:16,773:INFO:Cross validation set to False
2022-11-05 20:13:16,774:INFO:Fitting Model
2022-11-05 20:13:17,400:INFO:Initializing predict_model()
2022-11-05 20:13:17,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14210fca0>)
2022-11-05 20:13:17,400:INFO:Checking exceptions
2022-11-05 20:13:17,401:INFO:Preloading libraries
2022-11-05 20:13:18,063:INFO:display_container: 2
2022-11-05 20:13:18,065:INFO:Ridge(random_state=23)
2022-11-05 20:13:18,065:INFO:create_model() successfully completed......................................
2022-11-05 20:13:18,405:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:18,405:INFO:Creating metrics dataframe
2022-11-05 20:13:18,421:INFO:Initializing Elastic Net
2022-11-05 20:13:18,422:INFO:Total runtime is 0.10148514906565348 minutes
2022-11-05 20:13:18,426:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:18,427:INFO:Initializing create_model()
2022-11-05 20:13:18,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:18,427:INFO:Checking exceptions
2022-11-05 20:13:18,431:INFO:Importing libraries
2022-11-05 20:13:18,432:INFO:Copying training dataset
2022-11-05 20:13:18,439:INFO:Defining folds
2022-11-05 20:13:18,526:INFO:Declaring metric variables
2022-11-05 20:13:18,640:INFO:Importing untrained model
2022-11-05 20:13:18,645:INFO:Elastic Net Imported successfully
2022-11-05 20:13:18,657:INFO:Cross validation set to False
2022-11-05 20:13:18,657:INFO:Fitting Model
2022-11-05 20:13:19,253:INFO:Initializing predict_model()
2022-11-05 20:13:19,253:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14210faf0>)
2022-11-05 20:13:19,253:INFO:Checking exceptions
2022-11-05 20:13:19,253:INFO:Preloading libraries
2022-11-05 20:13:20,157:INFO:display_container: 2
2022-11-05 20:13:20,159:INFO:ElasticNet(random_state=23)
2022-11-05 20:13:20,159:INFO:create_model() successfully completed......................................
2022-11-05 20:13:20,498:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:20,498:INFO:Creating metrics dataframe
2022-11-05 20:13:20,514:INFO:Initializing Least Angle Regression
2022-11-05 20:13:20,514:INFO:Total runtime is 0.13635568618774413 minutes
2022-11-05 20:13:20,522:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:20,522:INFO:Initializing create_model()
2022-11-05 20:13:20,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:20,522:INFO:Checking exceptions
2022-11-05 20:13:20,526:INFO:Importing libraries
2022-11-05 20:13:20,526:INFO:Copying training dataset
2022-11-05 20:13:20,533:INFO:Defining folds
2022-11-05 20:13:20,533:INFO:Declaring metric variables
2022-11-05 20:13:20,543:INFO:Importing untrained model
2022-11-05 20:13:20,549:INFO:Least Angle Regression Imported successfully
2022-11-05 20:13:20,562:INFO:Cross validation set to False
2022-11-05 20:13:20,563:INFO:Fitting Model
2022-11-05 20:13:21,256:INFO:Initializing predict_model()
2022-11-05 20:13:21,256:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141efed30>)
2022-11-05 20:13:21,256:INFO:Checking exceptions
2022-11-05 20:13:21,256:INFO:Preloading libraries
2022-11-05 20:13:21,940:INFO:display_container: 2
2022-11-05 20:13:21,942:INFO:Lars(random_state=23)
2022-11-05 20:13:21,942:INFO:create_model() successfully completed......................................
2022-11-05 20:13:22,282:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:22,282:INFO:Creating metrics dataframe
2022-11-05 20:13:22,306:INFO:Initializing Lasso Least Angle Regression
2022-11-05 20:13:22,306:INFO:Total runtime is 0.16623108386993407 minutes
2022-11-05 20:13:22,313:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:22,313:INFO:Initializing create_model()
2022-11-05 20:13:22,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:22,314:INFO:Checking exceptions
2022-11-05 20:13:22,324:INFO:Importing libraries
2022-11-05 20:13:22,325:INFO:Copying training dataset
2022-11-05 20:13:22,366:INFO:Defining folds
2022-11-05 20:13:22,367:INFO:Declaring metric variables
2022-11-05 20:13:22,382:INFO:Importing untrained model
2022-11-05 20:13:22,396:INFO:Lasso Least Angle Regression Imported successfully
2022-11-05 20:13:22,414:INFO:Cross validation set to False
2022-11-05 20:13:22,414:INFO:Fitting Model
2022-11-05 20:13:23,017:INFO:Initializing predict_model()
2022-11-05 20:13:23,017:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d4c0>)
2022-11-05 20:13:23,017:INFO:Checking exceptions
2022-11-05 20:13:23,017:INFO:Preloading libraries
2022-11-05 20:13:23,675:INFO:display_container: 2
2022-11-05 20:13:23,677:INFO:LassoLars(random_state=23)
2022-11-05 20:13:23,677:INFO:create_model() successfully completed......................................
2022-11-05 20:13:24,018:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:24,018:INFO:Creating metrics dataframe
2022-11-05 20:13:24,034:INFO:Initializing Orthogonal Matching Pursuit
2022-11-05 20:13:24,035:INFO:Total runtime is 0.19503511587778727 minutes
2022-11-05 20:13:24,044:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:24,044:INFO:Initializing create_model()
2022-11-05 20:13:24,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:24,045:INFO:Checking exceptions
2022-11-05 20:13:24,048:INFO:Importing libraries
2022-11-05 20:13:24,049:INFO:Copying training dataset
2022-11-05 20:13:24,060:INFO:Defining folds
2022-11-05 20:13:24,061:INFO:Declaring metric variables
2022-11-05 20:13:24,066:INFO:Importing untrained model
2022-11-05 20:13:24,074:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-05 20:13:24,081:INFO:Cross validation set to False
2022-11-05 20:13:24,081:INFO:Fitting Model
2022-11-05 20:13:24,711:INFO:Initializing predict_model()
2022-11-05 20:13:24,711:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x141efed30>)
2022-11-05 20:13:24,711:INFO:Checking exceptions
2022-11-05 20:13:24,711:INFO:Preloading libraries
2022-11-05 20:13:25,621:INFO:display_container: 2
2022-11-05 20:13:25,624:INFO:OrthogonalMatchingPursuit()
2022-11-05 20:13:25,624:INFO:create_model() successfully completed......................................
2022-11-05 20:13:25,986:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:25,986:INFO:Creating metrics dataframe
2022-11-05 20:13:26,003:INFO:Initializing Bayesian Ridge
2022-11-05 20:13:26,003:INFO:Total runtime is 0.22784781455993652 minutes
2022-11-05 20:13:26,013:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:26,013:INFO:Initializing create_model()
2022-11-05 20:13:26,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:26,014:INFO:Checking exceptions
2022-11-05 20:13:26,019:INFO:Importing libraries
2022-11-05 20:13:26,019:INFO:Copying training dataset
2022-11-05 20:13:26,031:INFO:Defining folds
2022-11-05 20:13:26,031:INFO:Declaring metric variables
2022-11-05 20:13:26,036:INFO:Importing untrained model
2022-11-05 20:13:26,054:INFO:Bayesian Ridge Imported successfully
2022-11-05 20:13:26,067:INFO:Cross validation set to False
2022-11-05 20:13:26,067:INFO:Fitting Model
2022-11-05 20:13:26,665:INFO:Initializing predict_model()
2022-11-05 20:13:26,666:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14addad30>)
2022-11-05 20:13:26,666:INFO:Checking exceptions
2022-11-05 20:13:26,666:INFO:Preloading libraries
2022-11-05 20:13:27,374:INFO:display_container: 2
2022-11-05 20:13:27,380:INFO:BayesianRidge()
2022-11-05 20:13:27,380:INFO:create_model() successfully completed......................................
2022-11-05 20:13:27,733:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:27,733:INFO:Creating metrics dataframe
2022-11-05 20:13:27,761:INFO:Initializing Passive Aggressive Regressor
2022-11-05 20:13:27,761:INFO:Total runtime is 0.2571430683135986 minutes
2022-11-05 20:13:27,766:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:27,766:INFO:Initializing create_model()
2022-11-05 20:13:27,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:27,767:INFO:Checking exceptions
2022-11-05 20:13:27,770:INFO:Importing libraries
2022-11-05 20:13:27,771:INFO:Copying training dataset
2022-11-05 20:13:27,779:INFO:Defining folds
2022-11-05 20:13:27,779:INFO:Declaring metric variables
2022-11-05 20:13:27,785:INFO:Importing untrained model
2022-11-05 20:13:28,022:INFO:Passive Aggressive Regressor Imported successfully
2022-11-05 20:13:28,068:INFO:Cross validation set to False
2022-11-05 20:13:28,069:INFO:Fitting Model
2022-11-05 20:13:28,717:INFO:Initializing predict_model()
2022-11-05 20:13:28,717:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14addaf70>)
2022-11-05 20:13:28,717:INFO:Checking exceptions
2022-11-05 20:13:28,717:INFO:Preloading libraries
2022-11-05 20:13:29,360:INFO:display_container: 2
2022-11-05 20:13:29,364:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-05 20:13:29,365:INFO:create_model() successfully completed......................................
2022-11-05 20:13:29,716:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:29,716:INFO:Creating metrics dataframe
2022-11-05 20:13:29,737:INFO:Initializing Huber Regressor
2022-11-05 20:13:29,737:INFO:Total runtime is 0.2900776346524556 minutes
2022-11-05 20:13:29,755:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:29,756:INFO:Initializing create_model()
2022-11-05 20:13:29,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:29,756:INFO:Checking exceptions
2022-11-05 20:13:29,770:INFO:Importing libraries
2022-11-05 20:13:29,770:INFO:Copying training dataset
2022-11-05 20:13:29,793:INFO:Defining folds
2022-11-05 20:13:29,796:INFO:Declaring metric variables
2022-11-05 20:13:29,808:INFO:Importing untrained model
2022-11-05 20:13:29,818:INFO:Huber Regressor Imported successfully
2022-11-05 20:13:29,834:INFO:Cross validation set to False
2022-11-05 20:13:29,835:INFO:Fitting Model
2022-11-05 20:13:30,533:INFO:Initializing predict_model()
2022-11-05 20:13:30,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a08b8b0>)
2022-11-05 20:13:30,533:INFO:Checking exceptions
2022-11-05 20:13:30,533:INFO:Preloading libraries
2022-11-05 20:13:31,212:INFO:display_container: 2
2022-11-05 20:13:31,215:INFO:HuberRegressor()
2022-11-05 20:13:31,215:INFO:create_model() successfully completed......................................
2022-11-05 20:13:31,534:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:31,534:INFO:Creating metrics dataframe
2022-11-05 20:13:31,552:INFO:Initializing K Neighbors Regressor
2022-11-05 20:13:31,552:INFO:Total runtime is 0.32032101949055986 minutes
2022-11-05 20:13:31,557:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:31,557:INFO:Initializing create_model()
2022-11-05 20:13:31,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:31,557:INFO:Checking exceptions
2022-11-05 20:13:31,561:INFO:Importing libraries
2022-11-05 20:13:31,561:INFO:Copying training dataset
2022-11-05 20:13:31,569:INFO:Defining folds
2022-11-05 20:13:31,569:INFO:Declaring metric variables
2022-11-05 20:13:31,574:INFO:Importing untrained model
2022-11-05 20:13:31,617:INFO:K Neighbors Regressor Imported successfully
2022-11-05 20:13:31,651:INFO:Cross validation set to False
2022-11-05 20:13:31,652:INFO:Fitting Model
2022-11-05 20:13:32,269:INFO:Initializing predict_model()
2022-11-05 20:13:32,269:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a071700>)
2022-11-05 20:13:32,270:INFO:Checking exceptions
2022-11-05 20:13:32,270:INFO:Preloading libraries
2022-11-05 20:13:32,988:INFO:display_container: 2
2022-11-05 20:13:32,990:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-05 20:13:32,991:INFO:create_model() successfully completed......................................
2022-11-05 20:13:33,307:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:33,307:INFO:Creating metrics dataframe
2022-11-05 20:13:33,324:INFO:Initializing Decision Tree Regressor
2022-11-05 20:13:33,325:INFO:Total runtime is 0.349868631362915 minutes
2022-11-05 20:13:33,329:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:33,330:INFO:Initializing create_model()
2022-11-05 20:13:33,330:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:33,330:INFO:Checking exceptions
2022-11-05 20:13:33,337:INFO:Importing libraries
2022-11-05 20:13:33,338:INFO:Copying training dataset
2022-11-05 20:13:33,362:INFO:Defining folds
2022-11-05 20:13:33,362:INFO:Declaring metric variables
2022-11-05 20:13:33,422:INFO:Importing untrained model
2022-11-05 20:13:33,430:INFO:Decision Tree Regressor Imported successfully
2022-11-05 20:13:33,440:INFO:Cross validation set to False
2022-11-05 20:13:33,440:INFO:Fitting Model
2022-11-05 20:13:34,246:INFO:Initializing predict_model()
2022-11-05 20:13:34,246:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a05aaf0>)
2022-11-05 20:13:34,246:INFO:Checking exceptions
2022-11-05 20:13:34,246:INFO:Preloading libraries
2022-11-05 20:13:34,922:INFO:display_container: 2
2022-11-05 20:13:34,924:INFO:DecisionTreeRegressor(random_state=23)
2022-11-05 20:13:34,925:INFO:create_model() successfully completed......................................
2022-11-05 20:13:35,278:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:35,278:INFO:Creating metrics dataframe
2022-11-05 20:13:35,298:INFO:Initializing Random Forest Regressor
2022-11-05 20:13:35,298:INFO:Total runtime is 0.3827553351720174 minutes
2022-11-05 20:13:35,305:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:35,305:INFO:Initializing create_model()
2022-11-05 20:13:35,305:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:35,306:INFO:Checking exceptions
2022-11-05 20:13:35,310:INFO:Importing libraries
2022-11-05 20:13:35,310:INFO:Copying training dataset
2022-11-05 20:13:35,318:INFO:Defining folds
2022-11-05 20:13:35,318:INFO:Declaring metric variables
2022-11-05 20:13:35,324:INFO:Importing untrained model
2022-11-05 20:13:35,329:INFO:Random Forest Regressor Imported successfully
2022-11-05 20:13:35,347:INFO:Cross validation set to False
2022-11-05 20:13:35,347:INFO:Fitting Model
2022-11-05 20:13:38,704:INFO:Initializing predict_model()
2022-11-05 20:13:38,704:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a071790>)
2022-11-05 20:13:38,704:INFO:Checking exceptions
2022-11-05 20:13:38,704:INFO:Preloading libraries
2022-11-05 20:13:39,428:INFO:display_container: 2
2022-11-05 20:13:39,430:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-05 20:13:39,431:INFO:create_model() successfully completed......................................
2022-11-05 20:13:39,877:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:39,878:INFO:Creating metrics dataframe
2022-11-05 20:13:39,897:INFO:Initializing Extra Trees Regressor
2022-11-05 20:13:39,898:INFO:Total runtime is 0.459419850508372 minutes
2022-11-05 20:13:39,902:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:39,903:INFO:Initializing create_model()
2022-11-05 20:13:39,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:39,903:INFO:Checking exceptions
2022-11-05 20:13:39,909:INFO:Importing libraries
2022-11-05 20:13:39,909:INFO:Copying training dataset
2022-11-05 20:13:39,916:INFO:Defining folds
2022-11-05 20:13:39,917:INFO:Declaring metric variables
2022-11-05 20:13:39,921:INFO:Importing untrained model
2022-11-05 20:13:39,927:INFO:Extra Trees Regressor Imported successfully
2022-11-05 20:13:39,933:INFO:Cross validation set to False
2022-11-05 20:13:39,933:INFO:Fitting Model
2022-11-05 20:13:42,082:INFO:Initializing predict_model()
2022-11-05 20:13:42,082:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a0a29d0>)
2022-11-05 20:13:42,083:INFO:Checking exceptions
2022-11-05 20:13:42,083:INFO:Preloading libraries
2022-11-05 20:13:42,804:INFO:display_container: 2
2022-11-05 20:13:42,806:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-05 20:13:42,807:INFO:create_model() successfully completed......................................
2022-11-05 20:13:43,178:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:43,178:INFO:Creating metrics dataframe
2022-11-05 20:13:43,198:INFO:Initializing AdaBoost Regressor
2022-11-05 20:13:43,198:INFO:Total runtime is 0.514422583580017 minutes
2022-11-05 20:13:43,203:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:43,203:INFO:Initializing create_model()
2022-11-05 20:13:43,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:43,204:INFO:Checking exceptions
2022-11-05 20:13:43,208:INFO:Importing libraries
2022-11-05 20:13:43,208:INFO:Copying training dataset
2022-11-05 20:13:43,215:INFO:Defining folds
2022-11-05 20:13:43,216:INFO:Declaring metric variables
2022-11-05 20:13:43,221:INFO:Importing untrained model
2022-11-05 20:13:43,228:INFO:AdaBoost Regressor Imported successfully
2022-11-05 20:13:43,234:INFO:Cross validation set to False
2022-11-05 20:13:43,235:INFO:Fitting Model
2022-11-05 20:13:44,589:INFO:Initializing predict_model()
2022-11-05 20:13:44,590:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a09fb80>)
2022-11-05 20:13:44,590:INFO:Checking exceptions
2022-11-05 20:13:44,590:INFO:Preloading libraries
2022-11-05 20:13:45,381:INFO:display_container: 2
2022-11-05 20:13:45,386:INFO:AdaBoostRegressor(random_state=23)
2022-11-05 20:13:45,386:INFO:create_model() successfully completed......................................
2022-11-05 20:13:45,762:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:45,762:INFO:Creating metrics dataframe
2022-11-05 20:13:45,784:INFO:Initializing Gradient Boosting Regressor
2022-11-05 20:13:45,784:INFO:Total runtime is 0.5575263500213622 minutes
2022-11-05 20:13:45,789:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:45,789:INFO:Initializing create_model()
2022-11-05 20:13:45,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:45,790:INFO:Checking exceptions
2022-11-05 20:13:45,794:INFO:Importing libraries
2022-11-05 20:13:45,794:INFO:Copying training dataset
2022-11-05 20:13:45,803:INFO:Defining folds
2022-11-05 20:13:45,803:INFO:Declaring metric variables
2022-11-05 20:13:45,809:INFO:Importing untrained model
2022-11-05 20:13:45,817:INFO:Gradient Boosting Regressor Imported successfully
2022-11-05 20:13:45,823:INFO:Cross validation set to False
2022-11-05 20:13:45,824:INFO:Fitting Model
2022-11-05 20:13:48,481:INFO:Initializing predict_model()
2022-11-05 20:13:48,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a05caf0>)
2022-11-05 20:13:48,482:INFO:Checking exceptions
2022-11-05 20:13:48,483:INFO:Preloading libraries
2022-11-05 20:13:49,227:INFO:display_container: 2
2022-11-05 20:13:49,229:INFO:GradientBoostingRegressor(random_state=23)
2022-11-05 20:13:49,229:INFO:create_model() successfully completed......................................
2022-11-05 20:13:49,857:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:49,857:INFO:Creating metrics dataframe
2022-11-05 20:13:49,909:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 20:13:49,909:INFO:Total runtime is 0.6262765169143676 minutes
2022-11-05 20:13:49,915:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:49,915:INFO:Initializing create_model()
2022-11-05 20:13:49,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:49,915:INFO:Checking exceptions
2022-11-05 20:13:49,930:INFO:Importing libraries
2022-11-05 20:13:49,930:INFO:Copying training dataset
2022-11-05 20:13:49,941:INFO:Defining folds
2022-11-05 20:13:49,941:INFO:Declaring metric variables
2022-11-05 20:13:49,947:INFO:Importing untrained model
2022-11-05 20:13:49,956:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 20:13:49,963:INFO:Cross validation set to False
2022-11-05 20:13:49,963:INFO:Fitting Model
2022-11-05 20:13:52,557:INFO:Initializing predict_model()
2022-11-05 20:13:52,558:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14a0a44c0>)
2022-11-05 20:13:52,558:INFO:Checking exceptions
2022-11-05 20:13:52,558:INFO:Preloading libraries
2022-11-05 20:13:53,274:INFO:display_container: 2
2022-11-05 20:13:53,276:INFO:LGBMRegressor(random_state=23)
2022-11-05 20:13:53,276:INFO:create_model() successfully completed......................................
2022-11-05 20:13:53,619:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:53,619:INFO:Creating metrics dataframe
2022-11-05 20:13:53,642:INFO:Initializing Dummy Regressor
2022-11-05 20:13:53,642:INFO:Total runtime is 0.6884957989056905 minutes
2022-11-05 20:13:53,647:INFO:SubProcess create_model() called ==================================
2022-11-05 20:13:53,647:INFO:Initializing create_model()
2022-11-05 20:13:53,647:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x144330b20>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:53,648:INFO:Checking exceptions
2022-11-05 20:13:53,652:INFO:Importing libraries
2022-11-05 20:13:53,652:INFO:Copying training dataset
2022-11-05 20:13:53,660:INFO:Defining folds
2022-11-05 20:13:53,660:INFO:Declaring metric variables
2022-11-05 20:13:53,666:INFO:Importing untrained model
2022-11-05 20:13:53,675:INFO:Dummy Regressor Imported successfully
2022-11-05 20:13:53,690:INFO:Cross validation set to False
2022-11-05 20:13:53,691:INFO:Fitting Model
2022-11-05 20:13:54,364:INFO:Initializing predict_model()
2022-11-05 20:13:54,366:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x149c76c10>)
2022-11-05 20:13:54,366:INFO:Checking exceptions
2022-11-05 20:13:54,367:INFO:Preloading libraries
2022-11-05 20:13:55,169:INFO:display_container: 2
2022-11-05 20:13:55,173:INFO:DummyRegressor()
2022-11-05 20:13:55,174:INFO:create_model() successfully completed......................................
2022-11-05 20:13:55,549:INFO:SubProcess create_model() end ==================================
2022-11-05 20:13:55,550:INFO:Creating metrics dataframe
2022-11-05 20:13:55,585:INFO:Initializing create_model()
2022-11-05 20:13:55,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Lasso(random_state=23), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 20:13:55,586:INFO:Checking exceptions
2022-11-05 20:13:55,595:INFO:Importing libraries
2022-11-05 20:13:55,595:INFO:Copying training dataset
2022-11-05 20:13:55,600:INFO:Defining folds
2022-11-05 20:13:55,600:INFO:Declaring metric variables
2022-11-05 20:13:55,600:INFO:Importing untrained model
2022-11-05 20:13:55,601:INFO:Declaring custom model
2022-11-05 20:13:55,601:INFO:Lasso Regression Imported successfully
2022-11-05 20:13:55,603:INFO:Cross validation set to False
2022-11-05 20:13:55,603:INFO:Fitting Model
2022-11-05 20:13:56,272:INFO:Lasso(random_state=23)
2022-11-05 20:13:56,273:INFO:create_model() successfully completed......................................
2022-11-05 20:13:56,740:INFO:master_model_container: 0
2022-11-05 20:13:56,740:INFO:display_container: 2
2022-11-05 20:13:56,741:INFO:Lasso(random_state=23)
2022-11-05 20:13:56,741:INFO:compare_models() successfully completed......................................
2022-11-05 20:13:57,285:INFO:Initializing create_model()
2022-11-05 20:13:57,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-05 20:13:57,286:INFO:Checking exceptions
2022-11-05 20:13:57,353:INFO:Importing libraries
2022-11-05 20:13:57,353:INFO:Copying training dataset
2022-11-05 20:13:57,364:INFO:Defining folds
2022-11-05 20:13:57,364:INFO:Declaring metric variables
2022-11-05 20:13:57,370:INFO:Importing untrained model
2022-11-05 20:13:57,380:INFO:Linear Regression Imported successfully
2022-11-05 20:13:57,397:INFO:Starting cross validation
2022-11-05 20:13:57,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 20:14:29,435:INFO:Calculating mean and std
2022-11-05 20:14:29,441:INFO:Creating metrics dataframe
2022-11-05 20:14:29,455:INFO:Finalizing model
2022-11-05 20:14:30,324:INFO:Initializing predict_model()
2022-11-05 20:14:30,325:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['stock', 'week_of_year',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'month', 'day_name'],
                                    transfo...
                 TransformerWrapper(include=['storeReference', 'macroCategory',
                                             'category', 'day_of_month',
                                             'day_name'],
                                    transformer=LeaveOneOutEncoder(cols=['storeReference',
                                                                         'macroCategory',
                                                                         'category',
                                                                         'day_of_month',
                                                                         'day_name'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x14417d8b0>)
2022-11-05 20:14:30,325:INFO:Checking exceptions
2022-11-05 20:14:30,325:INFO:Preloading libraries
2022-11-05 20:14:30,325:INFO:Set up data.
2022-11-05 20:14:30,342:INFO:Set up index.
2022-11-05 20:14:32,901:INFO:Uploading results into container
2022-11-05 20:14:32,902:INFO:Uploading model into container now
2022-11-05 20:14:32,922:INFO:master_model_container: 1
2022-11-05 20:14:32,923:INFO:display_container: 3
2022-11-05 20:14:32,923:INFO:LinearRegression(n_jobs=-1)
2022-11-05 20:14:32,924:INFO:create_model() successfully completed......................................
2022-11-05 20:14:33,427:INFO:Initializing plot_model()
2022-11-05 20:14:33,427:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x1496592e0>, system=True)
2022-11-05 20:14:33,428:INFO:Checking exceptions
2022-11-05 20:14:33,441:INFO:Preloading libraries
2022-11-05 20:14:33,442:INFO:Copying training dataset
2022-11-05 20:14:33,442:INFO:Plot type: feature
2022-11-05 20:14:35,320:INFO:Visual Rendered Successfully
2022-11-05 20:14:35,826:INFO:plot_model() successfully completed......................................
2022-11-07 20:57:09,124:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-07 20:57:09,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-07 20:57:09,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-07 20:57:09,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-07 20:57:11,436:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-11-07 20:57:22,268:INFO:PyCaret RegressionExperiment
2022-11-07 20:57:22,268:INFO:Logging name: reg-default-name
2022-11-07 20:57:22,269:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-07 20:57:22,269:INFO:version 3.0.0.rc4
2022-11-07 20:57:22,269:INFO:Initializing setup()
2022-11-07 20:57:22,269:INFO:self.USI: 442d
2022-11-07 20:57:22,269:INFO:self.variable_keys: {'display_container', 'exp_name_log', 'y_test', 'y', 'logging_param', 'USI', '_available_plots', 'X_train', 'fold_shuffle_param', 'gpu_param', 'X_test', 'data', '_all_models', 'seed', 'master_model_container', 'html_param', '_all_models_internal', 'idx', 'target_param', 'memory', 'n_jobs_param', 'fold_generator', 'transform_target_param', 'pipeline', 'exp_id', '_gpu_n_jobs_param', 'y_train', 'transform_target_method_param', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'X', 'variable_keys', '_all_metrics'}
2022-11-07 20:57:22,269:INFO:Checking environment
2022-11-07 20:57:22,269:INFO:python_version: 3.9.6
2022-11-07 20:57:22,269:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-07 20:57:22,269:INFO:machine: x86_64
2022-11-07 20:57:22,269:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-07 20:57:22,269:INFO:Memory: svmem(total=17179869184, available=7673581568, percent=55.3, used=9503686656, free=90955776, active=7583424512, inactive=7360819200, wired=1920262144)
2022-11-07 20:57:22,270:INFO:Physical Core: 4
2022-11-07 20:57:22,270:INFO:Logical Core: 4
2022-11-07 20:57:22,270:INFO:Checking libraries
2022-11-07 20:57:22,270:INFO:System:
2022-11-07 20:57:22,270:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-07 20:57:22,270:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-07 20:57:22,270:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-07 20:57:22,270:INFO:PyCaret required dependencies:
2022-11-07 20:57:22,270:INFO:                 pip: 21.2.4
2022-11-07 20:57:22,270:INFO:          setuptools: 58.0.4
2022-11-07 20:57:22,270:INFO:             pycaret: 3.0.0rc4
2022-11-07 20:57:22,270:INFO:             IPython: 8.6.0
2022-11-07 20:57:22,270:INFO:          ipywidgets: 8.0.2
2022-11-07 20:57:22,270:INFO:                tqdm: 4.64.1
2022-11-07 20:57:22,270:INFO:               numpy: 1.22.4
2022-11-07 20:57:22,270:INFO:              pandas: 1.4.4
2022-11-07 20:57:22,271:INFO:              jinja2: 3.1.2
2022-11-07 20:57:22,271:INFO:               scipy: 1.8.1
2022-11-07 20:57:22,271:INFO:              joblib: 1.2.0
2022-11-07 20:57:22,271:INFO:             sklearn: 1.1.3
2022-11-07 20:57:22,271:INFO:                pyod: 1.0.6
2022-11-07 20:57:22,271:INFO:            imblearn: 0.9.1
2022-11-07 20:57:22,271:INFO:   category_encoders: 2.5.1.post0
2022-11-07 20:57:22,271:INFO:            lightgbm: 3.3.3
2022-11-07 20:57:22,271:INFO:               numba: 0.55.2
2022-11-07 20:57:22,271:INFO:            requests: 2.28.1
2022-11-07 20:57:22,271:INFO:          matplotlib: 3.6.2
2022-11-07 20:57:22,271:INFO:          scikitplot: 0.3.7
2022-11-07 20:57:22,271:INFO:         yellowbrick: 1.5
2022-11-07 20:57:22,271:INFO:              plotly: 5.11.0
2022-11-07 20:57:22,271:INFO:             kaleido: 0.2.1
2022-11-07 20:57:22,271:INFO:         statsmodels: 0.13.5
2022-11-07 20:57:22,271:INFO:              sktime: 0.13.4
2022-11-07 20:57:22,271:INFO:               tbats: 1.1.1
2022-11-07 20:57:22,271:INFO:            pmdarima: 1.8.5
2022-11-07 20:57:22,271:INFO:              psutil: 5.9.3
2022-11-07 20:57:22,272:INFO:PyCaret optional dependencies:
2022-11-07 20:57:22,279:INFO:                shap: Not installed
2022-11-07 20:57:22,279:INFO:           interpret: Not installed
2022-11-07 20:57:22,280:INFO:                umap: Not installed
2022-11-07 20:57:22,280:INFO:    pandas_profiling: Not installed
2022-11-07 20:57:22,280:INFO:  explainerdashboard: Not installed
2022-11-07 20:57:22,280:INFO:             autoviz: Not installed
2022-11-07 20:57:22,280:INFO:           fairlearn: Not installed
2022-11-07 20:57:22,280:INFO:             xgboost: Not installed
2022-11-07 20:57:22,280:INFO:            catboost: Not installed
2022-11-07 20:57:22,280:INFO:              kmodes: Not installed
2022-11-07 20:57:22,280:INFO:             mlxtend: Not installed
2022-11-07 20:57:22,280:INFO:       statsforecast: Not installed
2022-11-07 20:57:22,280:INFO:        tune_sklearn: Not installed
2022-11-07 20:57:22,280:INFO:                 ray: Not installed
2022-11-07 20:57:22,280:INFO:            hyperopt: Not installed
2022-11-07 20:57:22,280:INFO:              optuna: Not installed
2022-11-07 20:57:22,280:INFO:               skopt: Not installed
2022-11-07 20:57:22,280:INFO:              mlflow: Not installed
2022-11-07 20:57:22,280:INFO:              gradio: Not installed
2022-11-07 20:57:22,280:INFO:             fastapi: Not installed
2022-11-07 20:57:22,280:INFO:             uvicorn: Not installed
2022-11-07 20:57:22,281:INFO:              m2cgen: Not installed
2022-11-07 20:57:22,281:INFO:           evidently: Not installed
2022-11-07 20:57:22,281:INFO:                nltk: Not installed
2022-11-07 20:57:22,281:INFO:            pyLDAvis: Not installed
2022-11-07 20:57:22,281:INFO:              gensim: Not installed
2022-11-07 20:57:22,281:INFO:               spacy: 3.4.2
2022-11-07 20:57:22,281:INFO:           wordcloud: Not installed
2022-11-07 20:57:22,281:INFO:            textblob: Not installed
2022-11-07 20:57:22,281:INFO:               fugue: Not installed
2022-11-07 20:57:22,281:INFO:           streamlit: Not installed
2022-11-07 20:57:22,281:INFO:             prophet: Not installed
2022-11-07 20:57:22,281:INFO:None
2022-11-07 20:57:22,281:INFO:Set up data.
2022-11-07 20:57:22,297:INFO:Set up train/test split.
2022-11-07 20:57:22,310:INFO:Set up index.
2022-11-07 20:57:22,312:INFO:Set up folding strategy.
2022-11-07 20:57:22,312:INFO:Assigning column types.
2022-11-07 20:57:22,320:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-07 20:57:22,320:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,328:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,334:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,437:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:22,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:22,638:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,646:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,653:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 20:57:22,801:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:23,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:23,167:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-07 20:57:23,175:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:23,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:23,452:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,461:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:23,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:23,704:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-07 20:57:23,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 20:57:23,854:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:24,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:24,127:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:24,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:24,515:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-07 20:57:24,675:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,758:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:24,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:24,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,041:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:25,249:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 20:57:25,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,250:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-07 20:57:25,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:25,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 20:57:25,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:25,876:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-07 20:57:26,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:26,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:26,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:26,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:26,307:INFO:Preparing preprocessing pipeline...
2022-11-07 20:57:26,309:INFO:Set up simple imputation.
2022-11-07 20:57:26,325:INFO:Set up encoding of categorical features.
2022-11-07 20:57:26,325:INFO:Set up variance threshold.
2022-11-07 20:57:26,830:INFO:Finished creating preprocessing pipeline.
2022-11-07 20:57:26,847:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-07 20:57:26,847:INFO:Creating final display dataframe.
2022-11-07 20:57:28,474:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 7)
4           Train data shape        (10124, 7)
5            Test data shape         (4340, 7)
6           Numeric features                 5
7       Categorical features                 1
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              442d
2022-11-07 20:57:28,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:28,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:29,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:29,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 20:57:29,295:INFO:setup() successfully completed in 7.03s...............
2022-11-07 20:57:29,537:INFO:Initializing compare_models()
2022-11-07 20:57:29,538:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x137804670>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-07 20:57:29,538:INFO:Checking exceptions
2022-11-07 20:57:29,542:INFO:Preparing display monitor
2022-11-07 20:57:29,680:INFO:Initializing Linear Regression
2022-11-07 20:57:29,681:INFO:Total runtime is 9.242693583170573e-06 minutes
2022-11-07 20:57:29,702:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:29,703:INFO:Initializing create_model()
2022-11-07 20:57:29,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:29,705:INFO:Checking exceptions
2022-11-07 20:57:29,709:INFO:Importing libraries
2022-11-07 20:57:29,710:INFO:Copying training dataset
2022-11-07 20:57:29,720:INFO:Defining folds
2022-11-07 20:57:29,720:INFO:Declaring metric variables
2022-11-07 20:57:29,725:INFO:Importing untrained model
2022-11-07 20:57:29,731:INFO:Linear Regression Imported successfully
2022-11-07 20:57:29,742:INFO:Cross validation set to False
2022-11-07 20:57:29,743:INFO:Fitting Model
2022-11-07 20:57:30,347:INFO:Initializing predict_model()
2022-11-07 20:57:30,347:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x132d82700>)
2022-11-07 20:57:30,347:INFO:Checking exceptions
2022-11-07 20:57:30,347:INFO:Preloading libraries
2022-11-07 20:57:30,753:INFO:display_container: 2
2022-11-07 20:57:30,756:INFO:LinearRegression(n_jobs=-1)
2022-11-07 20:57:30,756:INFO:create_model() successfully completed......................................
2022-11-07 20:57:30,972:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:30,972:INFO:Creating metrics dataframe
2022-11-07 20:57:30,996:INFO:Initializing Lasso Regression
2022-11-07 20:57:30,997:INFO:Total runtime is 0.021943994363149005 minutes
2022-11-07 20:57:31,005:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:31,006:INFO:Initializing create_model()
2022-11-07 20:57:31,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:31,006:INFO:Checking exceptions
2022-11-07 20:57:31,011:INFO:Importing libraries
2022-11-07 20:57:31,011:INFO:Copying training dataset
2022-11-07 20:57:31,047:INFO:Defining folds
2022-11-07 20:57:31,047:INFO:Declaring metric variables
2022-11-07 20:57:31,058:INFO:Importing untrained model
2022-11-07 20:57:31,063:INFO:Lasso Regression Imported successfully
2022-11-07 20:57:31,080:INFO:Cross validation set to False
2022-11-07 20:57:31,080:INFO:Fitting Model
2022-11-07 20:57:31,236:INFO:Initializing predict_model()
2022-11-07 20:57:31,236:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805790>)
2022-11-07 20:57:31,236:INFO:Checking exceptions
2022-11-07 20:57:31,236:INFO:Preloading libraries
2022-11-07 20:57:31,516:INFO:display_container: 2
2022-11-07 20:57:31,524:INFO:Lasso(random_state=23)
2022-11-07 20:57:31,524:INFO:create_model() successfully completed......................................
2022-11-07 20:57:31,660:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:31,661:INFO:Creating metrics dataframe
2022-11-07 20:57:31,676:INFO:Initializing Ridge Regression
2022-11-07 20:57:31,676:INFO:Total runtime is 0.033264680703481035 minutes
2022-11-07 20:57:31,680:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:31,681:INFO:Initializing create_model()
2022-11-07 20:57:31,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:31,681:INFO:Checking exceptions
2022-11-07 20:57:31,684:INFO:Importing libraries
2022-11-07 20:57:31,684:INFO:Copying training dataset
2022-11-07 20:57:31,696:INFO:Defining folds
2022-11-07 20:57:31,696:INFO:Declaring metric variables
2022-11-07 20:57:31,709:INFO:Importing untrained model
2022-11-07 20:57:31,717:INFO:Ridge Regression Imported successfully
2022-11-07 20:57:31,729:INFO:Cross validation set to False
2022-11-07 20:57:31,729:INFO:Fitting Model
2022-11-07 20:57:31,872:INFO:Initializing predict_model()
2022-11-07 20:57:31,873:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384fc1f0>)
2022-11-07 20:57:31,874:INFO:Checking exceptions
2022-11-07 20:57:31,874:INFO:Preloading libraries
2022-11-07 20:57:32,100:INFO:display_container: 2
2022-11-07 20:57:32,115:INFO:Ridge(random_state=23)
2022-11-07 20:57:32,117:INFO:create_model() successfully completed......................................
2022-11-07 20:57:32,269:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:32,269:INFO:Creating metrics dataframe
2022-11-07 20:57:32,289:INFO:Initializing Elastic Net
2022-11-07 20:57:32,290:INFO:Total runtime is 0.04349617958068847 minutes
2022-11-07 20:57:32,295:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:32,295:INFO:Initializing create_model()
2022-11-07 20:57:32,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:32,295:INFO:Checking exceptions
2022-11-07 20:57:32,299:INFO:Importing libraries
2022-11-07 20:57:32,299:INFO:Copying training dataset
2022-11-07 20:57:32,306:INFO:Defining folds
2022-11-07 20:57:32,306:INFO:Declaring metric variables
2022-11-07 20:57:32,314:INFO:Importing untrained model
2022-11-07 20:57:32,332:INFO:Elastic Net Imported successfully
2022-11-07 20:57:32,368:INFO:Cross validation set to False
2022-11-07 20:57:32,368:INFO:Fitting Model
2022-11-07 20:57:32,510:INFO:Initializing predict_model()
2022-11-07 20:57:32,510:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805d30>)
2022-11-07 20:57:32,511:INFO:Checking exceptions
2022-11-07 20:57:32,511:INFO:Preloading libraries
2022-11-07 20:57:32,750:INFO:display_container: 2
2022-11-07 20:57:32,755:INFO:ElasticNet(random_state=23)
2022-11-07 20:57:32,755:INFO:create_model() successfully completed......................................
2022-11-07 20:57:32,914:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:32,914:INFO:Creating metrics dataframe
2022-11-07 20:57:32,930:INFO:Initializing Least Angle Regression
2022-11-07 20:57:32,930:INFO:Total runtime is 0.054171148935953775 minutes
2022-11-07 20:57:32,936:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:32,941:INFO:Initializing create_model()
2022-11-07 20:57:32,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:32,942:INFO:Checking exceptions
2022-11-07 20:57:32,947:INFO:Importing libraries
2022-11-07 20:57:32,947:INFO:Copying training dataset
2022-11-07 20:57:32,958:INFO:Defining folds
2022-11-07 20:57:32,959:INFO:Declaring metric variables
2022-11-07 20:57:32,965:INFO:Importing untrained model
2022-11-07 20:57:32,976:INFO:Least Angle Regression Imported successfully
2022-11-07 20:57:33,009:INFO:Cross validation set to False
2022-11-07 20:57:33,009:INFO:Fitting Model
2022-11-07 20:57:33,168:INFO:Initializing predict_model()
2022-11-07 20:57:33,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805e50>)
2022-11-07 20:57:33,168:INFO:Checking exceptions
2022-11-07 20:57:33,172:INFO:Preloading libraries
2022-11-07 20:57:33,395:INFO:display_container: 2
2022-11-07 20:57:33,397:INFO:Lars(random_state=23)
2022-11-07 20:57:33,398:INFO:create_model() successfully completed......................................
2022-11-07 20:57:33,544:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:33,544:INFO:Creating metrics dataframe
2022-11-07 20:57:33,560:INFO:Initializing Lasso Least Angle Regression
2022-11-07 20:57:33,561:INFO:Total runtime is 0.06467811266581218 minutes
2022-11-07 20:57:33,565:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:33,566:INFO:Initializing create_model()
2022-11-07 20:57:33,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:33,566:INFO:Checking exceptions
2022-11-07 20:57:33,572:INFO:Importing libraries
2022-11-07 20:57:33,572:INFO:Copying training dataset
2022-11-07 20:57:33,579:INFO:Defining folds
2022-11-07 20:57:33,579:INFO:Declaring metric variables
2022-11-07 20:57:33,585:INFO:Importing untrained model
2022-11-07 20:57:33,593:INFO:Lasso Least Angle Regression Imported successfully
2022-11-07 20:57:33,602:INFO:Cross validation set to False
2022-11-07 20:57:33,603:INFO:Fitting Model
2022-11-07 20:57:33,728:INFO:Initializing predict_model()
2022-11-07 20:57:33,728:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x132d82700>)
2022-11-07 20:57:33,728:INFO:Checking exceptions
2022-11-07 20:57:33,729:INFO:Preloading libraries
2022-11-07 20:57:33,949:INFO:display_container: 2
2022-11-07 20:57:33,951:INFO:LassoLars(random_state=23)
2022-11-07 20:57:33,952:INFO:create_model() successfully completed......................................
2022-11-07 20:57:34,083:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:34,083:INFO:Creating metrics dataframe
2022-11-07 20:57:34,099:INFO:Initializing Orthogonal Matching Pursuit
2022-11-07 20:57:34,100:INFO:Total runtime is 0.07365906238555908 minutes
2022-11-07 20:57:34,116:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:34,117:INFO:Initializing create_model()
2022-11-07 20:57:34,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:34,117:INFO:Checking exceptions
2022-11-07 20:57:34,122:INFO:Importing libraries
2022-11-07 20:57:34,122:INFO:Copying training dataset
2022-11-07 20:57:34,131:INFO:Defining folds
2022-11-07 20:57:34,131:INFO:Declaring metric variables
2022-11-07 20:57:34,141:INFO:Importing untrained model
2022-11-07 20:57:34,148:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-07 20:57:34,169:INFO:Cross validation set to False
2022-11-07 20:57:34,172:INFO:Fitting Model
2022-11-07 20:57:34,295:INFO:Initializing predict_model()
2022-11-07 20:57:34,295:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x132d82700>)
2022-11-07 20:57:34,295:INFO:Checking exceptions
2022-11-07 20:57:34,296:INFO:Preloading libraries
2022-11-07 20:57:34,562:INFO:display_container: 2
2022-11-07 20:57:34,564:INFO:OrthogonalMatchingPursuit()
2022-11-07 20:57:34,564:INFO:create_model() successfully completed......................................
2022-11-07 20:57:34,696:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:34,696:INFO:Creating metrics dataframe
2022-11-07 20:57:34,713:INFO:Initializing Bayesian Ridge
2022-11-07 20:57:34,713:INFO:Total runtime is 0.0838892141977946 minutes
2022-11-07 20:57:34,718:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:34,719:INFO:Initializing create_model()
2022-11-07 20:57:34,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:34,719:INFO:Checking exceptions
2022-11-07 20:57:34,723:INFO:Importing libraries
2022-11-07 20:57:34,723:INFO:Copying training dataset
2022-11-07 20:57:34,730:INFO:Defining folds
2022-11-07 20:57:34,730:INFO:Declaring metric variables
2022-11-07 20:57:34,745:INFO:Importing untrained model
2022-11-07 20:57:34,759:INFO:Bayesian Ridge Imported successfully
2022-11-07 20:57:34,782:INFO:Cross validation set to False
2022-11-07 20:57:34,782:INFO:Fitting Model
2022-11-07 20:57:34,915:INFO:Initializing predict_model()
2022-11-07 20:57:34,915:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x133c87f70>)
2022-11-07 20:57:34,915:INFO:Checking exceptions
2022-11-07 20:57:34,915:INFO:Preloading libraries
2022-11-07 20:57:35,151:INFO:display_container: 2
2022-11-07 20:57:35,153:INFO:BayesianRidge()
2022-11-07 20:57:35,153:INFO:create_model() successfully completed......................................
2022-11-07 20:57:35,308:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:35,308:INFO:Creating metrics dataframe
2022-11-07 20:57:35,332:INFO:Initializing Passive Aggressive Regressor
2022-11-07 20:57:35,332:INFO:Total runtime is 0.09420077800750733 minutes
2022-11-07 20:57:35,337:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:35,337:INFO:Initializing create_model()
2022-11-07 20:57:35,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:35,339:INFO:Checking exceptions
2022-11-07 20:57:35,343:INFO:Importing libraries
2022-11-07 20:57:35,343:INFO:Copying training dataset
2022-11-07 20:57:35,352:INFO:Defining folds
2022-11-07 20:57:35,352:INFO:Declaring metric variables
2022-11-07 20:57:35,372:INFO:Importing untrained model
2022-11-07 20:57:35,384:INFO:Passive Aggressive Regressor Imported successfully
2022-11-07 20:57:35,395:INFO:Cross validation set to False
2022-11-07 20:57:35,396:INFO:Fitting Model
2022-11-07 20:57:35,536:INFO:Initializing predict_model()
2022-11-07 20:57:35,537:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384fc040>)
2022-11-07 20:57:35,537:INFO:Checking exceptions
2022-11-07 20:57:35,537:INFO:Preloading libraries
2022-11-07 20:57:35,757:INFO:display_container: 2
2022-11-07 20:57:35,759:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-07 20:57:35,759:INFO:create_model() successfully completed......................................
2022-11-07 20:57:35,916:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:35,916:INFO:Creating metrics dataframe
2022-11-07 20:57:35,934:INFO:Initializing Huber Regressor
2022-11-07 20:57:35,934:INFO:Total runtime is 0.1042333483695984 minutes
2022-11-07 20:57:35,946:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:35,946:INFO:Initializing create_model()
2022-11-07 20:57:35,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:35,947:INFO:Checking exceptions
2022-11-07 20:57:35,950:INFO:Importing libraries
2022-11-07 20:57:35,950:INFO:Copying training dataset
2022-11-07 20:57:35,959:INFO:Defining folds
2022-11-07 20:57:35,959:INFO:Declaring metric variables
2022-11-07 20:57:35,986:INFO:Importing untrained model
2022-11-07 20:57:36,031:INFO:Huber Regressor Imported successfully
2022-11-07 20:57:36,051:INFO:Cross validation set to False
2022-11-07 20:57:36,051:INFO:Fitting Model
2022-11-07 20:57:36,396:INFO:Initializing predict_model()
2022-11-07 20:57:36,396:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805e50>)
2022-11-07 20:57:36,396:INFO:Checking exceptions
2022-11-07 20:57:36,396:INFO:Preloading libraries
2022-11-07 20:57:36,683:INFO:display_container: 2
2022-11-07 20:57:36,686:INFO:HuberRegressor()
2022-11-07 20:57:36,686:INFO:create_model() successfully completed......................................
2022-11-07 20:57:36,821:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:36,821:INFO:Creating metrics dataframe
2022-11-07 20:57:36,965:INFO:Initializing K Neighbors Regressor
2022-11-07 20:57:36,965:INFO:Total runtime is 0.12141521374384563 minutes
2022-11-07 20:57:37,002:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:37,003:INFO:Initializing create_model()
2022-11-07 20:57:37,003:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:37,003:INFO:Checking exceptions
2022-11-07 20:57:37,009:INFO:Importing libraries
2022-11-07 20:57:37,009:INFO:Copying training dataset
2022-11-07 20:57:37,018:INFO:Defining folds
2022-11-07 20:57:37,018:INFO:Declaring metric variables
2022-11-07 20:57:37,031:INFO:Importing untrained model
2022-11-07 20:57:37,036:INFO:K Neighbors Regressor Imported successfully
2022-11-07 20:57:37,044:INFO:Cross validation set to False
2022-11-07 20:57:37,044:INFO:Fitting Model
2022-11-07 20:57:37,253:INFO:Initializing predict_model()
2022-11-07 20:57:37,253:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805e50>)
2022-11-07 20:57:37,253:INFO:Checking exceptions
2022-11-07 20:57:37,253:INFO:Preloading libraries
2022-11-07 20:57:37,600:INFO:display_container: 2
2022-11-07 20:57:37,603:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-07 20:57:37,603:INFO:create_model() successfully completed......................................
2022-11-07 20:57:37,777:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:37,778:INFO:Creating metrics dataframe
2022-11-07 20:57:37,806:INFO:Initializing Decision Tree Regressor
2022-11-07 20:57:37,808:INFO:Total runtime is 0.13547051350275677 minutes
2022-11-07 20:57:37,847:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:37,848:INFO:Initializing create_model()
2022-11-07 20:57:37,848:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:37,848:INFO:Checking exceptions
2022-11-07 20:57:37,852:INFO:Importing libraries
2022-11-07 20:57:37,852:INFO:Copying training dataset
2022-11-07 20:57:37,867:INFO:Defining folds
2022-11-07 20:57:37,867:INFO:Declaring metric variables
2022-11-07 20:57:37,898:INFO:Importing untrained model
2022-11-07 20:57:37,903:INFO:Decision Tree Regressor Imported successfully
2022-11-07 20:57:37,918:INFO:Cross validation set to False
2022-11-07 20:57:37,919:INFO:Fitting Model
2022-11-07 20:57:38,124:INFO:Initializing predict_model()
2022-11-07 20:57:38,124:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805700>)
2022-11-07 20:57:38,124:INFO:Checking exceptions
2022-11-07 20:57:38,124:INFO:Preloading libraries
2022-11-07 20:57:38,416:INFO:display_container: 2
2022-11-07 20:57:38,418:INFO:DecisionTreeRegressor(random_state=23)
2022-11-07 20:57:38,418:INFO:create_model() successfully completed......................................
2022-11-07 20:57:38,582:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:38,582:INFO:Creating metrics dataframe
2022-11-07 20:57:38,601:INFO:Initializing Random Forest Regressor
2022-11-07 20:57:38,601:INFO:Total runtime is 0.1486876130104065 minutes
2022-11-07 20:57:38,606:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:38,606:INFO:Initializing create_model()
2022-11-07 20:57:38,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:38,607:INFO:Checking exceptions
2022-11-07 20:57:38,611:INFO:Importing libraries
2022-11-07 20:57:38,611:INFO:Copying training dataset
2022-11-07 20:57:38,629:INFO:Defining folds
2022-11-07 20:57:38,629:INFO:Declaring metric variables
2022-11-07 20:57:38,637:INFO:Importing untrained model
2022-11-07 20:57:38,653:INFO:Random Forest Regressor Imported successfully
2022-11-07 20:57:38,671:INFO:Cross validation set to False
2022-11-07 20:57:38,672:INFO:Fitting Model
2022-11-07 20:57:40,976:INFO:Initializing predict_model()
2022-11-07 20:57:40,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805dc0>)
2022-11-07 20:57:40,976:INFO:Checking exceptions
2022-11-07 20:57:40,976:INFO:Preloading libraries
2022-11-07 20:57:41,226:INFO:display_container: 2
2022-11-07 20:57:41,234:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 20:57:41,234:INFO:create_model() successfully completed......................................
2022-11-07 20:57:41,352:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:41,352:INFO:Creating metrics dataframe
2022-11-07 20:57:41,383:INFO:Initializing Extra Trees Regressor
2022-11-07 20:57:41,384:INFO:Total runtime is 0.19506986538569132 minutes
2022-11-07 20:57:41,389:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:41,390:INFO:Initializing create_model()
2022-11-07 20:57:41,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:41,390:INFO:Checking exceptions
2022-11-07 20:57:41,394:INFO:Importing libraries
2022-11-07 20:57:41,394:INFO:Copying training dataset
2022-11-07 20:57:41,456:INFO:Defining folds
2022-11-07 20:57:41,457:INFO:Declaring metric variables
2022-11-07 20:57:41,465:INFO:Importing untrained model
2022-11-07 20:57:41,471:INFO:Extra Trees Regressor Imported successfully
2022-11-07 20:57:41,477:INFO:Cross validation set to False
2022-11-07 20:57:41,477:INFO:Fitting Model
2022-11-07 20:57:42,478:INFO:Initializing predict_model()
2022-11-07 20:57:42,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805d30>)
2022-11-07 20:57:42,478:INFO:Checking exceptions
2022-11-07 20:57:42,478:INFO:Preloading libraries
2022-11-07 20:57:42,794:INFO:display_container: 2
2022-11-07 20:57:42,798:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-07 20:57:42,798:INFO:create_model() successfully completed......................................
2022-11-07 20:57:42,931:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:42,931:INFO:Creating metrics dataframe
2022-11-07 20:57:42,964:INFO:Initializing AdaBoost Regressor
2022-11-07 20:57:42,964:INFO:Total runtime is 0.22139601310094198 minutes
2022-11-07 20:57:42,969:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:42,970:INFO:Initializing create_model()
2022-11-07 20:57:42,970:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:42,970:INFO:Checking exceptions
2022-11-07 20:57:42,974:INFO:Importing libraries
2022-11-07 20:57:42,974:INFO:Copying training dataset
2022-11-07 20:57:42,992:INFO:Defining folds
2022-11-07 20:57:42,993:INFO:Declaring metric variables
2022-11-07 20:57:43,007:INFO:Importing untrained model
2022-11-07 20:57:43,016:INFO:AdaBoost Regressor Imported successfully
2022-11-07 20:57:43,023:INFO:Cross validation set to False
2022-11-07 20:57:43,023:INFO:Fitting Model
2022-11-07 20:57:43,655:INFO:Initializing predict_model()
2022-11-07 20:57:43,655:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805b80>)
2022-11-07 20:57:43,655:INFO:Checking exceptions
2022-11-07 20:57:43,655:INFO:Preloading libraries
2022-11-07 20:57:43,894:INFO:display_container: 2
2022-11-07 20:57:43,896:INFO:AdaBoostRegressor(random_state=23)
2022-11-07 20:57:43,896:INFO:create_model() successfully completed......................................
2022-11-07 20:57:44,057:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:44,057:INFO:Creating metrics dataframe
2022-11-07 20:57:44,078:INFO:Initializing Gradient Boosting Regressor
2022-11-07 20:57:44,078:INFO:Total runtime is 0.23997174501419066 minutes
2022-11-07 20:57:44,087:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:44,087:INFO:Initializing create_model()
2022-11-07 20:57:44,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:44,087:INFO:Checking exceptions
2022-11-07 20:57:44,092:INFO:Importing libraries
2022-11-07 20:57:44,092:INFO:Copying training dataset
2022-11-07 20:57:44,100:INFO:Defining folds
2022-11-07 20:57:44,100:INFO:Declaring metric variables
2022-11-07 20:57:44,107:INFO:Importing untrained model
2022-11-07 20:57:44,139:INFO:Gradient Boosting Regressor Imported successfully
2022-11-07 20:57:44,152:INFO:Cross validation set to False
2022-11-07 20:57:44,152:INFO:Fitting Model
2022-11-07 20:57:45,831:INFO:Initializing predict_model()
2022-11-07 20:57:45,832:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805700>)
2022-11-07 20:57:45,832:INFO:Checking exceptions
2022-11-07 20:57:45,834:INFO:Preloading libraries
2022-11-07 20:57:46,093:INFO:display_container: 2
2022-11-07 20:57:46,095:INFO:GradientBoostingRegressor(random_state=23)
2022-11-07 20:57:46,095:INFO:create_model() successfully completed......................................
2022-11-07 20:57:46,229:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:46,229:INFO:Creating metrics dataframe
2022-11-07 20:57:46,261:INFO:Initializing Light Gradient Boosting Machine
2022-11-07 20:57:46,261:INFO:Total runtime is 0.2763513644536336 minutes
2022-11-07 20:57:46,273:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:46,274:INFO:Initializing create_model()
2022-11-07 20:57:46,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:46,274:INFO:Checking exceptions
2022-11-07 20:57:46,281:INFO:Importing libraries
2022-11-07 20:57:46,281:INFO:Copying training dataset
2022-11-07 20:57:46,297:INFO:Defining folds
2022-11-07 20:57:46,297:INFO:Declaring metric variables
2022-11-07 20:57:46,305:INFO:Importing untrained model
2022-11-07 20:57:46,313:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-07 20:57:46,325:INFO:Cross validation set to False
2022-11-07 20:57:46,325:INFO:Fitting Model
2022-11-07 20:57:47,201:INFO:Initializing predict_model()
2022-11-07 20:57:47,202:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805940>)
2022-11-07 20:57:47,203:INFO:Checking exceptions
2022-11-07 20:57:47,203:INFO:Preloading libraries
2022-11-07 20:57:47,536:INFO:display_container: 2
2022-11-07 20:57:47,539:INFO:LGBMRegressor(random_state=23)
2022-11-07 20:57:47,540:INFO:create_model() successfully completed......................................
2022-11-07 20:57:47,732:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:47,733:INFO:Creating metrics dataframe
2022-11-07 20:57:47,760:INFO:Initializing Dummy Regressor
2022-11-07 20:57:47,761:INFO:Total runtime is 0.3013440608978271 minutes
2022-11-07 20:57:47,767:INFO:SubProcess create_model() called ==================================
2022-11-07 20:57:47,767:INFO:Initializing create_model()
2022-11-07 20:57:47,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x114d2fb80>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:47,768:INFO:Checking exceptions
2022-11-07 20:57:47,775:INFO:Importing libraries
2022-11-07 20:57:47,775:INFO:Copying training dataset
2022-11-07 20:57:47,786:INFO:Defining folds
2022-11-07 20:57:47,787:INFO:Declaring metric variables
2022-11-07 20:57:47,800:INFO:Importing untrained model
2022-11-07 20:57:47,818:INFO:Dummy Regressor Imported successfully
2022-11-07 20:57:47,846:INFO:Cross validation set to False
2022-11-07 20:57:47,846:INFO:Fitting Model
2022-11-07 20:57:47,978:INFO:Initializing predict_model()
2022-11-07 20:57:47,978:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137805ca0>)
2022-11-07 20:57:47,979:INFO:Checking exceptions
2022-11-07 20:57:47,979:INFO:Preloading libraries
2022-11-07 20:57:48,194:INFO:display_container: 2
2022-11-07 20:57:48,201:INFO:DummyRegressor()
2022-11-07 20:57:48,201:INFO:create_model() successfully completed......................................
2022-11-07 20:57:48,373:INFO:SubProcess create_model() end ==================================
2022-11-07 20:57:48,373:INFO:Creating metrics dataframe
2022-11-07 20:57:48,411:INFO:Initializing create_model()
2022-11-07 20:57:48,411:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=RandomForestRegressor(n_jobs=-1, random_state=23), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-07 20:57:48,412:INFO:Checking exceptions
2022-11-07 20:57:48,420:INFO:Importing libraries
2022-11-07 20:57:48,420:INFO:Copying training dataset
2022-11-07 20:57:48,425:INFO:Defining folds
2022-11-07 20:57:48,427:INFO:Declaring metric variables
2022-11-07 20:57:48,427:INFO:Importing untrained model
2022-11-07 20:57:48,428:INFO:Declaring custom model
2022-11-07 20:57:48,428:INFO:Random Forest Regressor Imported successfully
2022-11-07 20:57:48,429:INFO:Cross validation set to False
2022-11-07 20:57:48,429:INFO:Fitting Model
2022-11-07 20:57:51,082:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 20:57:51,083:INFO:create_model() successfully completed......................................
2022-11-07 20:57:51,287:INFO:master_model_container: 0
2022-11-07 20:57:51,287:INFO:display_container: 2
2022-11-07 20:57:51,288:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 20:57:51,288:INFO:compare_models() successfully completed......................................
2022-11-07 20:58:22,068:INFO:Initializing create_model()
2022-11-07 20:58:22,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-07 20:58:22,068:INFO:Checking exceptions
2022-11-07 20:58:22,110:INFO:Importing libraries
2022-11-07 20:58:22,111:INFO:Copying training dataset
2022-11-07 20:58:22,119:INFO:Defining folds
2022-11-07 20:58:22,119:INFO:Declaring metric variables
2022-11-07 20:58:22,124:INFO:Importing untrained model
2022-11-07 20:58:22,129:INFO:Random Forest Regressor Imported successfully
2022-11-07 20:58:22,138:INFO:Starting cross validation
2022-11-07 20:58:22,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-07 20:58:35,043:WARNING:/Users/javierdaza/Library/Python/3.9/lib/python/site-packages/pycaret/internal/pipeline.py:192: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y, fitted_transformer = self._memory_fit(

2022-11-07 20:58:56,443:INFO:Calculating mean and std
2022-11-07 20:58:56,450:INFO:Creating metrics dataframe
2022-11-07 20:58:56,465:INFO:Finalizing model
2022-11-07 20:58:59,037:INFO:Initializing predict_model()
2022-11-07 20:58:59,037:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'stock',
                                             'week_of_year', 'day_of_month',
                                             'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category'],
                                    transformer=LeaveOneOutEncoder(cols=['category'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384fc040>)
2022-11-07 20:58:59,037:INFO:Checking exceptions
2022-11-07 20:58:59,037:INFO:Preloading libraries
2022-11-07 20:58:59,038:INFO:Set up data.
2022-11-07 20:58:59,047:INFO:Set up index.
2022-11-07 20:58:59,737:INFO:Uploading results into container
2022-11-07 20:58:59,738:INFO:Uploading model into container now
2022-11-07 20:58:59,778:INFO:master_model_container: 1
2022-11-07 20:58:59,778:INFO:display_container: 3
2022-11-07 20:58:59,778:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 20:58:59,779:INFO:create_model() successfully completed......................................
2022-11-07 20:59:00,082:INFO:Initializing plot_model()
2022-11-07 20:59:00,083:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=23), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x137804670>, system=True)
2022-11-07 20:59:00,083:INFO:Checking exceptions
2022-11-07 20:59:00,119:INFO:Preloading libraries
2022-11-07 20:59:00,266:INFO:Copying training dataset
2022-11-07 20:59:00,266:INFO:Plot type: feature
2022-11-07 20:59:00,267:WARNING:No coef_ found. Trying feature_importances_
2022-11-07 20:59:00,720:INFO:Visual Rendered Successfully
2022-11-07 20:59:01,024:INFO:plot_model() successfully completed......................................
2022-11-07 21:01:51,133:INFO:PyCaret RegressionExperiment
2022-11-07 21:01:51,133:INFO:Logging name: reg-default-name
2022-11-07 21:01:51,134:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-07 21:01:51,134:INFO:version 3.0.0.rc4
2022-11-07 21:01:51,134:INFO:Initializing setup()
2022-11-07 21:01:51,134:INFO:self.USI: 739f
2022-11-07 21:01:51,134:INFO:self.variable_keys: {'display_container', 'exp_name_log', 'y_test', 'y', 'logging_param', 'USI', '_available_plots', 'X_train', 'fold_shuffle_param', 'gpu_param', 'X_test', 'data', '_all_models', 'seed', 'master_model_container', 'html_param', '_all_models_internal', 'idx', 'target_param', 'memory', 'n_jobs_param', 'fold_generator', 'transform_target_param', 'pipeline', 'exp_id', '_gpu_n_jobs_param', 'y_train', 'transform_target_method_param', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'X', 'variable_keys', '_all_metrics'}
2022-11-07 21:01:51,134:INFO:Checking environment
2022-11-07 21:01:51,134:INFO:python_version: 3.9.6
2022-11-07 21:01:51,134:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-07 21:01:51,134:INFO:machine: x86_64
2022-11-07 21:01:51,134:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-07 21:01:51,135:INFO:Memory: svmem(total=17179869184, available=7656816640, percent=55.4, used=9484918784, free=122257408, active=7532490752, inactive=7424266240, wired=1952428032)
2022-11-07 21:01:51,135:INFO:Physical Core: 4
2022-11-07 21:01:51,135:INFO:Logical Core: 4
2022-11-07 21:01:51,135:INFO:Checking libraries
2022-11-07 21:01:51,135:INFO:System:
2022-11-07 21:01:51,135:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-07 21:01:51,135:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-07 21:01:51,135:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-07 21:01:51,135:INFO:PyCaret required dependencies:
2022-11-07 21:01:51,135:INFO:                 pip: 21.2.4
2022-11-07 21:01:51,135:INFO:          setuptools: 58.0.4
2022-11-07 21:01:51,135:INFO:             pycaret: 3.0.0rc4
2022-11-07 21:01:51,136:INFO:             IPython: 8.6.0
2022-11-07 21:01:51,136:INFO:          ipywidgets: 8.0.2
2022-11-07 21:01:51,136:INFO:                tqdm: 4.64.1
2022-11-07 21:01:51,136:INFO:               numpy: 1.22.4
2022-11-07 21:01:51,136:INFO:              pandas: 1.4.4
2022-11-07 21:01:51,136:INFO:              jinja2: 3.1.2
2022-11-07 21:01:51,136:INFO:               scipy: 1.8.1
2022-11-07 21:01:51,136:INFO:              joblib: 1.2.0
2022-11-07 21:01:51,136:INFO:             sklearn: 1.1.3
2022-11-07 21:01:51,136:INFO:                pyod: 1.0.6
2022-11-07 21:01:51,136:INFO:            imblearn: 0.9.1
2022-11-07 21:01:51,136:INFO:   category_encoders: 2.5.1.post0
2022-11-07 21:01:51,136:INFO:            lightgbm: 3.3.3
2022-11-07 21:01:51,137:INFO:               numba: 0.55.2
2022-11-07 21:01:51,137:INFO:            requests: 2.28.1
2022-11-07 21:01:51,137:INFO:          matplotlib: 3.6.2
2022-11-07 21:01:51,137:INFO:          scikitplot: 0.3.7
2022-11-07 21:01:51,137:INFO:         yellowbrick: 1.5
2022-11-07 21:01:51,137:INFO:              plotly: 5.11.0
2022-11-07 21:01:51,137:INFO:             kaleido: 0.2.1
2022-11-07 21:01:51,137:INFO:         statsmodels: 0.13.5
2022-11-07 21:01:51,137:INFO:              sktime: 0.13.4
2022-11-07 21:01:51,137:INFO:               tbats: 1.1.1
2022-11-07 21:01:51,137:INFO:            pmdarima: 1.8.5
2022-11-07 21:01:51,137:INFO:              psutil: 5.9.3
2022-11-07 21:01:51,137:INFO:PyCaret optional dependencies:
2022-11-07 21:01:51,138:INFO:                shap: Not installed
2022-11-07 21:01:51,138:INFO:           interpret: Not installed
2022-11-07 21:01:51,138:INFO:                umap: Not installed
2022-11-07 21:01:51,138:INFO:    pandas_profiling: Not installed
2022-11-07 21:01:51,138:INFO:  explainerdashboard: Not installed
2022-11-07 21:01:51,138:INFO:             autoviz: Not installed
2022-11-07 21:01:51,138:INFO:           fairlearn: Not installed
2022-11-07 21:01:51,138:INFO:             xgboost: Not installed
2022-11-07 21:01:51,138:INFO:            catboost: Not installed
2022-11-07 21:01:51,138:INFO:              kmodes: Not installed
2022-11-07 21:01:51,138:INFO:             mlxtend: Not installed
2022-11-07 21:01:51,139:INFO:       statsforecast: Not installed
2022-11-07 21:01:51,139:INFO:        tune_sklearn: Not installed
2022-11-07 21:01:51,139:INFO:                 ray: Not installed
2022-11-07 21:01:51,139:INFO:            hyperopt: Not installed
2022-11-07 21:01:51,139:INFO:              optuna: Not installed
2022-11-07 21:01:51,139:INFO:               skopt: Not installed
2022-11-07 21:01:51,139:INFO:              mlflow: Not installed
2022-11-07 21:01:51,139:INFO:              gradio: Not installed
2022-11-07 21:01:51,139:INFO:             fastapi: Not installed
2022-11-07 21:01:51,139:INFO:             uvicorn: Not installed
2022-11-07 21:01:51,139:INFO:              m2cgen: Not installed
2022-11-07 21:01:51,139:INFO:           evidently: Not installed
2022-11-07 21:01:51,139:INFO:                nltk: Not installed
2022-11-07 21:01:51,139:INFO:            pyLDAvis: Not installed
2022-11-07 21:01:51,139:INFO:              gensim: Not installed
2022-11-07 21:01:51,140:INFO:               spacy: 3.4.2
2022-11-07 21:01:51,140:INFO:           wordcloud: Not installed
2022-11-07 21:01:51,140:INFO:            textblob: Not installed
2022-11-07 21:01:51,140:INFO:               fugue: Not installed
2022-11-07 21:01:51,140:INFO:           streamlit: Not installed
2022-11-07 21:01:51,140:INFO:             prophet: Not installed
2022-11-07 21:01:51,140:INFO:None
2022-11-07 21:01:51,140:INFO:Set up data.
2022-11-07 21:01:51,152:INFO:Set up train/test split.
2022-11-07 21:01:51,169:INFO:Set up index.
2022-11-07 21:01:51,169:INFO:Set up folding strategy.
2022-11-07 21:01:51,170:INFO:Assigning column types.
2022-11-07 21:01:51,177:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-07 21:01:51,178:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,185:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,203:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:51,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:51,409:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,416:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,424:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,515:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,595:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:51,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:51,596:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-07 21:01:51,603:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,615:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:51,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:51,826:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,833:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:01:51,968:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,115:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-07 21:01:52,137:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,241:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,345:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,366:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,552:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-07 21:01:52,798:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:52,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:52,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:53,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:01:53,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,095:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-07 21:01:53,220:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:53,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,470:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:01:53,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,545:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-07 21:01:53,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:53,986:INFO:Preparing preprocessing pipeline...
2022-11-07 21:01:53,988:INFO:Set up simple imputation.
2022-11-07 21:01:53,994:INFO:Set up encoding of categorical features.
2022-11-07 21:01:53,994:INFO:Set up variance threshold.
2022-11-07 21:01:54,478:INFO:Finished creating preprocessing pipeline.
2022-11-07 21:01:54,494:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-07 21:01:54,494:INFO:Creating final display dataframe.
2022-11-07 21:01:56,209:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 7)
4           Train data shape        (10124, 7)
5            Test data shape         (4340, 7)
6           Numeric features                 4
7       Categorical features                 2
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              739f
2022-11-07 21:01:56,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:56,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:56,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:56,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:01:56,630:INFO:setup() successfully completed in 5.5s...............
2022-11-07 21:01:56,666:INFO:Initializing compare_models()
2022-11-07 21:01:56,666:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-07 21:01:56,667:INFO:Checking exceptions
2022-11-07 21:01:56,671:INFO:Preparing display monitor
2022-11-07 21:01:56,725:INFO:Initializing Linear Regression
2022-11-07 21:01:56,727:INFO:Total runtime is 2.2419293721516927e-05 minutes
2022-11-07 21:01:56,733:INFO:SubProcess create_model() called ==================================
2022-11-07 21:01:56,734:INFO:Initializing create_model()
2022-11-07 21:01:56,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:01:56,734:INFO:Checking exceptions
2022-11-07 21:01:56,739:INFO:Importing libraries
2022-11-07 21:01:56,739:INFO:Copying training dataset
2022-11-07 21:01:56,747:INFO:Defining folds
2022-11-07 21:01:56,747:INFO:Declaring metric variables
2022-11-07 21:01:56,751:INFO:Importing untrained model
2022-11-07 21:01:56,772:INFO:Linear Regression Imported successfully
2022-11-07 21:01:56,861:INFO:Cross validation set to False
2022-11-07 21:01:56,863:INFO:Fitting Model
2022-11-07 21:01:57,402:INFO:Initializing predict_model()
2022-11-07 21:01:57,402:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...,
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384fc040>)
2022-11-07 21:01:57,402:INFO:Checking exceptions
2022-11-07 21:01:57,402:INFO:Preloading libraries
2022-11-07 21:01:57,724:INFO:display_container: 2
2022-11-07 21:01:57,726:INFO:LinearRegression(n_jobs=-1)
2022-11-07 21:01:57,727:INFO:create_model() successfully completed......................................
2022-11-07 21:01:57,876:INFO:SubProcess create_model() end ==================================
2022-11-07 21:01:57,876:INFO:Creating metrics dataframe
2022-11-07 21:01:57,892:INFO:Initializing Lasso Regression
2022-11-07 21:01:57,892:INFO:Total runtime is 0.019440750281016033 minutes
2022-11-07 21:01:57,898:INFO:SubProcess create_model() called ==================================
2022-11-07 21:01:57,899:INFO:Initializing create_model()
2022-11-07 21:01:57,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:01:57,899:INFO:Checking exceptions
2022-11-07 21:01:57,903:INFO:Importing libraries
2022-11-07 21:01:57,903:INFO:Copying training dataset
2022-11-07 21:01:57,936:INFO:Defining folds
2022-11-07 21:01:57,936:INFO:Declaring metric variables
2022-11-07 21:01:57,943:INFO:Importing untrained model
2022-11-07 21:01:57,956:INFO:Lasso Regression Imported successfully
2022-11-07 21:01:57,965:INFO:Cross validation set to False
2022-11-07 21:01:57,966:INFO:Fitting Model
2022-11-07 21:01:58,173:INFO:Initializing predict_model()
2022-11-07 21:01:58,173:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...tant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de310>)
2022-11-07 21:01:58,173:INFO:Checking exceptions
2022-11-07 21:01:58,174:INFO:Preloading libraries
2022-11-07 21:01:58,517:INFO:display_container: 2
2022-11-07 21:01:58,520:INFO:Lasso(random_state=23)
2022-11-07 21:01:58,520:INFO:create_model() successfully completed......................................
2022-11-07 21:01:58,677:INFO:SubProcess create_model() end ==================================
2022-11-07 21:01:58,677:INFO:Creating metrics dataframe
2022-11-07 21:01:58,694:INFO:Initializing Ridge Regression
2022-11-07 21:01:58,694:INFO:Total runtime is 0.032805132865905764 minutes
2022-11-07 21:01:58,711:INFO:SubProcess create_model() called ==================================
2022-11-07 21:01:58,712:INFO:Initializing create_model()
2022-11-07 21:01:58,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:01:58,713:INFO:Checking exceptions
2022-11-07 21:01:58,718:INFO:Importing libraries
2022-11-07 21:01:58,718:INFO:Copying training dataset
2022-11-07 21:01:58,726:INFO:Defining folds
2022-11-07 21:01:58,726:INFO:Declaring metric variables
2022-11-07 21:01:58,752:INFO:Importing untrained model
2022-11-07 21:01:58,767:INFO:Ridge Regression Imported successfully
2022-11-07 21:01:58,773:INFO:Cross validation set to False
2022-11-07 21:01:58,773:INFO:Fitting Model
2022-11-07 21:01:58,981:INFO:Initializing predict_model()
2022-11-07 21:01:58,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...tant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x133d3ca60>)
2022-11-07 21:01:58,981:INFO:Checking exceptions
2022-11-07 21:01:58,981:INFO:Preloading libraries
2022-11-07 21:01:59,306:INFO:display_container: 2
2022-11-07 21:01:59,308:INFO:Ridge(random_state=23)
2022-11-07 21:01:59,308:INFO:create_model() successfully completed......................................
2022-11-07 21:01:59,443:INFO:SubProcess create_model() end ==================================
2022-11-07 21:01:59,443:INFO:Creating metrics dataframe
2022-11-07 21:01:59,458:INFO:Initializing Elastic Net
2022-11-07 21:01:59,458:INFO:Total runtime is 0.04554251432418824 minutes
2022-11-07 21:01:59,466:INFO:SubProcess create_model() called ==================================
2022-11-07 21:01:59,466:INFO:Initializing create_model()
2022-11-07 21:01:59,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:01:59,466:INFO:Checking exceptions
2022-11-07 21:01:59,470:INFO:Importing libraries
2022-11-07 21:01:59,471:INFO:Copying training dataset
2022-11-07 21:01:59,498:INFO:Defining folds
2022-11-07 21:01:59,499:INFO:Declaring metric variables
2022-11-07 21:01:59,575:INFO:Importing untrained model
2022-11-07 21:01:59,584:INFO:Elastic Net Imported successfully
2022-11-07 21:01:59,623:INFO:Cross validation set to False
2022-11-07 21:01:59,623:INFO:Fitting Model
2022-11-07 21:01:59,786:INFO:Initializing predict_model()
2022-11-07 21:01:59,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...,
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de700>)
2022-11-07 21:01:59,787:INFO:Checking exceptions
2022-11-07 21:01:59,787:INFO:Preloading libraries
2022-11-07 21:02:00,076:INFO:display_container: 2
2022-11-07 21:02:00,078:INFO:ElasticNet(random_state=23)
2022-11-07 21:02:00,078:INFO:create_model() successfully completed......................................
2022-11-07 21:02:00,213:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:00,213:INFO:Creating metrics dataframe
2022-11-07 21:02:00,240:INFO:Initializing Least Angle Regression
2022-11-07 21:02:00,240:INFO:Total runtime is 0.058584264914194745 minutes
2022-11-07 21:02:00,245:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:00,246:INFO:Initializing create_model()
2022-11-07 21:02:00,246:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:00,247:INFO:Checking exceptions
2022-11-07 21:02:00,253:INFO:Importing libraries
2022-11-07 21:02:00,253:INFO:Copying training dataset
2022-11-07 21:02:00,259:INFO:Defining folds
2022-11-07 21:02:00,260:INFO:Declaring metric variables
2022-11-07 21:02:00,276:INFO:Importing untrained model
2022-11-07 21:02:00,293:INFO:Least Angle Regression Imported successfully
2022-11-07 21:02:00,308:INFO:Cross validation set to False
2022-11-07 21:02:00,308:INFO:Fitting Model
2022-11-07 21:02:00,476:INFO:Initializing predict_model()
2022-11-07 21:02:00,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...stant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de940>)
2022-11-07 21:02:00,476:INFO:Checking exceptions
2022-11-07 21:02:00,477:INFO:Preloading libraries
2022-11-07 21:02:00,723:INFO:display_container: 2
2022-11-07 21:02:00,725:INFO:Lars(random_state=23)
2022-11-07 21:02:00,726:INFO:create_model() successfully completed......................................
2022-11-07 21:02:00,870:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:00,870:INFO:Creating metrics dataframe
2022-11-07 21:02:00,887:INFO:Initializing Lasso Least Angle Regression
2022-11-07 21:02:00,887:INFO:Total runtime is 0.06936676899592081 minutes
2022-11-07 21:02:00,892:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:00,892:INFO:Initializing create_model()
2022-11-07 21:02:00,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:00,892:INFO:Checking exceptions
2022-11-07 21:02:00,896:INFO:Importing libraries
2022-11-07 21:02:00,896:INFO:Copying training dataset
2022-11-07 21:02:00,912:INFO:Defining folds
2022-11-07 21:02:00,912:INFO:Declaring metric variables
2022-11-07 21:02:00,933:INFO:Importing untrained model
2022-11-07 21:02:00,961:INFO:Lasso Least Angle Regression Imported successfully
2022-11-07 21:02:00,976:INFO:Cross validation set to False
2022-11-07 21:02:00,976:INFO:Fitting Model
2022-11-07 21:02:01,204:INFO:Initializing predict_model()
2022-11-07 21:02:01,204:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de160>)
2022-11-07 21:02:01,204:INFO:Checking exceptions
2022-11-07 21:02:01,204:INFO:Preloading libraries
2022-11-07 21:02:01,462:INFO:display_container: 2
2022-11-07 21:02:01,464:INFO:LassoLars(random_state=23)
2022-11-07 21:02:01,464:INFO:create_model() successfully completed......................................
2022-11-07 21:02:01,663:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:01,664:INFO:Creating metrics dataframe
2022-11-07 21:02:01,678:INFO:Initializing Orthogonal Matching Pursuit
2022-11-07 21:02:01,678:INFO:Total runtime is 0.08255096673965454 minutes
2022-11-07 21:02:01,705:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:01,706:INFO:Initializing create_model()
2022-11-07 21:02:01,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:01,706:INFO:Checking exceptions
2022-11-07 21:02:01,713:INFO:Importing libraries
2022-11-07 21:02:01,713:INFO:Copying training dataset
2022-11-07 21:02:01,725:INFO:Defining folds
2022-11-07 21:02:01,726:INFO:Declaring metric variables
2022-11-07 21:02:01,743:INFO:Importing untrained model
2022-11-07 21:02:01,759:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-07 21:02:01,790:INFO:Cross validation set to False
2022-11-07 21:02:01,790:INFO:Fitting Model
2022-11-07 21:02:01,971:INFO:Initializing predict_model()
2022-11-07 21:02:01,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...,
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de550>)
2022-11-07 21:02:01,971:INFO:Checking exceptions
2022-11-07 21:02:01,971:INFO:Preloading libraries
2022-11-07 21:02:02,221:INFO:display_container: 2
2022-11-07 21:02:02,223:INFO:OrthogonalMatchingPursuit()
2022-11-07 21:02:02,224:INFO:create_model() successfully completed......................................
2022-11-07 21:02:02,357:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:02,357:INFO:Creating metrics dataframe
2022-11-07 21:02:02,373:INFO:Initializing Bayesian Ridge
2022-11-07 21:02:02,374:INFO:Total runtime is 0.09413738250732422 minutes
2022-11-07 21:02:02,379:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:02,379:INFO:Initializing create_model()
2022-11-07 21:02:02,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:02,379:INFO:Checking exceptions
2022-11-07 21:02:02,386:INFO:Importing libraries
2022-11-07 21:02:02,386:INFO:Copying training dataset
2022-11-07 21:02:02,396:INFO:Defining folds
2022-11-07 21:02:02,396:INFO:Declaring metric variables
2022-11-07 21:02:02,414:INFO:Importing untrained model
2022-11-07 21:02:02,426:INFO:Bayesian Ridge Imported successfully
2022-11-07 21:02:02,431:INFO:Cross validation set to False
2022-11-07 21:02:02,432:INFO:Fitting Model
2022-11-07 21:02:02,612:INFO:Initializing predict_model()
2022-11-07 21:02:02,612:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de820>)
2022-11-07 21:02:02,612:INFO:Checking exceptions
2022-11-07 21:02:02,612:INFO:Preloading libraries
2022-11-07 21:02:02,870:INFO:display_container: 2
2022-11-07 21:02:02,872:INFO:BayesianRidge()
2022-11-07 21:02:02,872:INFO:create_model() successfully completed......................................
2022-11-07 21:02:03,023:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:03,023:INFO:Creating metrics dataframe
2022-11-07 21:02:03,041:INFO:Initializing Passive Aggressive Regressor
2022-11-07 21:02:03,041:INFO:Total runtime is 0.10526546637217203 minutes
2022-11-07 21:02:03,046:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:03,046:INFO:Initializing create_model()
2022-11-07 21:02:03,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:03,047:INFO:Checking exceptions
2022-11-07 21:02:03,052:INFO:Importing libraries
2022-11-07 21:02:03,053:INFO:Copying training dataset
2022-11-07 21:02:03,060:INFO:Defining folds
2022-11-07 21:02:03,061:INFO:Declaring metric variables
2022-11-07 21:02:03,072:INFO:Importing untrained model
2022-11-07 21:02:03,078:INFO:Passive Aggressive Regressor Imported successfully
2022-11-07 21:02:03,090:INFO:Cross validation set to False
2022-11-07 21:02:03,090:INFO:Fitting Model
2022-11-07 21:02:03,248:INFO:Initializing predict_model()
2022-11-07 21:02:03,248:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de8b0>)
2022-11-07 21:02:03,248:INFO:Checking exceptions
2022-11-07 21:02:03,249:INFO:Preloading libraries
2022-11-07 21:02:03,483:INFO:display_container: 2
2022-11-07 21:02:03,490:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-07 21:02:03,490:INFO:create_model() successfully completed......................................
2022-11-07 21:02:03,637:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:03,637:INFO:Creating metrics dataframe
2022-11-07 21:02:03,677:INFO:Initializing Huber Regressor
2022-11-07 21:02:03,677:INFO:Total runtime is 0.11586003303527831 minutes
2022-11-07 21:02:03,682:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:03,683:INFO:Initializing create_model()
2022-11-07 21:02:03,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:03,683:INFO:Checking exceptions
2022-11-07 21:02:03,692:INFO:Importing libraries
2022-11-07 21:02:03,692:INFO:Copying training dataset
2022-11-07 21:02:03,699:INFO:Defining folds
2022-11-07 21:02:03,699:INFO:Declaring metric variables
2022-11-07 21:02:03,709:INFO:Importing untrained model
2022-11-07 21:02:03,716:INFO:Huber Regressor Imported successfully
2022-11-07 21:02:03,728:INFO:Cross validation set to False
2022-11-07 21:02:03,728:INFO:Fitting Model
2022-11-07 21:02:04,073:INFO:Initializing predict_model()
2022-11-07 21:02:04,073:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de700>)
2022-11-07 21:02:04,073:INFO:Checking exceptions
2022-11-07 21:02:04,073:INFO:Preloading libraries
2022-11-07 21:02:04,367:INFO:display_container: 2
2022-11-07 21:02:04,372:INFO:HuberRegressor()
2022-11-07 21:02:04,372:INFO:create_model() successfully completed......................................
2022-11-07 21:02:04,495:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:04,495:INFO:Creating metrics dataframe
2022-11-07 21:02:04,513:INFO:Initializing K Neighbors Regressor
2022-11-07 21:02:04,513:INFO:Total runtime is 0.12978959878285726 minutes
2022-11-07 21:02:04,518:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:04,518:INFO:Initializing create_model()
2022-11-07 21:02:04,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:04,518:INFO:Checking exceptions
2022-11-07 21:02:04,522:INFO:Importing libraries
2022-11-07 21:02:04,522:INFO:Copying training dataset
2022-11-07 21:02:04,539:INFO:Defining folds
2022-11-07 21:02:04,540:INFO:Declaring metric variables
2022-11-07 21:02:04,555:INFO:Importing untrained model
2022-11-07 21:02:04,565:INFO:K Neighbors Regressor Imported successfully
2022-11-07 21:02:04,576:INFO:Cross validation set to False
2022-11-07 21:02:04,576:INFO:Fitting Model
2022-11-07 21:02:04,748:INFO:Initializing predict_model()
2022-11-07 21:02:04,748:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de5e0>)
2022-11-07 21:02:04,748:INFO:Checking exceptions
2022-11-07 21:02:04,748:INFO:Preloading libraries
2022-11-07 21:02:05,049:INFO:display_container: 2
2022-11-07 21:02:05,051:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-07 21:02:05,054:INFO:create_model() successfully completed......................................
2022-11-07 21:02:05,187:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:05,188:INFO:Creating metrics dataframe
2022-11-07 21:02:05,207:INFO:Initializing Decision Tree Regressor
2022-11-07 21:02:05,207:INFO:Total runtime is 0.14136506319046022 minutes
2022-11-07 21:02:05,212:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:05,213:INFO:Initializing create_model()
2022-11-07 21:02:05,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:05,213:INFO:Checking exceptions
2022-11-07 21:02:05,217:INFO:Importing libraries
2022-11-07 21:02:05,217:INFO:Copying training dataset
2022-11-07 21:02:05,227:INFO:Defining folds
2022-11-07 21:02:05,227:INFO:Declaring metric variables
2022-11-07 21:02:05,234:INFO:Importing untrained model
2022-11-07 21:02:05,251:INFO:Decision Tree Regressor Imported successfully
2022-11-07 21:02:05,265:INFO:Cross validation set to False
2022-11-07 21:02:05,265:INFO:Fitting Model
2022-11-07 21:02:05,499:INFO:Initializing predict_model()
2022-11-07 21:02:05,499:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384dec10>)
2022-11-07 21:02:05,499:INFO:Checking exceptions
2022-11-07 21:02:05,500:INFO:Preloading libraries
2022-11-07 21:02:05,748:INFO:display_container: 2
2022-11-07 21:02:05,750:INFO:DecisionTreeRegressor(random_state=23)
2022-11-07 21:02:05,751:INFO:create_model() successfully completed......................................
2022-11-07 21:02:05,882:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:05,883:INFO:Creating metrics dataframe
2022-11-07 21:02:05,902:INFO:Initializing Random Forest Regressor
2022-11-07 21:02:05,902:INFO:Total runtime is 0.1529505491256714 minutes
2022-11-07 21:02:05,908:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:05,909:INFO:Initializing create_model()
2022-11-07 21:02:05,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:05,909:INFO:Checking exceptions
2022-11-07 21:02:05,913:INFO:Importing libraries
2022-11-07 21:02:05,913:INFO:Copying training dataset
2022-11-07 21:02:05,922:INFO:Defining folds
2022-11-07 21:02:05,922:INFO:Declaring metric variables
2022-11-07 21:02:05,928:INFO:Importing untrained model
2022-11-07 21:02:05,932:INFO:Random Forest Regressor Imported successfully
2022-11-07 21:02:05,975:INFO:Cross validation set to False
2022-11-07 21:02:05,975:INFO:Fitting Model
2022-11-07 21:02:07,861:INFO:Initializing predict_model()
2022-11-07 21:02:07,862:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384deb80>)
2022-11-07 21:02:07,862:INFO:Checking exceptions
2022-11-07 21:02:07,862:INFO:Preloading libraries
2022-11-07 21:02:08,214:INFO:display_container: 2
2022-11-07 21:02:08,216:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:02:08,216:INFO:create_model() successfully completed......................................
2022-11-07 21:02:08,372:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:08,372:INFO:Creating metrics dataframe
2022-11-07 21:02:08,397:INFO:Initializing Extra Trees Regressor
2022-11-07 21:02:08,397:INFO:Total runtime is 0.1945234020551046 minutes
2022-11-07 21:02:08,403:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:08,403:INFO:Initializing create_model()
2022-11-07 21:02:08,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:08,403:INFO:Checking exceptions
2022-11-07 21:02:08,409:INFO:Importing libraries
2022-11-07 21:02:08,409:INFO:Copying training dataset
2022-11-07 21:02:08,416:INFO:Defining folds
2022-11-07 21:02:08,417:INFO:Declaring metric variables
2022-11-07 21:02:08,422:INFO:Importing untrained model
2022-11-07 21:02:08,431:INFO:Extra Trees Regressor Imported successfully
2022-11-07 21:02:08,443:INFO:Cross validation set to False
2022-11-07 21:02:08,443:INFO:Fitting Model
2022-11-07 21:02:09,412:INFO:Initializing predict_model()
2022-11-07 21:02:09,412:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384dedc0>)
2022-11-07 21:02:09,412:INFO:Checking exceptions
2022-11-07 21:02:09,413:INFO:Preloading libraries
2022-11-07 21:02:09,681:INFO:display_container: 2
2022-11-07 21:02:09,683:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:02:09,683:INFO:create_model() successfully completed......................................
2022-11-07 21:02:09,817:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:09,817:INFO:Creating metrics dataframe
2022-11-07 21:02:09,837:INFO:Initializing AdaBoost Regressor
2022-11-07 21:02:09,837:INFO:Total runtime is 0.21853149731953941 minutes
2022-11-07 21:02:09,843:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:09,844:INFO:Initializing create_model()
2022-11-07 21:02:09,844:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:09,844:INFO:Checking exceptions
2022-11-07 21:02:09,847:INFO:Importing libraries
2022-11-07 21:02:09,847:INFO:Copying training dataset
2022-11-07 21:02:09,854:INFO:Defining folds
2022-11-07 21:02:09,854:INFO:Declaring metric variables
2022-11-07 21:02:09,886:INFO:Importing untrained model
2022-11-07 21:02:09,929:INFO:AdaBoost Regressor Imported successfully
2022-11-07 21:02:09,938:INFO:Cross validation set to False
2022-11-07 21:02:09,938:INFO:Fitting Model
2022-11-07 21:02:10,583:INFO:Initializing predict_model()
2022-11-07 21:02:10,583:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de310>)
2022-11-07 21:02:10,584:INFO:Checking exceptions
2022-11-07 21:02:10,584:INFO:Preloading libraries
2022-11-07 21:02:10,830:INFO:display_container: 2
2022-11-07 21:02:10,832:INFO:AdaBoostRegressor(random_state=23)
2022-11-07 21:02:10,832:INFO:create_model() successfully completed......................................
2022-11-07 21:02:10,981:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:10,981:INFO:Creating metrics dataframe
2022-11-07 21:02:11,002:INFO:Initializing Gradient Boosting Regressor
2022-11-07 21:02:11,002:INFO:Total runtime is 0.23794029951095583 minutes
2022-11-07 21:02:11,007:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:11,008:INFO:Initializing create_model()
2022-11-07 21:02:11,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:11,008:INFO:Checking exceptions
2022-11-07 21:02:11,013:INFO:Importing libraries
2022-11-07 21:02:11,013:INFO:Copying training dataset
2022-11-07 21:02:11,020:INFO:Defining folds
2022-11-07 21:02:11,020:INFO:Declaring metric variables
2022-11-07 21:02:11,025:INFO:Importing untrained model
2022-11-07 21:02:11,034:INFO:Gradient Boosting Regressor Imported successfully
2022-11-07 21:02:11,042:INFO:Cross validation set to False
2022-11-07 21:02:11,042:INFO:Fitting Model
2022-11-07 21:02:12,349:INFO:Initializing predict_model()
2022-11-07 21:02:12,349:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384deb80>)
2022-11-07 21:02:12,349:INFO:Checking exceptions
2022-11-07 21:02:12,349:INFO:Preloading libraries
2022-11-07 21:02:12,601:INFO:display_container: 2
2022-11-07 21:02:12,603:INFO:GradientBoostingRegressor(random_state=23)
2022-11-07 21:02:12,604:INFO:create_model() successfully completed......................................
2022-11-07 21:02:12,740:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:12,740:INFO:Creating metrics dataframe
2022-11-07 21:02:12,766:INFO:Initializing Light Gradient Boosting Machine
2022-11-07 21:02:12,766:INFO:Total runtime is 0.26734725236892704 minutes
2022-11-07 21:02:12,771:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:12,771:INFO:Initializing create_model()
2022-11-07 21:02:12,772:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:12,772:INFO:Checking exceptions
2022-11-07 21:02:12,776:INFO:Importing libraries
2022-11-07 21:02:12,777:INFO:Copying training dataset
2022-11-07 21:02:12,789:INFO:Defining folds
2022-11-07 21:02:12,789:INFO:Declaring metric variables
2022-11-07 21:02:12,802:INFO:Importing untrained model
2022-11-07 21:02:12,816:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-07 21:02:12,840:INFO:Cross validation set to False
2022-11-07 21:02:12,841:INFO:Fitting Model
2022-11-07 21:02:13,502:INFO:Initializing predict_model()
2022-11-07 21:02:13,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_val...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de8b0>)
2022-11-07 21:02:13,503:INFO:Checking exceptions
2022-11-07 21:02:13,503:INFO:Preloading libraries
2022-11-07 21:02:13,852:INFO:display_container: 2
2022-11-07 21:02:13,854:INFO:LGBMRegressor(random_state=23)
2022-11-07 21:02:13,855:INFO:create_model() successfully completed......................................
2022-11-07 21:02:14,015:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:14,015:INFO:Creating metrics dataframe
2022-11-07 21:02:14,051:INFO:Initializing Dummy Regressor
2022-11-07 21:02:14,051:INFO:Total runtime is 0.28876095215479536 minutes
2022-11-07 21:02:14,057:INFO:SubProcess create_model() called ==================================
2022-11-07 21:02:14,057:INFO:Initializing create_model()
2022-11-07 21:02:14,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x133400f70>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:14,057:INFO:Checking exceptions
2022-11-07 21:02:14,061:INFO:Importing libraries
2022-11-07 21:02:14,061:INFO:Copying training dataset
2022-11-07 21:02:14,074:INFO:Defining folds
2022-11-07 21:02:14,074:INFO:Declaring metric variables
2022-11-07 21:02:14,089:INFO:Importing untrained model
2022-11-07 21:02:14,114:INFO:Dummy Regressor Imported successfully
2022-11-07 21:02:14,139:INFO:Cross validation set to False
2022-11-07 21:02:14,140:INFO:Fitting Model
2022-11-07 21:02:14,372:INFO:Initializing predict_model()
2022-11-07 21:02:14,372:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1384de8b0>)
2022-11-07 21:02:14,372:INFO:Checking exceptions
2022-11-07 21:02:14,372:INFO:Preloading libraries
2022-11-07 21:02:14,657:INFO:display_container: 2
2022-11-07 21:02:14,658:INFO:DummyRegressor()
2022-11-07 21:02:14,659:INFO:create_model() successfully completed......................................
2022-11-07 21:02:14,804:INFO:SubProcess create_model() end ==================================
2022-11-07 21:02:14,804:INFO:Creating metrics dataframe
2022-11-07 21:02:14,851:INFO:Initializing create_model()
2022-11-07 21:02:14,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x137c50b80>, estimator=RandomForestRegressor(n_jobs=-1, random_state=23), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:02:14,851:INFO:Checking exceptions
2022-11-07 21:02:14,856:INFO:Importing libraries
2022-11-07 21:02:14,856:INFO:Copying training dataset
2022-11-07 21:02:14,865:INFO:Defining folds
2022-11-07 21:02:14,865:INFO:Declaring metric variables
2022-11-07 21:02:14,865:INFO:Importing untrained model
2022-11-07 21:02:14,865:INFO:Declaring custom model
2022-11-07 21:02:14,866:INFO:Random Forest Regressor Imported successfully
2022-11-07 21:02:14,867:INFO:Cross validation set to False
2022-11-07 21:02:14,867:INFO:Fitting Model
2022-11-07 21:02:16,720:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:02:16,721:INFO:create_model() successfully completed......................................
2022-11-07 21:02:16,922:INFO:master_model_container: 0
2022-11-07 21:02:16,922:INFO:display_container: 2
2022-11-07 21:02:16,923:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:02:16,923:INFO:compare_models() successfully completed......................................
2022-11-07 21:05:40,775:INFO:PyCaret RegressionExperiment
2022-11-07 21:05:40,775:INFO:Logging name: reg-default-name
2022-11-07 21:05:40,775:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-07 21:05:40,775:INFO:version 3.0.0.rc4
2022-11-07 21:05:40,775:INFO:Initializing setup()
2022-11-07 21:05:40,775:INFO:self.USI: 6de4
2022-11-07 21:05:40,775:INFO:self.variable_keys: {'display_container', 'exp_name_log', 'y_test', 'y', 'logging_param', 'USI', '_available_plots', 'X_train', 'fold_shuffle_param', 'gpu_param', 'X_test', 'data', '_all_models', 'seed', 'master_model_container', 'html_param', '_all_models_internal', 'idx', 'target_param', 'memory', 'n_jobs_param', 'fold_generator', 'transform_target_param', 'pipeline', 'exp_id', '_gpu_n_jobs_param', 'y_train', 'transform_target_method_param', 'fold_groups_param', '_ml_usecase', 'log_plots_param', 'X', 'variable_keys', '_all_metrics'}
2022-11-07 21:05:40,775:INFO:Checking environment
2022-11-07 21:05:40,775:INFO:python_version: 3.9.6
2022-11-07 21:05:40,776:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-07 21:05:40,776:INFO:machine: x86_64
2022-11-07 21:05:40,776:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-07 21:05:40,776:INFO:Memory: svmem(total=17179869184, available=7834726400, percent=54.4, used=9308209152, free=438943744, active=7397871616, inactive=7222513664, wired=1910337536)
2022-11-07 21:05:40,776:INFO:Physical Core: 4
2022-11-07 21:05:40,776:INFO:Logical Core: 4
2022-11-07 21:05:40,776:INFO:Checking libraries
2022-11-07 21:05:40,776:INFO:System:
2022-11-07 21:05:40,776:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-07 21:05:40,776:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-07 21:05:40,776:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-07 21:05:40,776:INFO:PyCaret required dependencies:
2022-11-07 21:05:40,776:INFO:                 pip: 21.2.4
2022-11-07 21:05:40,776:INFO:          setuptools: 58.0.4
2022-11-07 21:05:40,777:INFO:             pycaret: 3.0.0rc4
2022-11-07 21:05:40,777:INFO:             IPython: 8.6.0
2022-11-07 21:05:40,777:INFO:          ipywidgets: 8.0.2
2022-11-07 21:05:40,777:INFO:                tqdm: 4.64.1
2022-11-07 21:05:40,777:INFO:               numpy: 1.22.4
2022-11-07 21:05:40,777:INFO:              pandas: 1.4.4
2022-11-07 21:05:40,777:INFO:              jinja2: 3.1.2
2022-11-07 21:05:40,777:INFO:               scipy: 1.8.1
2022-11-07 21:05:40,777:INFO:              joblib: 1.2.0
2022-11-07 21:05:40,777:INFO:             sklearn: 1.1.3
2022-11-07 21:05:40,777:INFO:                pyod: 1.0.6
2022-11-07 21:05:40,777:INFO:            imblearn: 0.9.1
2022-11-07 21:05:40,777:INFO:   category_encoders: 2.5.1.post0
2022-11-07 21:05:40,777:INFO:            lightgbm: 3.3.3
2022-11-07 21:05:40,777:INFO:               numba: 0.55.2
2022-11-07 21:05:40,777:INFO:            requests: 2.28.1
2022-11-07 21:05:40,778:INFO:          matplotlib: 3.6.2
2022-11-07 21:05:40,778:INFO:          scikitplot: 0.3.7
2022-11-07 21:05:40,778:INFO:         yellowbrick: 1.5
2022-11-07 21:05:40,778:INFO:              plotly: 5.11.0
2022-11-07 21:05:40,778:INFO:             kaleido: 0.2.1
2022-11-07 21:05:40,778:INFO:         statsmodels: 0.13.5
2022-11-07 21:05:40,778:INFO:              sktime: 0.13.4
2022-11-07 21:05:40,778:INFO:               tbats: 1.1.1
2022-11-07 21:05:40,778:INFO:            pmdarima: 1.8.5
2022-11-07 21:05:40,778:INFO:              psutil: 5.9.3
2022-11-07 21:05:40,778:INFO:PyCaret optional dependencies:
2022-11-07 21:05:40,778:INFO:                shap: Not installed
2022-11-07 21:05:40,778:INFO:           interpret: Not installed
2022-11-07 21:05:40,778:INFO:                umap: Not installed
2022-11-07 21:05:40,778:INFO:    pandas_profiling: Not installed
2022-11-07 21:05:40,779:INFO:  explainerdashboard: Not installed
2022-11-07 21:05:40,779:INFO:             autoviz: Not installed
2022-11-07 21:05:40,779:INFO:           fairlearn: Not installed
2022-11-07 21:05:40,779:INFO:             xgboost: Not installed
2022-11-07 21:05:40,779:INFO:            catboost: Not installed
2022-11-07 21:05:40,779:INFO:              kmodes: Not installed
2022-11-07 21:05:40,779:INFO:             mlxtend: Not installed
2022-11-07 21:05:40,779:INFO:       statsforecast: Not installed
2022-11-07 21:05:40,779:INFO:        tune_sklearn: Not installed
2022-11-07 21:05:40,779:INFO:                 ray: Not installed
2022-11-07 21:05:40,779:INFO:            hyperopt: Not installed
2022-11-07 21:05:40,779:INFO:              optuna: Not installed
2022-11-07 21:05:40,779:INFO:               skopt: Not installed
2022-11-07 21:05:40,779:INFO:              mlflow: Not installed
2022-11-07 21:05:40,779:INFO:              gradio: Not installed
2022-11-07 21:05:40,779:INFO:             fastapi: Not installed
2022-11-07 21:05:40,780:INFO:             uvicorn: Not installed
2022-11-07 21:05:40,780:INFO:              m2cgen: Not installed
2022-11-07 21:05:40,780:INFO:           evidently: Not installed
2022-11-07 21:05:40,780:INFO:                nltk: Not installed
2022-11-07 21:05:40,780:INFO:            pyLDAvis: Not installed
2022-11-07 21:05:40,780:INFO:              gensim: Not installed
2022-11-07 21:05:40,780:INFO:               spacy: 3.4.2
2022-11-07 21:05:40,780:INFO:           wordcloud: Not installed
2022-11-07 21:05:40,780:INFO:            textblob: Not installed
2022-11-07 21:05:40,780:INFO:               fugue: Not installed
2022-11-07 21:05:40,780:INFO:           streamlit: Not installed
2022-11-07 21:05:40,780:INFO:             prophet: Not installed
2022-11-07 21:05:40,780:INFO:None
2022-11-07 21:05:40,780:INFO:Set up data.
2022-11-07 21:05:40,793:INFO:Set up train/test split.
2022-11-07 21:05:40,801:INFO:Set up index.
2022-11-07 21:05:40,801:INFO:Set up folding strategy.
2022-11-07 21:05:40,801:INFO:Assigning column types.
2022-11-07 21:05:40,806:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-07 21:05:40,807:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-07 21:05:40,815:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:05:40,825:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:05:40,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,006:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,009:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,016:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,023:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,191:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,195:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-07 21:05:41,201:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,213:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,493:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,502:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,513:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:41,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:41,776:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-07 21:05:41,819:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,127:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,145:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,329:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-07 21:05:42,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,684:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-07 21:05:42,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:42,770:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-07 21:05:42,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:43,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-07 21:05:43,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,295:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-07 21:05:43,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:43,692:INFO:Preparing preprocessing pipeline...
2022-11-07 21:05:43,693:INFO:Set up simple imputation.
2022-11-07 21:05:43,703:INFO:Set up encoding of categorical features.
2022-11-07 21:05:43,704:INFO:Set up variance threshold.
2022-11-07 21:05:44,253:INFO:Finished creating preprocessing pipeline.
2022-11-07 21:05:44,265:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-07 21:05:44,265:INFO:Creating final display dataframe.
2022-11-07 21:05:45,934:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14464, 8)
4           Train data shape        (10124, 8)
5            Test data shape         (4340, 8)
6           Numeric features                 5
7       Categorical features                 2
8                 Preprocess              True
9            Imputation type            simple
10        Numeric imputation              mean
11    Categorical imputation          constant
12  Maximum one-hot encoding                 5
13           Encoding method              None
14    Low variance threshold                 0
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              6de4
2022-11-07 21:05:46,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:46,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:46,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:46,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-07 21:05:46,368:INFO:setup() successfully completed in 5.6s...............
2022-11-07 21:05:46,402:INFO:Initializing compare_models()
2022-11-07 21:05:46,403:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-07 21:05:46,407:INFO:Checking exceptions
2022-11-07 21:05:46,422:INFO:Preparing display monitor
2022-11-07 21:05:46,511:INFO:Initializing Linear Regression
2022-11-07 21:05:46,511:INFO:Total runtime is 2.682209014892578e-06 minutes
2022-11-07 21:05:46,519:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:46,520:INFO:Initializing create_model()
2022-11-07 21:05:46,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:46,520:INFO:Checking exceptions
2022-11-07 21:05:46,524:INFO:Importing libraries
2022-11-07 21:05:46,524:INFO:Copying training dataset
2022-11-07 21:05:46,533:INFO:Defining folds
2022-11-07 21:05:46,533:INFO:Declaring metric variables
2022-11-07 21:05:46,543:INFO:Importing untrained model
2022-11-07 21:05:46,551:INFO:Linear Regression Imported successfully
2022-11-07 21:05:46,562:INFO:Cross validation set to False
2022-11-07 21:05:46,562:INFO:Fitting Model
2022-11-07 21:05:47,028:INFO:Initializing predict_model()
2022-11-07 21:05:47,028:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...,
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x133682670>)
2022-11-07 21:05:47,028:INFO:Checking exceptions
2022-11-07 21:05:47,029:INFO:Preloading libraries
2022-11-07 21:05:47,269:INFO:display_container: 2
2022-11-07 21:05:47,270:INFO:LinearRegression(n_jobs=-1)
2022-11-07 21:05:47,270:INFO:create_model() successfully completed......................................
2022-11-07 21:05:47,409:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:47,409:INFO:Creating metrics dataframe
2022-11-07 21:05:47,422:INFO:Initializing Lasso Regression
2022-11-07 21:05:47,423:INFO:Total runtime is 0.015198298295338948 minutes
2022-11-07 21:05:47,427:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:47,427:INFO:Initializing create_model()
2022-11-07 21:05:47,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:47,428:INFO:Checking exceptions
2022-11-07 21:05:47,433:INFO:Importing libraries
2022-11-07 21:05:47,433:INFO:Copying training dataset
2022-11-07 21:05:47,442:INFO:Defining folds
2022-11-07 21:05:47,442:INFO:Declaring metric variables
2022-11-07 21:05:47,447:INFO:Importing untrained model
2022-11-07 21:05:47,469:INFO:Lasso Regression Imported successfully
2022-11-07 21:05:47,475:INFO:Cross validation set to False
2022-11-07 21:05:47,476:INFO:Fitting Model
2022-11-07 21:05:47,670:INFO:Initializing predict_model()
2022-11-07 21:05:47,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...tant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137b093a0>)
2022-11-07 21:05:47,670:INFO:Checking exceptions
2022-11-07 21:05:47,670:INFO:Preloading libraries
2022-11-07 21:05:47,933:INFO:display_container: 2
2022-11-07 21:05:47,944:INFO:Lasso(random_state=23)
2022-11-07 21:05:47,945:INFO:create_model() successfully completed......................................
2022-11-07 21:05:48,093:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:48,094:INFO:Creating metrics dataframe
2022-11-07 21:05:48,119:INFO:Initializing Ridge Regression
2022-11-07 21:05:48,119:INFO:Total runtime is 0.026805380980173744 minutes
2022-11-07 21:05:48,124:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:48,124:INFO:Initializing create_model()
2022-11-07 21:05:48,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:48,125:INFO:Checking exceptions
2022-11-07 21:05:48,128:INFO:Importing libraries
2022-11-07 21:05:48,128:INFO:Copying training dataset
2022-11-07 21:05:48,137:INFO:Defining folds
2022-11-07 21:05:48,137:INFO:Declaring metric variables
2022-11-07 21:05:48,142:INFO:Importing untrained model
2022-11-07 21:05:48,147:INFO:Ridge Regression Imported successfully
2022-11-07 21:05:48,175:INFO:Cross validation set to False
2022-11-07 21:05:48,175:INFO:Fitting Model
2022-11-07 21:05:48,340:INFO:Initializing predict_model()
2022-11-07 21:05:48,340:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...tant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x138555d30>)
2022-11-07 21:05:48,340:INFO:Checking exceptions
2022-11-07 21:05:48,341:INFO:Preloading libraries
2022-11-07 21:05:48,646:INFO:display_container: 2
2022-11-07 21:05:48,656:INFO:Ridge(random_state=23)
2022-11-07 21:05:48,657:INFO:create_model() successfully completed......................................
2022-11-07 21:05:48,816:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:48,816:INFO:Creating metrics dataframe
2022-11-07 21:05:48,862:INFO:Initializing Elastic Net
2022-11-07 21:05:48,862:INFO:Total runtime is 0.03919155200322469 minutes
2022-11-07 21:05:48,871:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:48,871:INFO:Initializing create_model()
2022-11-07 21:05:48,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:48,872:INFO:Checking exceptions
2022-11-07 21:05:48,877:INFO:Importing libraries
2022-11-07 21:05:48,877:INFO:Copying training dataset
2022-11-07 21:05:48,886:INFO:Defining folds
2022-11-07 21:05:48,887:INFO:Declaring metric variables
2022-11-07 21:05:48,892:INFO:Importing untrained model
2022-11-07 21:05:48,896:INFO:Elastic Net Imported successfully
2022-11-07 21:05:48,906:INFO:Cross validation set to False
2022-11-07 21:05:48,906:INFO:Fitting Model
2022-11-07 21:05:49,093:INFO:Initializing predict_model()
2022-11-07 21:05:49,094:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...,
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137b09040>)
2022-11-07 21:05:49,094:INFO:Checking exceptions
2022-11-07 21:05:49,094:INFO:Preloading libraries
2022-11-07 21:05:49,381:INFO:display_container: 2
2022-11-07 21:05:49,384:INFO:ElasticNet(random_state=23)
2022-11-07 21:05:49,385:INFO:create_model() successfully completed......................................
2022-11-07 21:05:49,514:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:49,515:INFO:Creating metrics dataframe
2022-11-07 21:05:49,531:INFO:Initializing Least Angle Regression
2022-11-07 21:05:49,532:INFO:Total runtime is 0.050351047515869135 minutes
2022-11-07 21:05:49,538:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:49,539:INFO:Initializing create_model()
2022-11-07 21:05:49,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:49,539:INFO:Checking exceptions
2022-11-07 21:05:49,542:INFO:Importing libraries
2022-11-07 21:05:49,543:INFO:Copying training dataset
2022-11-07 21:05:49,551:INFO:Defining folds
2022-11-07 21:05:49,551:INFO:Declaring metric variables
2022-11-07 21:05:49,557:INFO:Importing untrained model
2022-11-07 21:05:49,562:INFO:Least Angle Regression Imported successfully
2022-11-07 21:05:49,592:INFO:Cross validation set to False
2022-11-07 21:05:49,592:INFO:Fitting Model
2022-11-07 21:05:49,741:INFO:Initializing predict_model()
2022-11-07 21:05:49,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...stant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137b090d0>)
2022-11-07 21:05:49,741:INFO:Checking exceptions
2022-11-07 21:05:49,742:INFO:Preloading libraries
2022-11-07 21:05:49,999:INFO:display_container: 2
2022-11-07 21:05:50,002:INFO:Lars(random_state=23)
2022-11-07 21:05:50,002:INFO:create_model() successfully completed......................................
2022-11-07 21:05:50,146:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:50,146:INFO:Creating metrics dataframe
2022-11-07 21:05:50,161:INFO:Initializing Lasso Least Angle Regression
2022-11-07 21:05:50,161:INFO:Total runtime is 0.06084640026092529 minutes
2022-11-07 21:05:50,168:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:50,170:INFO:Initializing create_model()
2022-11-07 21:05:50,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:50,170:INFO:Checking exceptions
2022-11-07 21:05:50,174:INFO:Importing libraries
2022-11-07 21:05:50,174:INFO:Copying training dataset
2022-11-07 21:05:50,180:INFO:Defining folds
2022-11-07 21:05:50,180:INFO:Declaring metric variables
2022-11-07 21:05:50,199:INFO:Importing untrained model
2022-11-07 21:05:50,206:INFO:Lasso Least Angle Regression Imported successfully
2022-11-07 21:05:50,211:INFO:Cross validation set to False
2022-11-07 21:05:50,212:INFO:Fitting Model
2022-11-07 21:05:50,365:INFO:Initializing predict_model()
2022-11-07 21:05:50,365:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x138555d30>)
2022-11-07 21:05:50,365:INFO:Checking exceptions
2022-11-07 21:05:50,365:INFO:Preloading libraries
2022-11-07 21:05:50,661:INFO:display_container: 2
2022-11-07 21:05:50,663:INFO:LassoLars(random_state=23)
2022-11-07 21:05:50,663:INFO:create_model() successfully completed......................................
2022-11-07 21:05:50,786:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:50,786:INFO:Creating metrics dataframe
2022-11-07 21:05:50,803:INFO:Initializing Orthogonal Matching Pursuit
2022-11-07 21:05:50,804:INFO:Total runtime is 0.07155841588973999 minutes
2022-11-07 21:05:50,810:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:50,810:INFO:Initializing create_model()
2022-11-07 21:05:50,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:50,810:INFO:Checking exceptions
2022-11-07 21:05:50,814:INFO:Importing libraries
2022-11-07 21:05:50,814:INFO:Copying training dataset
2022-11-07 21:05:50,823:INFO:Defining folds
2022-11-07 21:05:50,823:INFO:Declaring metric variables
2022-11-07 21:05:50,828:INFO:Importing untrained model
2022-11-07 21:05:50,833:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-07 21:05:50,841:INFO:Cross validation set to False
2022-11-07 21:05:50,841:INFO:Fitting Model
2022-11-07 21:05:51,034:INFO:Initializing predict_model()
2022-11-07 21:05:51,034:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...,
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137b09040>)
2022-11-07 21:05:51,035:INFO:Checking exceptions
2022-11-07 21:05:51,036:INFO:Preloading libraries
2022-11-07 21:05:51,281:INFO:display_container: 2
2022-11-07 21:05:51,283:INFO:OrthogonalMatchingPursuit()
2022-11-07 21:05:51,283:INFO:create_model() successfully completed......................................
2022-11-07 21:05:51,423:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:51,423:INFO:Creating metrics dataframe
2022-11-07 21:05:51,444:INFO:Initializing Bayesian Ridge
2022-11-07 21:05:51,444:INFO:Total runtime is 0.08222233057022095 minutes
2022-11-07 21:05:51,448:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:51,449:INFO:Initializing create_model()
2022-11-07 21:05:51,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:51,449:INFO:Checking exceptions
2022-11-07 21:05:51,453:INFO:Importing libraries
2022-11-07 21:05:51,453:INFO:Copying training dataset
2022-11-07 21:05:51,460:INFO:Defining folds
2022-11-07 21:05:51,461:INFO:Declaring metric variables
2022-11-07 21:05:51,465:INFO:Importing untrained model
2022-11-07 21:05:51,474:INFO:Bayesian Ridge Imported successfully
2022-11-07 21:05:51,479:INFO:Cross validation set to False
2022-11-07 21:05:51,480:INFO:Fitting Model
2022-11-07 21:05:51,650:INFO:Initializing predict_model()
2022-11-07 21:05:51,650:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...e='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137b090d0>)
2022-11-07 21:05:51,650:INFO:Checking exceptions
2022-11-07 21:05:51,650:INFO:Preloading libraries
2022-11-07 21:05:51,924:INFO:display_container: 2
2022-11-07 21:05:51,926:INFO:BayesianRidge()
2022-11-07 21:05:51,926:INFO:create_model() successfully completed......................................
2022-11-07 21:05:52,056:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:52,057:INFO:Creating metrics dataframe
2022-11-07 21:05:52,080:INFO:Initializing Passive Aggressive Regressor
2022-11-07 21:05:52,080:INFO:Total runtime is 0.09282719691594442 minutes
2022-11-07 21:05:52,085:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:52,086:INFO:Initializing create_model()
2022-11-07 21:05:52,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:52,086:INFO:Checking exceptions
2022-11-07 21:05:52,090:INFO:Importing libraries
2022-11-07 21:05:52,090:INFO:Copying training dataset
2022-11-07 21:05:52,098:INFO:Defining folds
2022-11-07 21:05:52,099:INFO:Declaring metric variables
2022-11-07 21:05:52,111:INFO:Importing untrained model
2022-11-07 21:05:52,116:INFO:Passive Aggressive Regressor Imported successfully
2022-11-07 21:05:52,125:INFO:Cross validation set to False
2022-11-07 21:05:52,125:INFO:Fitting Model
2022-11-07 21:05:52,296:INFO:Initializing predict_model()
2022-11-07 21:05:52,297:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13355e040>)
2022-11-07 21:05:52,297:INFO:Checking exceptions
2022-11-07 21:05:52,297:INFO:Preloading libraries
2022-11-07 21:05:52,541:INFO:display_container: 2
2022-11-07 21:05:52,543:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-07 21:05:52,543:INFO:create_model() successfully completed......................................
2022-11-07 21:05:52,664:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:52,665:INFO:Creating metrics dataframe
2022-11-07 21:05:52,681:INFO:Initializing Huber Regressor
2022-11-07 21:05:52,681:INFO:Total runtime is 0.10283361673355103 minutes
2022-11-07 21:05:52,686:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:52,686:INFO:Initializing create_model()
2022-11-07 21:05:52,686:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:52,687:INFO:Checking exceptions
2022-11-07 21:05:52,696:INFO:Importing libraries
2022-11-07 21:05:52,696:INFO:Copying training dataset
2022-11-07 21:05:52,702:INFO:Defining folds
2022-11-07 21:05:52,702:INFO:Declaring metric variables
2022-11-07 21:05:52,709:INFO:Importing untrained model
2022-11-07 21:05:52,713:INFO:Huber Regressor Imported successfully
2022-11-07 21:05:52,718:INFO:Cross validation set to False
2022-11-07 21:05:52,719:INFO:Fitting Model
2022-11-07 21:05:53,093:INFO:Initializing predict_model()
2022-11-07 21:05:53,093:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13f2765e0>)
2022-11-07 21:05:53,093:INFO:Checking exceptions
2022-11-07 21:05:53,093:INFO:Preloading libraries
2022-11-07 21:05:53,340:INFO:display_container: 2
2022-11-07 21:05:53,342:INFO:HuberRegressor()
2022-11-07 21:05:53,342:INFO:create_model() successfully completed......................................
2022-11-07 21:05:53,480:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:53,480:INFO:Creating metrics dataframe
2022-11-07 21:05:53,496:INFO:Initializing K Neighbors Regressor
2022-11-07 21:05:53,497:INFO:Total runtime is 0.11643358071645102 minutes
2022-11-07 21:05:53,501:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:53,502:INFO:Initializing create_model()
2022-11-07 21:05:53,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:53,502:INFO:Checking exceptions
2022-11-07 21:05:53,508:INFO:Importing libraries
2022-11-07 21:05:53,508:INFO:Copying training dataset
2022-11-07 21:05:53,514:INFO:Defining folds
2022-11-07 21:05:53,514:INFO:Declaring metric variables
2022-11-07 21:05:53,518:INFO:Importing untrained model
2022-11-07 21:05:53,532:INFO:K Neighbors Regressor Imported successfully
2022-11-07 21:05:53,539:INFO:Cross validation set to False
2022-11-07 21:05:53,541:INFO:Fitting Model
2022-11-07 21:05:53,700:INFO:Initializing predict_model()
2022-11-07 21:05:53,700:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13f276b80>)
2022-11-07 21:05:53,700:INFO:Checking exceptions
2022-11-07 21:05:53,700:INFO:Preloading libraries
2022-11-07 21:05:53,958:INFO:display_container: 2
2022-11-07 21:05:53,960:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-07 21:05:53,960:INFO:create_model() successfully completed......................................
2022-11-07 21:05:54,094:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:54,094:INFO:Creating metrics dataframe
2022-11-07 21:05:54,115:INFO:Initializing Decision Tree Regressor
2022-11-07 21:05:54,116:INFO:Total runtime is 0.12675104538599652 minutes
2022-11-07 21:05:54,120:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:54,121:INFO:Initializing create_model()
2022-11-07 21:05:54,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:54,122:INFO:Checking exceptions
2022-11-07 21:05:54,126:INFO:Importing libraries
2022-11-07 21:05:54,126:INFO:Copying training dataset
2022-11-07 21:05:54,132:INFO:Defining folds
2022-11-07 21:05:54,133:INFO:Declaring metric variables
2022-11-07 21:05:54,137:INFO:Importing untrained model
2022-11-07 21:05:54,144:INFO:Decision Tree Regressor Imported successfully
2022-11-07 21:05:54,149:INFO:Cross validation set to False
2022-11-07 21:05:54,150:INFO:Fitting Model
2022-11-07 21:05:54,379:INFO:Initializing predict_model()
2022-11-07 21:05:54,379:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13f276430>)
2022-11-07 21:05:54,379:INFO:Checking exceptions
2022-11-07 21:05:54,379:INFO:Preloading libraries
2022-11-07 21:05:54,622:INFO:display_container: 2
2022-11-07 21:05:54,625:INFO:DecisionTreeRegressor(random_state=23)
2022-11-07 21:05:54,626:INFO:create_model() successfully completed......................................
2022-11-07 21:05:54,784:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:54,784:INFO:Creating metrics dataframe
2022-11-07 21:05:54,802:INFO:Initializing Random Forest Regressor
2022-11-07 21:05:54,803:INFO:Total runtime is 0.13819775183995567 minutes
2022-11-07 21:05:54,810:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:54,810:INFO:Initializing create_model()
2022-11-07 21:05:54,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:54,810:INFO:Checking exceptions
2022-11-07 21:05:54,814:INFO:Importing libraries
2022-11-07 21:05:54,814:INFO:Copying training dataset
2022-11-07 21:05:54,821:INFO:Defining folds
2022-11-07 21:05:54,821:INFO:Declaring metric variables
2022-11-07 21:05:54,837:INFO:Importing untrained model
2022-11-07 21:05:54,845:INFO:Random Forest Regressor Imported successfully
2022-11-07 21:05:54,851:INFO:Cross validation set to False
2022-11-07 21:05:54,851:INFO:Fitting Model
2022-11-07 21:05:57,324:INFO:Initializing predict_model()
2022-11-07 21:05:57,326:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137b093a0>)
2022-11-07 21:05:57,326:INFO:Checking exceptions
2022-11-07 21:05:57,326:INFO:Preloading libraries
2022-11-07 21:05:57,599:INFO:display_container: 2
2022-11-07 21:05:57,601:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:05:57,602:INFO:create_model() successfully completed......................................
2022-11-07 21:05:57,734:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:57,734:INFO:Creating metrics dataframe
2022-11-07 21:05:57,752:INFO:Initializing Extra Trees Regressor
2022-11-07 21:05:57,752:INFO:Total runtime is 0.18735546668370567 minutes
2022-11-07 21:05:57,757:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:57,757:INFO:Initializing create_model()
2022-11-07 21:05:57,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:57,757:INFO:Checking exceptions
2022-11-07 21:05:57,762:INFO:Importing libraries
2022-11-07 21:05:57,762:INFO:Copying training dataset
2022-11-07 21:05:57,769:INFO:Defining folds
2022-11-07 21:05:57,769:INFO:Declaring metric variables
2022-11-07 21:05:57,775:INFO:Importing untrained model
2022-11-07 21:05:57,785:INFO:Extra Trees Regressor Imported successfully
2022-11-07 21:05:57,791:INFO:Cross validation set to False
2022-11-07 21:05:57,791:INFO:Fitting Model
2022-11-07 21:05:58,821:INFO:Initializing predict_model()
2022-11-07 21:05:58,821:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1379ba3a0>)
2022-11-07 21:05:58,821:INFO:Checking exceptions
2022-11-07 21:05:58,822:INFO:Preloading libraries
2022-11-07 21:05:59,154:INFO:display_container: 2
2022-11-07 21:05:59,156:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:05:59,156:INFO:create_model() successfully completed......................................
2022-11-07 21:05:59,289:INFO:SubProcess create_model() end ==================================
2022-11-07 21:05:59,290:INFO:Creating metrics dataframe
2022-11-07 21:05:59,309:INFO:Initializing AdaBoost Regressor
2022-11-07 21:05:59,309:INFO:Total runtime is 0.2133009990056356 minutes
2022-11-07 21:05:59,325:INFO:SubProcess create_model() called ==================================
2022-11-07 21:05:59,325:INFO:Initializing create_model()
2022-11-07 21:05:59,325:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:05:59,325:INFO:Checking exceptions
2022-11-07 21:05:59,330:INFO:Importing libraries
2022-11-07 21:05:59,331:INFO:Copying training dataset
2022-11-07 21:05:59,339:INFO:Defining folds
2022-11-07 21:05:59,339:INFO:Declaring metric variables
2022-11-07 21:05:59,346:INFO:Importing untrained model
2022-11-07 21:05:59,351:INFO:AdaBoost Regressor Imported successfully
2022-11-07 21:05:59,356:INFO:Cross validation set to False
2022-11-07 21:05:59,356:INFO:Fitting Model
2022-11-07 21:06:00,090:INFO:Initializing predict_model()
2022-11-07 21:06:00,090:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13f276940>)
2022-11-07 21:06:00,090:INFO:Checking exceptions
2022-11-07 21:06:00,090:INFO:Preloading libraries
2022-11-07 21:06:00,335:INFO:display_container: 2
2022-11-07 21:06:00,337:INFO:AdaBoostRegressor(random_state=23)
2022-11-07 21:06:00,337:INFO:create_model() successfully completed......................................
2022-11-07 21:06:00,470:INFO:SubProcess create_model() end ==================================
2022-11-07 21:06:00,470:INFO:Creating metrics dataframe
2022-11-07 21:06:00,493:INFO:Initializing Gradient Boosting Regressor
2022-11-07 21:06:00,494:INFO:Total runtime is 0.2330502986907959 minutes
2022-11-07 21:06:00,500:INFO:SubProcess create_model() called ==================================
2022-11-07 21:06:00,501:INFO:Initializing create_model()
2022-11-07 21:06:00,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:06:00,501:INFO:Checking exceptions
2022-11-07 21:06:00,505:INFO:Importing libraries
2022-11-07 21:06:00,505:INFO:Copying training dataset
2022-11-07 21:06:00,511:INFO:Defining folds
2022-11-07 21:06:00,511:INFO:Declaring metric variables
2022-11-07 21:06:00,518:INFO:Importing untrained model
2022-11-07 21:06:00,522:INFO:Gradient Boosting Regressor Imported successfully
2022-11-07 21:06:00,528:INFO:Cross validation set to False
2022-11-07 21:06:00,529:INFO:Fitting Model
2022-11-07 21:06:02,083:INFO:Initializing predict_model()
2022-11-07 21:06:02,083:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1379ba3a0>)
2022-11-07 21:06:02,083:INFO:Checking exceptions
2022-11-07 21:06:02,083:INFO:Preloading libraries
2022-11-07 21:06:02,310:INFO:display_container: 2
2022-11-07 21:06:02,312:INFO:GradientBoostingRegressor(random_state=23)
2022-11-07 21:06:02,312:INFO:create_model() successfully completed......................................
2022-11-07 21:06:02,445:INFO:SubProcess create_model() end ==================================
2022-11-07 21:06:02,445:INFO:Creating metrics dataframe
2022-11-07 21:06:02,472:INFO:Initializing Light Gradient Boosting Machine
2022-11-07 21:06:02,472:INFO:Total runtime is 0.266023580233256 minutes
2022-11-07 21:06:02,477:INFO:SubProcess create_model() called ==================================
2022-11-07 21:06:02,478:INFO:Initializing create_model()
2022-11-07 21:06:02,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:06:02,478:INFO:Checking exceptions
2022-11-07 21:06:02,490:INFO:Importing libraries
2022-11-07 21:06:02,490:INFO:Copying training dataset
2022-11-07 21:06:02,496:INFO:Defining folds
2022-11-07 21:06:02,496:INFO:Declaring metric variables
2022-11-07 21:06:02,504:INFO:Importing untrained model
2022-11-07 21:06:02,510:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-07 21:06:02,519:INFO:Cross validation set to False
2022-11-07 21:06:02,519:INFO:Fitting Model
2022-11-07 21:06:03,207:INFO:Initializing predict_model()
2022-11-07 21:06:03,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13f2764c0>)
2022-11-07 21:06:03,208:INFO:Checking exceptions
2022-11-07 21:06:03,208:INFO:Preloading libraries
2022-11-07 21:06:03,647:INFO:display_container: 2
2022-11-07 21:06:03,652:INFO:LGBMRegressor(random_state=23)
2022-11-07 21:06:03,652:INFO:create_model() successfully completed......................................
2022-11-07 21:06:03,787:INFO:SubProcess create_model() end ==================================
2022-11-07 21:06:03,788:INFO:Creating metrics dataframe
2022-11-07 21:06:03,806:INFO:Initializing Dummy Regressor
2022-11-07 21:06:03,806:INFO:Total runtime is 0.288254714012146 minutes
2022-11-07 21:06:03,810:INFO:SubProcess create_model() called ==================================
2022-11-07 21:06:03,811:INFO:Initializing create_model()
2022-11-07 21:06:03,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x137816310>, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:06:03,811:INFO:Checking exceptions
2022-11-07 21:06:03,815:INFO:Importing libraries
2022-11-07 21:06:03,815:INFO:Copying training dataset
2022-11-07 21:06:03,823:INFO:Defining folds
2022-11-07 21:06:03,823:INFO:Declaring metric variables
2022-11-07 21:06:03,828:INFO:Importing untrained model
2022-11-07 21:06:03,836:INFO:Dummy Regressor Imported successfully
2022-11-07 21:06:03,843:INFO:Cross validation set to False
2022-11-07 21:06:03,843:INFO:Fitting Model
2022-11-07 21:06:03,992:INFO:Initializing predict_model()
2022-11-07 21:06:03,992:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...='constant',
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13f276b80>)
2022-11-07 21:06:03,992:INFO:Checking exceptions
2022-11-07 21:06:03,993:INFO:Preloading libraries
2022-11-07 21:06:04,224:INFO:display_container: 2
2022-11-07 21:06:04,226:INFO:DummyRegressor()
2022-11-07 21:06:04,226:INFO:create_model() successfully completed......................................
2022-11-07 21:06:04,371:INFO:SubProcess create_model() end ==================================
2022-11-07 21:06:04,371:INFO:Creating metrics dataframe
2022-11-07 21:06:04,412:INFO:Initializing create_model()
2022-11-07 21:06:04,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=RandomForestRegressor(n_jobs=-1, random_state=23), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-07 21:06:04,412:INFO:Checking exceptions
2022-11-07 21:06:04,418:INFO:Importing libraries
2022-11-07 21:06:04,418:INFO:Copying training dataset
2022-11-07 21:06:04,425:INFO:Defining folds
2022-11-07 21:06:04,425:INFO:Declaring metric variables
2022-11-07 21:06:04,425:INFO:Importing untrained model
2022-11-07 21:06:04,426:INFO:Declaring custom model
2022-11-07 21:06:04,426:INFO:Random Forest Regressor Imported successfully
2022-11-07 21:06:04,429:INFO:Cross validation set to False
2022-11-07 21:06:04,429:INFO:Fitting Model
2022-11-07 21:06:06,619:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:06:06,619:INFO:create_model() successfully completed......................................
2022-11-07 21:06:06,808:INFO:master_model_container: 0
2022-11-07 21:06:06,808:INFO:display_container: 2
2022-11-07 21:06:06,808:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:06:06,809:INFO:compare_models() successfully completed......................................
2022-11-07 21:06:07,013:INFO:Initializing create_model()
2022-11-07 21:06:07,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=True, kwargs={})
2022-11-07 21:06:07,014:INFO:Checking exceptions
2022-11-07 21:06:07,099:INFO:Importing libraries
2022-11-07 21:06:07,100:INFO:Copying training dataset
2022-11-07 21:06:07,118:INFO:Defining folds
2022-11-07 21:06:07,118:INFO:Declaring metric variables
2022-11-07 21:06:07,142:INFO:Importing untrained model
2022-11-07 21:06:07,167:INFO:Random Forest Regressor Imported successfully
2022-11-07 21:06:07,193:INFO:Starting cross validation
2022-11-07 21:06:07,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-07 21:06:37,442:INFO:Calculating mean and std
2022-11-07 21:06:37,447:INFO:Creating metrics dataframe
2022-11-07 21:06:37,459:INFO:Finalizing model
2022-11-07 21:06:39,824:INFO:Initializing predict_model()
2022-11-07 21:06:39,824:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['unit_price_USD', 'week_of_year',
                                             'day_of_month', 'day_of_year',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=SimpleImputer(...
                                                              strategy='constant'))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13355e040>)
2022-11-07 21:06:39,824:INFO:Checking exceptions
2022-11-07 21:06:39,825:INFO:Preloading libraries
2022-11-07 21:06:39,825:INFO:Set up data.
2022-11-07 21:06:39,832:INFO:Set up index.
2022-11-07 21:06:40,738:INFO:Uploading results into container
2022-11-07 21:06:40,738:INFO:Uploading model into container now
2022-11-07 21:06:40,778:INFO:master_model_container: 1
2022-11-07 21:06:40,778:INFO:display_container: 3
2022-11-07 21:06:40,779:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-07 21:06:40,779:INFO:create_model() successfully completed......................................
2022-11-07 21:06:41,172:INFO:Initializing plot_model()
2022-11-07 21:06:41,172:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestRegressor(n_jobs=-1, random_state=23), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x133d3d2b0>, system=True)
2022-11-07 21:06:41,172:INFO:Checking exceptions
2022-11-07 21:06:41,219:INFO:Preloading libraries
2022-11-07 21:06:41,317:INFO:Copying training dataset
2022-11-07 21:06:41,318:INFO:Plot type: feature
2022-11-07 21:06:41,318:WARNING:No coef_ found. Trying feature_importances_
2022-11-07 21:06:41,798:INFO:Visual Rendered Successfully
2022-11-07 21:06:41,955:INFO:plot_model() successfully completed......................................
2022-11-08 00:02:03,212:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-08 00:02:03,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-08 00:02:03,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-08 00:02:03,213:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-08 00:02:04,767:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-11-08 00:02:05,054:INFO:PyCaret RegressionExperiment
2022-11-08 00:02:05,054:INFO:Logging name: reg-default-name
2022-11-08 00:02:05,054:INFO:ML Usecase: MLUsecase.REGRESSION
2022-11-08 00:02:05,054:INFO:version 3.0.0.rc4
2022-11-08 00:02:05,054:INFO:Initializing setup()
2022-11-08 00:02:05,054:INFO:self.USI: edec
2022-11-08 00:02:05,054:INFO:self.variable_keys: {'_ml_usecase', '_all_models', 'fold_generator', 'seed', 'idx', '_all_metrics', 'y_test', 'pipeline', 'display_container', 'X_train', 'master_model_container', 'html_param', 'transform_target_method_param', '_available_plots', 'memory', 'target_param', 'fold_shuffle_param', 'n_jobs_param', 'USI', 'log_plots_param', 'X', 'exp_id', 'variable_keys', 'data', 'y_train', 'exp_name_log', 'transform_target_param', '_gpu_n_jobs_param', 'logging_param', 'X_test', '_all_models_internal', 'gpu_param', 'fold_groups_param', 'y'}
2022-11-08 00:02:05,054:INFO:Checking environment
2022-11-08 00:02:05,054:INFO:python_version: 3.9.6
2022-11-08 00:02:05,054:INFO:python_build: ('default', 'Sep 26 2022 11:37:49')
2022-11-08 00:02:05,055:INFO:machine: x86_64
2022-11-08 00:02:05,055:INFO:platform: macOS-13.0-x86_64-i386-64bit
2022-11-08 00:02:05,055:INFO:Memory: svmem(total=17179869184, available=7467069440, percent=56.5, used=8925356032, free=473624576, active=6994808832, inactive=6897897472, wired=1930547200)
2022-11-08 00:02:05,055:INFO:Physical Core: 4
2022-11-08 00:02:05,055:INFO:Logical Core: 4
2022-11-08 00:02:05,055:INFO:Checking libraries
2022-11-08 00:02:05,055:INFO:System:
2022-11-08 00:02:05,055:INFO:    python: 3.9.6 (default, Sep 26 2022, 11:37:49)  [Clang 14.0.0 (clang-1400.0.29.202)]
2022-11-08 00:02:05,055:INFO:executable: /Library/Developer/CommandLineTools/usr/bin/python3
2022-11-08 00:02:05,055:INFO:   machine: macOS-13.0-x86_64-i386-64bit
2022-11-08 00:02:05,055:INFO:PyCaret required dependencies:
2022-11-08 00:02:05,056:INFO:                 pip: 21.2.4
2022-11-08 00:02:05,056:INFO:          setuptools: 58.0.4
2022-11-08 00:02:05,056:INFO:             pycaret: 3.0.0rc4
2022-11-08 00:02:05,056:INFO:             IPython: 8.6.0
2022-11-08 00:02:05,056:INFO:          ipywidgets: 8.0.2
2022-11-08 00:02:05,056:INFO:                tqdm: 4.64.1
2022-11-08 00:02:05,056:INFO:               numpy: 1.22.4
2022-11-08 00:02:05,056:INFO:              pandas: 1.4.4
2022-11-08 00:02:05,056:INFO:              jinja2: 3.1.2
2022-11-08 00:02:05,056:INFO:               scipy: 1.8.1
2022-11-08 00:02:05,056:INFO:              joblib: 1.2.0
2022-11-08 00:02:05,056:INFO:             sklearn: 1.1.3
2022-11-08 00:02:05,056:INFO:                pyod: 1.0.6
2022-11-08 00:02:05,056:INFO:            imblearn: 0.9.1
2022-11-08 00:02:05,057:INFO:   category_encoders: 2.5.1.post0
2022-11-08 00:02:05,057:INFO:            lightgbm: 3.3.3
2022-11-08 00:02:05,057:INFO:               numba: 0.55.2
2022-11-08 00:02:05,057:INFO:            requests: 2.28.1
2022-11-08 00:02:05,057:INFO:          matplotlib: 3.6.2
2022-11-08 00:02:05,057:INFO:          scikitplot: 0.3.7
2022-11-08 00:02:05,057:INFO:         yellowbrick: 1.5
2022-11-08 00:02:05,057:INFO:              plotly: 5.11.0
2022-11-08 00:02:05,057:INFO:             kaleido: 0.2.1
2022-11-08 00:02:05,057:INFO:         statsmodels: 0.13.5
2022-11-08 00:02:05,057:INFO:              sktime: 0.13.4
2022-11-08 00:02:05,057:INFO:               tbats: 1.1.1
2022-11-08 00:02:05,057:INFO:            pmdarima: 1.8.5
2022-11-08 00:02:05,057:INFO:              psutil: 5.9.3
2022-11-08 00:02:05,057:INFO:PyCaret optional dependencies:
2022-11-08 00:02:05,065:INFO:                shap: Not installed
2022-11-08 00:02:05,065:INFO:           interpret: Not installed
2022-11-08 00:02:05,065:INFO:                umap: Not installed
2022-11-08 00:02:05,065:INFO:    pandas_profiling: Not installed
2022-11-08 00:02:05,065:INFO:  explainerdashboard: Not installed
2022-11-08 00:02:05,065:INFO:             autoviz: Not installed
2022-11-08 00:02:05,065:INFO:           fairlearn: Not installed
2022-11-08 00:02:05,065:INFO:             xgboost: Not installed
2022-11-08 00:02:05,065:INFO:            catboost: Not installed
2022-11-08 00:02:05,065:INFO:              kmodes: Not installed
2022-11-08 00:02:05,065:INFO:             mlxtend: Not installed
2022-11-08 00:02:05,066:INFO:       statsforecast: Not installed
2022-11-08 00:02:05,066:INFO:        tune_sklearn: Not installed
2022-11-08 00:02:05,066:INFO:                 ray: Not installed
2022-11-08 00:02:05,066:INFO:            hyperopt: Not installed
2022-11-08 00:02:05,066:INFO:              optuna: Not installed
2022-11-08 00:02:05,066:INFO:               skopt: Not installed
2022-11-08 00:02:05,066:INFO:              mlflow: Not installed
2022-11-08 00:02:05,066:INFO:              gradio: Not installed
2022-11-08 00:02:05,066:INFO:             fastapi: Not installed
2022-11-08 00:02:05,066:INFO:             uvicorn: Not installed
2022-11-08 00:02:05,066:INFO:              m2cgen: Not installed
2022-11-08 00:02:05,066:INFO:           evidently: Not installed
2022-11-08 00:02:05,066:INFO:                nltk: Not installed
2022-11-08 00:02:05,067:INFO:            pyLDAvis: Not installed
2022-11-08 00:02:05,067:INFO:              gensim: Not installed
2022-11-08 00:02:05,070:INFO:               spacy: 3.4.2
2022-11-08 00:02:05,070:INFO:           wordcloud: Not installed
2022-11-08 00:02:05,070:INFO:            textblob: Not installed
2022-11-08 00:02:05,070:INFO:               fugue: Not installed
2022-11-08 00:02:05,070:INFO:           streamlit: Not installed
2022-11-08 00:02:05,070:INFO:             prophet: Not installed
2022-11-08 00:02:05,070:INFO:None
2022-11-08 00:02:05,070:INFO:Set up data.
2022-11-08 00:02:05,094:INFO:Set up train/test split.
2022-11-08 00:02:05,104:INFO:Set up index.
2022-11-08 00:02:05,105:INFO:Set up folding strategy.
2022-11-08 00:02:05,105:INFO:Assigning column types.
2022-11-08 00:02:05,110:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-08 00:02:05,110:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,117:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,127:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,372:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:05,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:05,428:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,439:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,446:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,660:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:05,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:05,662:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-11-08 00:02:05,671:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,867:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:05,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:05,877:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,884:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-08 00:02:05,987:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,082:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-11-08 00:02:06,097:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,301:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,398:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,470:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,472:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-11-08 00:02:06,586:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-08 00:02:06,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:06,878:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-08 00:02:07,005:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:07,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-11-08 00:02:07,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,267:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-11-08 00:02:07,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:07,715:INFO:Preparing preprocessing pipeline...
2022-11-08 00:02:07,716:INFO:Set up simple imputation.
2022-11-08 00:02:07,721:INFO:Set up encoding of ordinal features.
2022-11-08 00:02:07,723:INFO:Set up encoding of categorical features.
2022-11-08 00:02:07,724:INFO:Set up variance threshold.
2022-11-08 00:02:08,662:INFO:Finished creating preprocessing pipeline.
2022-11-08 00:02:08,679:INFO:Pipeline: Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'month_number',
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-11-08 00:02:08,679:INFO:Creating final display dataframe.
2022-11-08 00:02:11,707:INFO:Setup display_container:                  Description             Value
0                 Session id                23
1                     Target        totalSales
2                Target type        Regression
3                 Data shape        (14389, 9)
4           Train data shape        (10072, 9)
5            Test data shape         (4317, 9)
6           Ordinal features                 1
7           Numeric features                 5
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              edec
2022-11-08 00:02:11,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:11,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:12,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:12,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-08 00:02:12,198:INFO:setup() successfully completed in 7.15s...............
2022-11-08 00:02:12,198:INFO:Initializing compare_models()
2022-11-08 00:02:12,198:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, include=None, fold=None, round=4, cross_validation=False, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x139957250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-11-08 00:02:12,198:INFO:Checking exceptions
2022-11-08 00:02:12,201:INFO:Preparing display monitor
2022-11-08 00:02:12,371:INFO:Initializing Linear Regression
2022-11-08 00:02:12,371:INFO:Total runtime is 5.650520324707031e-06 minutes
2022-11-08 00:02:12,389:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:12,391:INFO:Initializing create_model()
2022-11-08 00:02:12,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:12,392:INFO:Checking exceptions
2022-11-08 00:02:12,411:INFO:Importing libraries
2022-11-08 00:02:12,411:INFO:Copying training dataset
2022-11-08 00:02:12,417:INFO:Defining folds
2022-11-08 00:02:12,417:INFO:Declaring metric variables
2022-11-08 00:02:12,464:INFO:Importing untrained model
2022-11-08 00:02:12,471:INFO:Linear Regression Imported successfully
2022-11-08 00:02:12,486:INFO:Cross validation set to False
2022-11-08 00:02:12,486:INFO:Fitting Model
2022-11-08 00:02:13,149:INFO:Initializing predict_model()
2022-11-08 00:02:13,150:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13cfc7940>)
2022-11-08 00:02:13,150:INFO:Checking exceptions
2022-11-08 00:02:13,150:INFO:Preloading libraries
2022-11-08 00:02:13,885:INFO:display_container: 2
2022-11-08 00:02:13,888:INFO:LinearRegression(n_jobs=-1)
2022-11-08 00:02:13,888:INFO:create_model() successfully completed......................................
2022-11-08 00:02:14,215:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:14,215:INFO:Creating metrics dataframe
2022-11-08 00:02:14,229:INFO:Initializing Lasso Regression
2022-11-08 00:02:14,229:INFO:Total runtime is 0.030977118015289306 minutes
2022-11-08 00:02:14,237:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:14,238:INFO:Initializing create_model()
2022-11-08 00:02:14,238:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:14,238:INFO:Checking exceptions
2022-11-08 00:02:14,243:INFO:Importing libraries
2022-11-08 00:02:14,243:INFO:Copying training dataset
2022-11-08 00:02:14,253:INFO:Defining folds
2022-11-08 00:02:14,253:INFO:Declaring metric variables
2022-11-08 00:02:14,262:INFO:Importing untrained model
2022-11-08 00:02:14,294:INFO:Lasso Regression Imported successfully
2022-11-08 00:02:14,327:INFO:Cross validation set to False
2022-11-08 00:02:14,327:INFO:Fitting Model
2022-11-08 00:02:14,785:INFO:Initializing predict_model()
2022-11-08 00:02:14,785:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lasso(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x135f66940>)
2022-11-08 00:02:14,785:INFO:Checking exceptions
2022-11-08 00:02:14,785:INFO:Preloading libraries
2022-11-08 00:02:15,200:INFO:display_container: 2
2022-11-08 00:02:15,202:INFO:Lasso(random_state=23)
2022-11-08 00:02:15,203:INFO:create_model() successfully completed......................................
2022-11-08 00:02:15,604:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:15,604:INFO:Creating metrics dataframe
2022-11-08 00:02:15,623:INFO:Initializing Ridge Regression
2022-11-08 00:02:15,623:INFO:Total runtime is 0.05420022010803223 minutes
2022-11-08 00:02:15,628:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:15,629:INFO:Initializing create_model()
2022-11-08 00:02:15,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:15,630:INFO:Checking exceptions
2022-11-08 00:02:15,636:INFO:Importing libraries
2022-11-08 00:02:15,636:INFO:Copying training dataset
2022-11-08 00:02:15,643:INFO:Defining folds
2022-11-08 00:02:15,643:INFO:Declaring metric variables
2022-11-08 00:02:15,655:INFO:Importing untrained model
2022-11-08 00:02:15,690:INFO:Ridge Regression Imported successfully
2022-11-08 00:02:15,703:INFO:Cross validation set to False
2022-11-08 00:02:15,704:INFO:Fitting Model
2022-11-08 00:02:16,126:INFO:Initializing predict_model()
2022-11-08 00:02:16,126:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Ridge(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1347fdd30>)
2022-11-08 00:02:16,126:INFO:Checking exceptions
2022-11-08 00:02:16,126:INFO:Preloading libraries
2022-11-08 00:02:16,551:INFO:display_container: 2
2022-11-08 00:02:16,553:INFO:Ridge(random_state=23)
2022-11-08 00:02:16,553:INFO:create_model() successfully completed......................................
2022-11-08 00:02:16,816:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:16,817:INFO:Creating metrics dataframe
2022-11-08 00:02:16,833:INFO:Initializing Elastic Net
2022-11-08 00:02:16,834:INFO:Total runtime is 0.07438248793284098 minutes
2022-11-08 00:02:16,840:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:16,841:INFO:Initializing create_model()
2022-11-08 00:02:16,841:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:16,842:INFO:Checking exceptions
2022-11-08 00:02:16,846:INFO:Importing libraries
2022-11-08 00:02:16,846:INFO:Copying training dataset
2022-11-08 00:02:16,876:INFO:Defining folds
2022-11-08 00:02:16,877:INFO:Declaring metric variables
2022-11-08 00:02:16,888:INFO:Importing untrained model
2022-11-08 00:02:16,893:INFO:Elastic Net Imported successfully
2022-11-08 00:02:16,902:INFO:Cross validation set to False
2022-11-08 00:02:16,902:INFO:Fitting Model
2022-11-08 00:02:17,243:INFO:Initializing predict_model()
2022-11-08 00:02:17,243:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', ElasticNet(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c559ee0>)
2022-11-08 00:02:17,243:INFO:Checking exceptions
2022-11-08 00:02:17,243:INFO:Preloading libraries
2022-11-08 00:02:17,657:INFO:display_container: 2
2022-11-08 00:02:17,659:INFO:ElasticNet(random_state=23)
2022-11-08 00:02:17,659:INFO:create_model() successfully completed......................................
2022-11-08 00:02:17,927:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:17,927:INFO:Creating metrics dataframe
2022-11-08 00:02:17,945:INFO:Initializing Least Angle Regression
2022-11-08 00:02:17,946:INFO:Total runtime is 0.09291282097498577 minutes
2022-11-08 00:02:17,953:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:17,953:INFO:Initializing create_model()
2022-11-08 00:02:17,954:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:17,954:INFO:Checking exceptions
2022-11-08 00:02:17,958:INFO:Importing libraries
2022-11-08 00:02:17,958:INFO:Copying training dataset
2022-11-08 00:02:17,977:INFO:Defining folds
2022-11-08 00:02:17,980:INFO:Declaring metric variables
2022-11-08 00:02:17,990:INFO:Importing untrained model
2022-11-08 00:02:17,996:INFO:Least Angle Regression Imported successfully
2022-11-08 00:02:18,012:INFO:Cross validation set to False
2022-11-08 00:02:18,012:INFO:Fitting Model
2022-11-08 00:02:18,372:INFO:Initializing predict_model()
2022-11-08 00:02:18,372:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', Lars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c559f70>)
2022-11-08 00:02:18,372:INFO:Checking exceptions
2022-11-08 00:02:18,372:INFO:Preloading libraries
2022-11-08 00:02:18,820:INFO:display_container: 2
2022-11-08 00:02:18,822:INFO:Lars(random_state=23)
2022-11-08 00:02:18,822:INFO:create_model() successfully completed......................................
2022-11-08 00:02:19,055:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:19,055:INFO:Creating metrics dataframe
2022-11-08 00:02:19,075:INFO:Initializing Lasso Least Angle Regression
2022-11-08 00:02:19,076:INFO:Total runtime is 0.1117451826731364 minutes
2022-11-08 00:02:19,080:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:19,081:INFO:Initializing create_model()
2022-11-08 00:02:19,081:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:19,081:INFO:Checking exceptions
2022-11-08 00:02:19,085:INFO:Importing libraries
2022-11-08 00:02:19,085:INFO:Copying training dataset
2022-11-08 00:02:19,102:INFO:Defining folds
2022-11-08 00:02:19,102:INFO:Declaring metric variables
2022-11-08 00:02:19,140:INFO:Importing untrained model
2022-11-08 00:02:19,147:INFO:Lasso Least Angle Regression Imported successfully
2022-11-08 00:02:19,159:INFO:Cross validation set to False
2022-11-08 00:02:19,160:INFO:Fitting Model
2022-11-08 00:02:19,582:INFO:Initializing predict_model()
2022-11-08 00:02:19,582:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LassoLars(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1347fdd30>)
2022-11-08 00:02:19,582:INFO:Checking exceptions
2022-11-08 00:02:19,582:INFO:Preloading libraries
2022-11-08 00:02:19,976:INFO:display_container: 2
2022-11-08 00:02:19,978:INFO:LassoLars(random_state=23)
2022-11-08 00:02:19,979:INFO:create_model() successfully completed......................................
2022-11-08 00:02:20,249:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:20,249:INFO:Creating metrics dataframe
2022-11-08 00:02:20,264:INFO:Initializing Orthogonal Matching Pursuit
2022-11-08 00:02:20,264:INFO:Total runtime is 0.1315539836883545 minutes
2022-11-08 00:02:20,272:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:20,273:INFO:Initializing create_model()
2022-11-08 00:02:20,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:20,273:INFO:Checking exceptions
2022-11-08 00:02:20,277:INFO:Importing libraries
2022-11-08 00:02:20,277:INFO:Copying training dataset
2022-11-08 00:02:20,287:INFO:Defining folds
2022-11-08 00:02:20,287:INFO:Declaring metric variables
2022-11-08 00:02:20,296:INFO:Importing untrained model
2022-11-08 00:02:20,307:INFO:Orthogonal Matching Pursuit Imported successfully
2022-11-08 00:02:20,318:INFO:Cross validation set to False
2022-11-08 00:02:20,318:INFO:Fitting Model
2022-11-08 00:02:20,769:INFO:Initializing predict_model()
2022-11-08 00:02:20,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', OrthogonalMatchingPursuit())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x132ed0ca0>)
2022-11-08 00:02:20,769:INFO:Checking exceptions
2022-11-08 00:02:20,769:INFO:Preloading libraries
2022-11-08 00:02:21,195:INFO:display_container: 2
2022-11-08 00:02:21,197:INFO:OrthogonalMatchingPursuit()
2022-11-08 00:02:21,198:INFO:create_model() successfully completed......................................
2022-11-08 00:02:21,464:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:21,465:INFO:Creating metrics dataframe
2022-11-08 00:02:21,481:INFO:Initializing Bayesian Ridge
2022-11-08 00:02:21,481:INFO:Total runtime is 0.1518433173497518 minutes
2022-11-08 00:02:21,488:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:21,489:INFO:Initializing create_model()
2022-11-08 00:02:21,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:21,489:INFO:Checking exceptions
2022-11-08 00:02:21,493:INFO:Importing libraries
2022-11-08 00:02:21,494:INFO:Copying training dataset
2022-11-08 00:02:21,503:INFO:Defining folds
2022-11-08 00:02:21,503:INFO:Declaring metric variables
2022-11-08 00:02:21,512:INFO:Importing untrained model
2022-11-08 00:02:21,542:INFO:Bayesian Ridge Imported successfully
2022-11-08 00:02:21,576:INFO:Cross validation set to False
2022-11-08 00:02:21,576:INFO:Fitting Model
2022-11-08 00:02:21,910:INFO:Initializing predict_model()
2022-11-08 00:02:21,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1347fdee0>)
2022-11-08 00:02:21,911:INFO:Checking exceptions
2022-11-08 00:02:21,911:INFO:Preloading libraries
2022-11-08 00:02:22,367:INFO:display_container: 2
2022-11-08 00:02:22,369:INFO:BayesianRidge()
2022-11-08 00:02:22,369:INFO:create_model() successfully completed......................................
2022-11-08 00:02:22,598:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:22,599:INFO:Creating metrics dataframe
2022-11-08 00:02:22,616:INFO:Initializing Passive Aggressive Regressor
2022-11-08 00:02:22,616:INFO:Total runtime is 0.17075546979904174 minutes
2022-11-08 00:02:22,624:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:22,624:INFO:Initializing create_model()
2022-11-08 00:02:22,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:22,625:INFO:Checking exceptions
2022-11-08 00:02:22,630:INFO:Importing libraries
2022-11-08 00:02:22,630:INFO:Copying training dataset
2022-11-08 00:02:22,636:INFO:Defining folds
2022-11-08 00:02:22,636:INFO:Declaring metric variables
2022-11-08 00:02:22,651:INFO:Importing untrained model
2022-11-08 00:02:22,659:INFO:Passive Aggressive Regressor Imported successfully
2022-11-08 00:02:22,665:INFO:Cross validation set to False
2022-11-08 00:02:22,666:INFO:Fitting Model
2022-11-08 00:02:23,114:INFO:Initializing predict_model()
2022-11-08 00:02:23,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 PassiveAggressiveRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1394a59d0>)
2022-11-08 00:02:23,114:INFO:Checking exceptions
2022-11-08 00:02:23,114:INFO:Preloading libraries
2022-11-08 00:02:23,544:INFO:display_container: 2
2022-11-08 00:02:23,546:INFO:PassiveAggressiveRegressor(random_state=23)
2022-11-08 00:02:23,546:INFO:create_model() successfully completed......................................
2022-11-08 00:02:23,795:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:23,795:INFO:Creating metrics dataframe
2022-11-08 00:02:23,816:INFO:Initializing Huber Regressor
2022-11-08 00:02:23,816:INFO:Total runtime is 0.19075126647949217 minutes
2022-11-08 00:02:23,821:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:23,821:INFO:Initializing create_model()
2022-11-08 00:02:23,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:23,822:INFO:Checking exceptions
2022-11-08 00:02:23,828:INFO:Importing libraries
2022-11-08 00:02:23,828:INFO:Copying training dataset
2022-11-08 00:02:23,835:INFO:Defining folds
2022-11-08 00:02:23,835:INFO:Declaring metric variables
2022-11-08 00:02:23,850:INFO:Importing untrained model
2022-11-08 00:02:23,867:INFO:Huber Regressor Imported successfully
2022-11-08 00:02:23,896:INFO:Cross validation set to False
2022-11-08 00:02:23,896:INFO:Fitting Model
2022-11-08 00:02:24,515:INFO:Initializing predict_model()
2022-11-08 00:02:24,516:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x138e34940>)
2022-11-08 00:02:24,516:INFO:Checking exceptions
2022-11-08 00:02:24,516:INFO:Preloading libraries
2022-11-08 00:02:24,954:INFO:display_container: 2
2022-11-08 00:02:24,958:INFO:HuberRegressor()
2022-11-08 00:02:24,958:INFO:create_model() successfully completed......................................
2022-11-08 00:02:25,205:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:25,205:INFO:Creating metrics dataframe
2022-11-08 00:02:25,232:INFO:Initializing K Neighbors Regressor
2022-11-08 00:02:25,232:INFO:Total runtime is 0.21435070037841794 minutes
2022-11-08 00:02:25,238:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:25,239:INFO:Initializing create_model()
2022-11-08 00:02:25,246:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:25,246:INFO:Checking exceptions
2022-11-08 00:02:25,249:INFO:Importing libraries
2022-11-08 00:02:25,250:INFO:Copying training dataset
2022-11-08 00:02:25,260:INFO:Defining folds
2022-11-08 00:02:25,261:INFO:Declaring metric variables
2022-11-08 00:02:25,270:INFO:Importing untrained model
2022-11-08 00:02:25,288:INFO:K Neighbors Regressor Imported successfully
2022-11-08 00:02:25,300:INFO:Cross validation set to False
2022-11-08 00:02:25,300:INFO:Fitting Model
2022-11-08 00:02:25,637:INFO:Initializing predict_model()
2022-11-08 00:02:25,637:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', KNeighborsRegressor(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x132ed0ca0>)
2022-11-08 00:02:25,637:INFO:Checking exceptions
2022-11-08 00:02:25,637:INFO:Preloading libraries
2022-11-08 00:02:26,107:INFO:display_container: 2
2022-11-08 00:02:26,110:INFO:KNeighborsRegressor(n_jobs=-1)
2022-11-08 00:02:26,110:INFO:create_model() successfully completed......................................
2022-11-08 00:02:26,337:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:26,337:INFO:Creating metrics dataframe
2022-11-08 00:02:26,365:INFO:Initializing Decision Tree Regressor
2022-11-08 00:02:26,365:INFO:Total runtime is 0.23324099779129026 minutes
2022-11-08 00:02:26,370:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:26,371:INFO:Initializing create_model()
2022-11-08 00:02:26,371:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:26,371:INFO:Checking exceptions
2022-11-08 00:02:26,379:INFO:Importing libraries
2022-11-08 00:02:26,379:INFO:Copying training dataset
2022-11-08 00:02:26,387:INFO:Defining folds
2022-11-08 00:02:26,388:INFO:Declaring metric variables
2022-11-08 00:02:26,395:INFO:Importing untrained model
2022-11-08 00:02:26,466:INFO:Decision Tree Regressor Imported successfully
2022-11-08 00:02:26,515:INFO:Cross validation set to False
2022-11-08 00:02:26,515:INFO:Fitting Model
2022-11-08 00:02:26,937:INFO:Initializing predict_model()
2022-11-08 00:02:26,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DecisionTreeRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x13c559e50>)
2022-11-08 00:02:26,937:INFO:Checking exceptions
2022-11-08 00:02:26,937:INFO:Preloading libraries
2022-11-08 00:02:27,347:INFO:display_container: 2
2022-11-08 00:02:27,349:INFO:DecisionTreeRegressor(random_state=23)
2022-11-08 00:02:27,349:INFO:create_model() successfully completed......................................
2022-11-08 00:02:27,591:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:27,591:INFO:Creating metrics dataframe
2022-11-08 00:02:27,615:INFO:Initializing Random Forest Regressor
2022-11-08 00:02:27,616:INFO:Total runtime is 0.25407975514729814 minutes
2022-11-08 00:02:27,621:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:27,622:INFO:Initializing create_model()
2022-11-08 00:02:27,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:27,622:INFO:Checking exceptions
2022-11-08 00:02:27,628:INFO:Importing libraries
2022-11-08 00:02:27,629:INFO:Copying training dataset
2022-11-08 00:02:27,753:INFO:Defining folds
2022-11-08 00:02:27,753:INFO:Declaring metric variables
2022-11-08 00:02:27,802:INFO:Importing untrained model
2022-11-08 00:02:27,825:INFO:Random Forest Regressor Imported successfully
2022-11-08 00:02:27,833:INFO:Cross validation set to False
2022-11-08 00:02:27,834:INFO:Fitting Model
2022-11-08 00:02:30,276:INFO:Initializing predict_model()
2022-11-08 00:02:30,276:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 RandomForestRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1394a59d0>)
2022-11-08 00:02:30,276:INFO:Checking exceptions
2022-11-08 00:02:30,276:INFO:Preloading libraries
2022-11-08 00:02:30,722:INFO:display_container: 2
2022-11-08 00:02:30,724:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-08 00:02:30,724:INFO:create_model() successfully completed......................................
2022-11-08 00:02:30,966:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:30,966:INFO:Creating metrics dataframe
2022-11-08 00:02:31,001:INFO:Initializing Extra Trees Regressor
2022-11-08 00:02:31,001:INFO:Total runtime is 0.310498301188151 minutes
2022-11-08 00:02:31,006:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:31,006:INFO:Initializing create_model()
2022-11-08 00:02:31,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:31,006:INFO:Checking exceptions
2022-11-08 00:02:31,010:INFO:Importing libraries
2022-11-08 00:02:31,010:INFO:Copying training dataset
2022-11-08 00:02:31,020:INFO:Defining folds
2022-11-08 00:02:31,021:INFO:Declaring metric variables
2022-11-08 00:02:31,025:INFO:Importing untrained model
2022-11-08 00:02:31,056:INFO:Extra Trees Regressor Imported successfully
2022-11-08 00:02:31,074:INFO:Cross validation set to False
2022-11-08 00:02:31,074:INFO:Fitting Model
2022-11-08 00:02:32,964:INFO:Initializing predict_model()
2022-11-08 00:02:32,964:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x132ed0ca0>)
2022-11-08 00:02:32,964:INFO:Checking exceptions
2022-11-08 00:02:32,964:INFO:Preloading libraries
2022-11-08 00:02:33,480:INFO:display_container: 2
2022-11-08 00:02:33,485:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=23)
2022-11-08 00:02:33,487:INFO:create_model() successfully completed......................................
2022-11-08 00:02:33,752:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:33,752:INFO:Creating metrics dataframe
2022-11-08 00:02:33,775:INFO:Initializing AdaBoost Regressor
2022-11-08 00:02:33,775:INFO:Total runtime is 0.35673635005950927 minutes
2022-11-08 00:02:33,780:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:33,780:INFO:Initializing create_model()
2022-11-08 00:02:33,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:33,781:INFO:Checking exceptions
2022-11-08 00:02:33,788:INFO:Importing libraries
2022-11-08 00:02:33,788:INFO:Copying training dataset
2022-11-08 00:02:33,802:INFO:Defining folds
2022-11-08 00:02:33,803:INFO:Declaring metric variables
2022-11-08 00:02:33,814:INFO:Importing untrained model
2022-11-08 00:02:33,828:INFO:AdaBoost Regressor Imported successfully
2022-11-08 00:02:33,847:INFO:Cross validation set to False
2022-11-08 00:02:33,847:INFO:Fitting Model
2022-11-08 00:02:34,563:INFO:Initializing predict_model()
2022-11-08 00:02:34,564:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', AdaBoostRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1347fdc10>)
2022-11-08 00:02:34,564:INFO:Checking exceptions
2022-11-08 00:02:34,564:INFO:Preloading libraries
2022-11-08 00:02:35,142:INFO:display_container: 2
2022-11-08 00:02:35,144:INFO:AdaBoostRegressor(random_state=23)
2022-11-08 00:02:35,144:INFO:create_model() successfully completed......................................
2022-11-08 00:02:35,409:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:35,409:INFO:Creating metrics dataframe
2022-11-08 00:02:35,431:INFO:Initializing Gradient Boosting Regressor
2022-11-08 00:02:35,431:INFO:Total runtime is 0.3843359669049581 minutes
2022-11-08 00:02:35,443:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:35,444:INFO:Initializing create_model()
2022-11-08 00:02:35,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:35,444:INFO:Checking exceptions
2022-11-08 00:02:35,449:INFO:Importing libraries
2022-11-08 00:02:35,449:INFO:Copying training dataset
2022-11-08 00:02:35,458:INFO:Defining folds
2022-11-08 00:02:35,458:INFO:Declaring metric variables
2022-11-08 00:02:35,465:INFO:Importing untrained model
2022-11-08 00:02:35,472:INFO:Gradient Boosting Regressor Imported successfully
2022-11-08 00:02:35,506:INFO:Cross validation set to False
2022-11-08 00:02:35,507:INFO:Fitting Model
2022-11-08 00:02:37,361:INFO:Initializing predict_model()
2022-11-08 00:02:37,361:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1394a5550>)
2022-11-08 00:02:37,361:INFO:Checking exceptions
2022-11-08 00:02:37,361:INFO:Preloading libraries
2022-11-08 00:02:37,784:INFO:display_container: 2
2022-11-08 00:02:37,806:INFO:GradientBoostingRegressor(random_state=23)
2022-11-08 00:02:37,806:INFO:create_model() successfully completed......................................
2022-11-08 00:02:38,049:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:38,049:INFO:Creating metrics dataframe
2022-11-08 00:02:38,068:INFO:Initializing Light Gradient Boosting Machine
2022-11-08 00:02:38,068:INFO:Total runtime is 0.42829081614812214 minutes
2022-11-08 00:02:38,076:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:38,077:INFO:Initializing create_model()
2022-11-08 00:02:38,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:38,077:INFO:Checking exceptions
2022-11-08 00:02:38,081:INFO:Importing libraries
2022-11-08 00:02:38,081:INFO:Copying training dataset
2022-11-08 00:02:38,090:INFO:Defining folds
2022-11-08 00:02:38,090:INFO:Declaring metric variables
2022-11-08 00:02:38,107:INFO:Importing untrained model
2022-11-08 00:02:38,116:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-08 00:02:38,133:INFO:Cross validation set to False
2022-11-08 00:02:38,133:INFO:Fitting Model
2022-11-08 00:02:38,927:INFO:Initializing predict_model()
2022-11-08 00:02:38,928:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', LGBMRegressor(random_state=23))]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x139757e50>)
2022-11-08 00:02:38,928:INFO:Checking exceptions
2022-11-08 00:02:38,928:INFO:Preloading libraries
2022-11-08 00:02:39,553:INFO:display_container: 2
2022-11-08 00:02:39,562:INFO:LGBMRegressor(random_state=23)
2022-11-08 00:02:39,562:INFO:create_model() successfully completed......................................
2022-11-08 00:02:39,809:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:39,809:INFO:Creating metrics dataframe
2022-11-08 00:02:39,829:INFO:Initializing Dummy Regressor
2022-11-08 00:02:39,829:INFO:Total runtime is 0.45763525168100994 minutes
2022-11-08 00:02:39,834:INFO:SubProcess create_model() called ==================================
2022-11-08 00:02:39,834:INFO:Initializing create_model()
2022-11-08 00:02:39,835:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x110891100>, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:39,835:INFO:Checking exceptions
2022-11-08 00:02:39,838:INFO:Importing libraries
2022-11-08 00:02:39,838:INFO:Copying training dataset
2022-11-08 00:02:39,850:INFO:Defining folds
2022-11-08 00:02:39,851:INFO:Declaring metric variables
2022-11-08 00:02:39,863:INFO:Importing untrained model
2022-11-08 00:02:39,871:INFO:Dummy Regressor Imported successfully
2022-11-08 00:02:39,888:INFO:Cross validation set to False
2022-11-08 00:02:39,888:INFO:Fitting Model
2022-11-08 00:02:40,229:INFO:Initializing predict_model()
2022-11-08 00:02:40,229:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=Pipeline(memory=Memory(location=/var/folders/h_/b3djvtq56fd291ffr9782w0h0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['day_of_year', 'unit_price_USD',
                                             'week_of_year', 'day_of_month',
                                             'stock'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['category', 'macroCategory',
                                             'month_number'],
                                    transformer...
                                                                         'mapping': {nan: -1,
                                                                                     '01': 0,
                                                                                     '02': 1}}]))),
                ('rest_encoding',
                 TransformerWrapper(include=['category', 'macroCategory'],
                                    transformer=LeaveOneOutEncoder(cols=['category',
                                                                         'macroCategory'],
                                                                   handle_missing='return_nan',
                                                                   random_state=23))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ('actual_estimator', DummyRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=False, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1394a5550>)
2022-11-08 00:02:40,229:INFO:Checking exceptions
2022-11-08 00:02:40,229:INFO:Preloading libraries
2022-11-08 00:02:40,655:INFO:display_container: 2
2022-11-08 00:02:40,660:INFO:DummyRegressor()
2022-11-08 00:02:40,660:INFO:create_model() successfully completed......................................
2022-11-08 00:02:40,903:INFO:SubProcess create_model() end ==================================
2022-11-08 00:02:40,903:INFO:Creating metrics dataframe
2022-11-08 00:02:41,078:INFO:Initializing create_model()
2022-11-08 00:02:41,078:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x139957250>, estimator=RandomForestRegressor(n_jobs=-1, random_state=23), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-08 00:02:41,079:INFO:Checking exceptions
2022-11-08 00:02:41,085:INFO:Importing libraries
2022-11-08 00:02:41,085:INFO:Copying training dataset
2022-11-08 00:02:41,114:INFO:Defining folds
2022-11-08 00:02:41,114:INFO:Declaring metric variables
2022-11-08 00:02:41,115:INFO:Importing untrained model
2022-11-08 00:02:41,115:INFO:Declaring custom model
2022-11-08 00:02:41,116:INFO:Random Forest Regressor Imported successfully
2022-11-08 00:02:41,118:INFO:Cross validation set to False
2022-11-08 00:02:41,118:INFO:Fitting Model
2022-11-08 00:02:43,559:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-08 00:02:43,559:INFO:create_model() successfully completed......................................
2022-11-08 00:02:43,870:INFO:master_model_container: 0
2022-11-08 00:02:43,870:INFO:display_container: 2
2022-11-08 00:02:43,871:INFO:RandomForestRegressor(n_jobs=-1, random_state=23)
2022-11-08 00:02:43,871:INFO:compare_models() successfully completed......................................
